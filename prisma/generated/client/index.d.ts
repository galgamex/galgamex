
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model user
 * 
 */
export type user = $Result.DefaultSelection<Prisma.$userPayload>
/**
 * Model admin_log
 * 
 */
export type admin_log = $Result.DefaultSelection<Prisma.$admin_logPayload>
/**
 * Model user_follow_relation
 * 
 */
export type user_follow_relation = $Result.DefaultSelection<Prisma.$user_follow_relationPayload>
/**
 * Model user_message
 * 
 */
export type user_message = $Result.DefaultSelection<Prisma.$user_messagePayload>
/**
 * Model user_patch_favorite_folder
 * 
 */
export type user_patch_favorite_folder = $Result.DefaultSelection<Prisma.$user_patch_favorite_folderPayload>
/**
 * Model user_patch_favorite_folder_relation
 * 
 */
export type user_patch_favorite_folder_relation = $Result.DefaultSelection<Prisma.$user_patch_favorite_folder_relationPayload>
/**
 * Model user_patch_comment_like_relation
 * 
 */
export type user_patch_comment_like_relation = $Result.DefaultSelection<Prisma.$user_patch_comment_like_relationPayload>
/**
 * Model user_patch_resource_like_relation
 * 
 */
export type user_patch_resource_like_relation = $Result.DefaultSelection<Prisma.$user_patch_resource_like_relationPayload>
/**
 * Model patch
 * 
 */
export type patch = $Result.DefaultSelection<Prisma.$patchPayload>
/**
 * Model patch_alias
 * 
 */
export type patch_alias = $Result.DefaultSelection<Prisma.$patch_aliasPayload>
/**
 * Model patch_tag
 * 
 */
export type patch_tag = $Result.DefaultSelection<Prisma.$patch_tagPayload>
/**
 * Model patch_tag_relation
 * 
 */
export type patch_tag_relation = $Result.DefaultSelection<Prisma.$patch_tag_relationPayload>
/**
 * Model patch_resource
 * 
 */
export type patch_resource = $Result.DefaultSelection<Prisma.$patch_resourcePayload>
/**
 * Model patch_comment
 * 
 */
export type patch_comment = $Result.DefaultSelection<Prisma.$patch_commentPayload>
/**
 * Model patch_character
 * 
 */
export type patch_character = $Result.DefaultSelection<Prisma.$patch_characterPayload>

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Users
 * const users = await prisma.user.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Users
   * const users = await prisma.user.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb, ExtArgs, $Utils.Call<Prisma.TypeMapCb, {
    extArgs: ExtArgs
  }>, ClientOptions>

      /**
   * `prisma.user`: Exposes CRUD operations for the **user** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.userDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.admin_log`: Exposes CRUD operations for the **admin_log** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Admin_logs
    * const admin_logs = await prisma.admin_log.findMany()
    * ```
    */
  get admin_log(): Prisma.admin_logDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user_follow_relation`: Exposes CRUD operations for the **user_follow_relation** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more User_follow_relations
    * const user_follow_relations = await prisma.user_follow_relation.findMany()
    * ```
    */
  get user_follow_relation(): Prisma.user_follow_relationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user_message`: Exposes CRUD operations for the **user_message** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more User_messages
    * const user_messages = await prisma.user_message.findMany()
    * ```
    */
  get user_message(): Prisma.user_messageDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user_patch_favorite_folder`: Exposes CRUD operations for the **user_patch_favorite_folder** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more User_patch_favorite_folders
    * const user_patch_favorite_folders = await prisma.user_patch_favorite_folder.findMany()
    * ```
    */
  get user_patch_favorite_folder(): Prisma.user_patch_favorite_folderDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user_patch_favorite_folder_relation`: Exposes CRUD operations for the **user_patch_favorite_folder_relation** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more User_patch_favorite_folder_relations
    * const user_patch_favorite_folder_relations = await prisma.user_patch_favorite_folder_relation.findMany()
    * ```
    */
  get user_patch_favorite_folder_relation(): Prisma.user_patch_favorite_folder_relationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user_patch_comment_like_relation`: Exposes CRUD operations for the **user_patch_comment_like_relation** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more User_patch_comment_like_relations
    * const user_patch_comment_like_relations = await prisma.user_patch_comment_like_relation.findMany()
    * ```
    */
  get user_patch_comment_like_relation(): Prisma.user_patch_comment_like_relationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user_patch_resource_like_relation`: Exposes CRUD operations for the **user_patch_resource_like_relation** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more User_patch_resource_like_relations
    * const user_patch_resource_like_relations = await prisma.user_patch_resource_like_relation.findMany()
    * ```
    */
  get user_patch_resource_like_relation(): Prisma.user_patch_resource_like_relationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.patch`: Exposes CRUD operations for the **patch** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Patches
    * const patches = await prisma.patch.findMany()
    * ```
    */
  get patch(): Prisma.patchDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.patch_alias`: Exposes CRUD operations for the **patch_alias** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Patch_aliases
    * const patch_aliases = await prisma.patch_alias.findMany()
    * ```
    */
  get patch_alias(): Prisma.patch_aliasDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.patch_tag`: Exposes CRUD operations for the **patch_tag** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Patch_tags
    * const patch_tags = await prisma.patch_tag.findMany()
    * ```
    */
  get patch_tag(): Prisma.patch_tagDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.patch_tag_relation`: Exposes CRUD operations for the **patch_tag_relation** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Patch_tag_relations
    * const patch_tag_relations = await prisma.patch_tag_relation.findMany()
    * ```
    */
  get patch_tag_relation(): Prisma.patch_tag_relationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.patch_resource`: Exposes CRUD operations for the **patch_resource** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Patch_resources
    * const patch_resources = await prisma.patch_resource.findMany()
    * ```
    */
  get patch_resource(): Prisma.patch_resourceDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.patch_comment`: Exposes CRUD operations for the **patch_comment** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Patch_comments
    * const patch_comments = await prisma.patch_comment.findMany()
    * ```
    */
  get patch_comment(): Prisma.patch_commentDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.patch_character`: Exposes CRUD operations for the **patch_character** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Patch_characters
    * const patch_characters = await prisma.patch_character.findMany()
    * ```
    */
  get patch_character(): Prisma.patch_characterDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.2.1
   * Query Engine version: 4123509d24aa4dede1e864b46351bf2790323b69
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    user: 'user',
    admin_log: 'admin_log',
    user_follow_relation: 'user_follow_relation',
    user_message: 'user_message',
    user_patch_favorite_folder: 'user_patch_favorite_folder',
    user_patch_favorite_folder_relation: 'user_patch_favorite_folder_relation',
    user_patch_comment_like_relation: 'user_patch_comment_like_relation',
    user_patch_resource_like_relation: 'user_patch_resource_like_relation',
    patch: 'patch',
    patch_alias: 'patch_alias',
    patch_tag: 'patch_tag',
    patch_tag_relation: 'patch_tag_relation',
    patch_resource: 'patch_resource',
    patch_comment: 'patch_comment',
    patch_character: 'patch_character'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs, clientOptions: PrismaClientOptions }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], this['params']['clientOptions']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> = {
    meta: {
      modelProps: "user" | "admin_log" | "user_follow_relation" | "user_message" | "user_patch_favorite_folder" | "user_patch_favorite_folder_relation" | "user_patch_comment_like_relation" | "user_patch_resource_like_relation" | "patch" | "patch_alias" | "patch_tag" | "patch_tag_relation" | "patch_resource" | "patch_comment" | "patch_character"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      user: {
        payload: Prisma.$userPayload<ExtArgs>
        fields: Prisma.userFieldRefs
        operations: {
          findUnique: {
            args: Prisma.userFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.userFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload>
          }
          findFirst: {
            args: Prisma.userFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.userFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload>
          }
          findMany: {
            args: Prisma.userFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload>[]
          }
          create: {
            args: Prisma.userCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload>
          }
          createMany: {
            args: Prisma.userCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.userCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload>[]
          }
          delete: {
            args: Prisma.userDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload>
          }
          update: {
            args: Prisma.userUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload>
          }
          deleteMany: {
            args: Prisma.userDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.userUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.userUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload>[]
          }
          upsert: {
            args: Prisma.userUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$userPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.userGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.userCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      admin_log: {
        payload: Prisma.$admin_logPayload<ExtArgs>
        fields: Prisma.admin_logFieldRefs
        operations: {
          findUnique: {
            args: Prisma.admin_logFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$admin_logPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.admin_logFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$admin_logPayload>
          }
          findFirst: {
            args: Prisma.admin_logFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$admin_logPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.admin_logFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$admin_logPayload>
          }
          findMany: {
            args: Prisma.admin_logFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$admin_logPayload>[]
          }
          create: {
            args: Prisma.admin_logCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$admin_logPayload>
          }
          createMany: {
            args: Prisma.admin_logCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.admin_logCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$admin_logPayload>[]
          }
          delete: {
            args: Prisma.admin_logDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$admin_logPayload>
          }
          update: {
            args: Prisma.admin_logUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$admin_logPayload>
          }
          deleteMany: {
            args: Prisma.admin_logDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.admin_logUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.admin_logUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$admin_logPayload>[]
          }
          upsert: {
            args: Prisma.admin_logUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$admin_logPayload>
          }
          aggregate: {
            args: Prisma.Admin_logAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAdmin_log>
          }
          groupBy: {
            args: Prisma.admin_logGroupByArgs<ExtArgs>
            result: $Utils.Optional<Admin_logGroupByOutputType>[]
          }
          count: {
            args: Prisma.admin_logCountArgs<ExtArgs>
            result: $Utils.Optional<Admin_logCountAggregateOutputType> | number
          }
        }
      }
      user_follow_relation: {
        payload: Prisma.$user_follow_relationPayload<ExtArgs>
        fields: Prisma.user_follow_relationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.user_follow_relationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_follow_relationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.user_follow_relationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_follow_relationPayload>
          }
          findFirst: {
            args: Prisma.user_follow_relationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_follow_relationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.user_follow_relationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_follow_relationPayload>
          }
          findMany: {
            args: Prisma.user_follow_relationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_follow_relationPayload>[]
          }
          create: {
            args: Prisma.user_follow_relationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_follow_relationPayload>
          }
          createMany: {
            args: Prisma.user_follow_relationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.user_follow_relationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_follow_relationPayload>[]
          }
          delete: {
            args: Prisma.user_follow_relationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_follow_relationPayload>
          }
          update: {
            args: Prisma.user_follow_relationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_follow_relationPayload>
          }
          deleteMany: {
            args: Prisma.user_follow_relationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.user_follow_relationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.user_follow_relationUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_follow_relationPayload>[]
          }
          upsert: {
            args: Prisma.user_follow_relationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_follow_relationPayload>
          }
          aggregate: {
            args: Prisma.User_follow_relationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser_follow_relation>
          }
          groupBy: {
            args: Prisma.user_follow_relationGroupByArgs<ExtArgs>
            result: $Utils.Optional<User_follow_relationGroupByOutputType>[]
          }
          count: {
            args: Prisma.user_follow_relationCountArgs<ExtArgs>
            result: $Utils.Optional<User_follow_relationCountAggregateOutputType> | number
          }
        }
      }
      user_message: {
        payload: Prisma.$user_messagePayload<ExtArgs>
        fields: Prisma.user_messageFieldRefs
        operations: {
          findUnique: {
            args: Prisma.user_messageFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_messagePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.user_messageFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_messagePayload>
          }
          findFirst: {
            args: Prisma.user_messageFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_messagePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.user_messageFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_messagePayload>
          }
          findMany: {
            args: Prisma.user_messageFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_messagePayload>[]
          }
          create: {
            args: Prisma.user_messageCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_messagePayload>
          }
          createMany: {
            args: Prisma.user_messageCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.user_messageCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_messagePayload>[]
          }
          delete: {
            args: Prisma.user_messageDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_messagePayload>
          }
          update: {
            args: Prisma.user_messageUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_messagePayload>
          }
          deleteMany: {
            args: Prisma.user_messageDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.user_messageUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.user_messageUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_messagePayload>[]
          }
          upsert: {
            args: Prisma.user_messageUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_messagePayload>
          }
          aggregate: {
            args: Prisma.User_messageAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser_message>
          }
          groupBy: {
            args: Prisma.user_messageGroupByArgs<ExtArgs>
            result: $Utils.Optional<User_messageGroupByOutputType>[]
          }
          count: {
            args: Prisma.user_messageCountArgs<ExtArgs>
            result: $Utils.Optional<User_messageCountAggregateOutputType> | number
          }
        }
      }
      user_patch_favorite_folder: {
        payload: Prisma.$user_patch_favorite_folderPayload<ExtArgs>
        fields: Prisma.user_patch_favorite_folderFieldRefs
        operations: {
          findUnique: {
            args: Prisma.user_patch_favorite_folderFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_patch_favorite_folderPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.user_patch_favorite_folderFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_patch_favorite_folderPayload>
          }
          findFirst: {
            args: Prisma.user_patch_favorite_folderFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_patch_favorite_folderPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.user_patch_favorite_folderFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_patch_favorite_folderPayload>
          }
          findMany: {
            args: Prisma.user_patch_favorite_folderFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_patch_favorite_folderPayload>[]
          }
          create: {
            args: Prisma.user_patch_favorite_folderCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_patch_favorite_folderPayload>
          }
          createMany: {
            args: Prisma.user_patch_favorite_folderCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.user_patch_favorite_folderCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_patch_favorite_folderPayload>[]
          }
          delete: {
            args: Prisma.user_patch_favorite_folderDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_patch_favorite_folderPayload>
          }
          update: {
            args: Prisma.user_patch_favorite_folderUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_patch_favorite_folderPayload>
          }
          deleteMany: {
            args: Prisma.user_patch_favorite_folderDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.user_patch_favorite_folderUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.user_patch_favorite_folderUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_patch_favorite_folderPayload>[]
          }
          upsert: {
            args: Prisma.user_patch_favorite_folderUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_patch_favorite_folderPayload>
          }
          aggregate: {
            args: Prisma.User_patch_favorite_folderAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser_patch_favorite_folder>
          }
          groupBy: {
            args: Prisma.user_patch_favorite_folderGroupByArgs<ExtArgs>
            result: $Utils.Optional<User_patch_favorite_folderGroupByOutputType>[]
          }
          count: {
            args: Prisma.user_patch_favorite_folderCountArgs<ExtArgs>
            result: $Utils.Optional<User_patch_favorite_folderCountAggregateOutputType> | number
          }
        }
      }
      user_patch_favorite_folder_relation: {
        payload: Prisma.$user_patch_favorite_folder_relationPayload<ExtArgs>
        fields: Prisma.user_patch_favorite_folder_relationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.user_patch_favorite_folder_relationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_patch_favorite_folder_relationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.user_patch_favorite_folder_relationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_patch_favorite_folder_relationPayload>
          }
          findFirst: {
            args: Prisma.user_patch_favorite_folder_relationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_patch_favorite_folder_relationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.user_patch_favorite_folder_relationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_patch_favorite_folder_relationPayload>
          }
          findMany: {
            args: Prisma.user_patch_favorite_folder_relationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_patch_favorite_folder_relationPayload>[]
          }
          create: {
            args: Prisma.user_patch_favorite_folder_relationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_patch_favorite_folder_relationPayload>
          }
          createMany: {
            args: Prisma.user_patch_favorite_folder_relationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.user_patch_favorite_folder_relationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_patch_favorite_folder_relationPayload>[]
          }
          delete: {
            args: Prisma.user_patch_favorite_folder_relationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_patch_favorite_folder_relationPayload>
          }
          update: {
            args: Prisma.user_patch_favorite_folder_relationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_patch_favorite_folder_relationPayload>
          }
          deleteMany: {
            args: Prisma.user_patch_favorite_folder_relationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.user_patch_favorite_folder_relationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.user_patch_favorite_folder_relationUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_patch_favorite_folder_relationPayload>[]
          }
          upsert: {
            args: Prisma.user_patch_favorite_folder_relationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_patch_favorite_folder_relationPayload>
          }
          aggregate: {
            args: Prisma.User_patch_favorite_folder_relationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser_patch_favorite_folder_relation>
          }
          groupBy: {
            args: Prisma.user_patch_favorite_folder_relationGroupByArgs<ExtArgs>
            result: $Utils.Optional<User_patch_favorite_folder_relationGroupByOutputType>[]
          }
          count: {
            args: Prisma.user_patch_favorite_folder_relationCountArgs<ExtArgs>
            result: $Utils.Optional<User_patch_favorite_folder_relationCountAggregateOutputType> | number
          }
        }
      }
      user_patch_comment_like_relation: {
        payload: Prisma.$user_patch_comment_like_relationPayload<ExtArgs>
        fields: Prisma.user_patch_comment_like_relationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.user_patch_comment_like_relationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_patch_comment_like_relationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.user_patch_comment_like_relationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_patch_comment_like_relationPayload>
          }
          findFirst: {
            args: Prisma.user_patch_comment_like_relationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_patch_comment_like_relationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.user_patch_comment_like_relationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_patch_comment_like_relationPayload>
          }
          findMany: {
            args: Prisma.user_patch_comment_like_relationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_patch_comment_like_relationPayload>[]
          }
          create: {
            args: Prisma.user_patch_comment_like_relationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_patch_comment_like_relationPayload>
          }
          createMany: {
            args: Prisma.user_patch_comment_like_relationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.user_patch_comment_like_relationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_patch_comment_like_relationPayload>[]
          }
          delete: {
            args: Prisma.user_patch_comment_like_relationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_patch_comment_like_relationPayload>
          }
          update: {
            args: Prisma.user_patch_comment_like_relationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_patch_comment_like_relationPayload>
          }
          deleteMany: {
            args: Prisma.user_patch_comment_like_relationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.user_patch_comment_like_relationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.user_patch_comment_like_relationUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_patch_comment_like_relationPayload>[]
          }
          upsert: {
            args: Prisma.user_patch_comment_like_relationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_patch_comment_like_relationPayload>
          }
          aggregate: {
            args: Prisma.User_patch_comment_like_relationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser_patch_comment_like_relation>
          }
          groupBy: {
            args: Prisma.user_patch_comment_like_relationGroupByArgs<ExtArgs>
            result: $Utils.Optional<User_patch_comment_like_relationGroupByOutputType>[]
          }
          count: {
            args: Prisma.user_patch_comment_like_relationCountArgs<ExtArgs>
            result: $Utils.Optional<User_patch_comment_like_relationCountAggregateOutputType> | number
          }
        }
      }
      user_patch_resource_like_relation: {
        payload: Prisma.$user_patch_resource_like_relationPayload<ExtArgs>
        fields: Prisma.user_patch_resource_like_relationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.user_patch_resource_like_relationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_patch_resource_like_relationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.user_patch_resource_like_relationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_patch_resource_like_relationPayload>
          }
          findFirst: {
            args: Prisma.user_patch_resource_like_relationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_patch_resource_like_relationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.user_patch_resource_like_relationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_patch_resource_like_relationPayload>
          }
          findMany: {
            args: Prisma.user_patch_resource_like_relationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_patch_resource_like_relationPayload>[]
          }
          create: {
            args: Prisma.user_patch_resource_like_relationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_patch_resource_like_relationPayload>
          }
          createMany: {
            args: Prisma.user_patch_resource_like_relationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.user_patch_resource_like_relationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_patch_resource_like_relationPayload>[]
          }
          delete: {
            args: Prisma.user_patch_resource_like_relationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_patch_resource_like_relationPayload>
          }
          update: {
            args: Prisma.user_patch_resource_like_relationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_patch_resource_like_relationPayload>
          }
          deleteMany: {
            args: Prisma.user_patch_resource_like_relationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.user_patch_resource_like_relationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.user_patch_resource_like_relationUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_patch_resource_like_relationPayload>[]
          }
          upsert: {
            args: Prisma.user_patch_resource_like_relationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_patch_resource_like_relationPayload>
          }
          aggregate: {
            args: Prisma.User_patch_resource_like_relationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser_patch_resource_like_relation>
          }
          groupBy: {
            args: Prisma.user_patch_resource_like_relationGroupByArgs<ExtArgs>
            result: $Utils.Optional<User_patch_resource_like_relationGroupByOutputType>[]
          }
          count: {
            args: Prisma.user_patch_resource_like_relationCountArgs<ExtArgs>
            result: $Utils.Optional<User_patch_resource_like_relationCountAggregateOutputType> | number
          }
        }
      }
      patch: {
        payload: Prisma.$patchPayload<ExtArgs>
        fields: Prisma.patchFieldRefs
        operations: {
          findUnique: {
            args: Prisma.patchFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$patchPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.patchFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$patchPayload>
          }
          findFirst: {
            args: Prisma.patchFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$patchPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.patchFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$patchPayload>
          }
          findMany: {
            args: Prisma.patchFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$patchPayload>[]
          }
          create: {
            args: Prisma.patchCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$patchPayload>
          }
          createMany: {
            args: Prisma.patchCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.patchCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$patchPayload>[]
          }
          delete: {
            args: Prisma.patchDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$patchPayload>
          }
          update: {
            args: Prisma.patchUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$patchPayload>
          }
          deleteMany: {
            args: Prisma.patchDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.patchUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.patchUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$patchPayload>[]
          }
          upsert: {
            args: Prisma.patchUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$patchPayload>
          }
          aggregate: {
            args: Prisma.PatchAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePatch>
          }
          groupBy: {
            args: Prisma.patchGroupByArgs<ExtArgs>
            result: $Utils.Optional<PatchGroupByOutputType>[]
          }
          count: {
            args: Prisma.patchCountArgs<ExtArgs>
            result: $Utils.Optional<PatchCountAggregateOutputType> | number
          }
        }
      }
      patch_alias: {
        payload: Prisma.$patch_aliasPayload<ExtArgs>
        fields: Prisma.patch_aliasFieldRefs
        operations: {
          findUnique: {
            args: Prisma.patch_aliasFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$patch_aliasPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.patch_aliasFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$patch_aliasPayload>
          }
          findFirst: {
            args: Prisma.patch_aliasFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$patch_aliasPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.patch_aliasFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$patch_aliasPayload>
          }
          findMany: {
            args: Prisma.patch_aliasFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$patch_aliasPayload>[]
          }
          create: {
            args: Prisma.patch_aliasCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$patch_aliasPayload>
          }
          createMany: {
            args: Prisma.patch_aliasCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.patch_aliasCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$patch_aliasPayload>[]
          }
          delete: {
            args: Prisma.patch_aliasDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$patch_aliasPayload>
          }
          update: {
            args: Prisma.patch_aliasUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$patch_aliasPayload>
          }
          deleteMany: {
            args: Prisma.patch_aliasDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.patch_aliasUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.patch_aliasUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$patch_aliasPayload>[]
          }
          upsert: {
            args: Prisma.patch_aliasUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$patch_aliasPayload>
          }
          aggregate: {
            args: Prisma.Patch_aliasAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePatch_alias>
          }
          groupBy: {
            args: Prisma.patch_aliasGroupByArgs<ExtArgs>
            result: $Utils.Optional<Patch_aliasGroupByOutputType>[]
          }
          count: {
            args: Prisma.patch_aliasCountArgs<ExtArgs>
            result: $Utils.Optional<Patch_aliasCountAggregateOutputType> | number
          }
        }
      }
      patch_tag: {
        payload: Prisma.$patch_tagPayload<ExtArgs>
        fields: Prisma.patch_tagFieldRefs
        operations: {
          findUnique: {
            args: Prisma.patch_tagFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$patch_tagPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.patch_tagFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$patch_tagPayload>
          }
          findFirst: {
            args: Prisma.patch_tagFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$patch_tagPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.patch_tagFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$patch_tagPayload>
          }
          findMany: {
            args: Prisma.patch_tagFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$patch_tagPayload>[]
          }
          create: {
            args: Prisma.patch_tagCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$patch_tagPayload>
          }
          createMany: {
            args: Prisma.patch_tagCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.patch_tagCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$patch_tagPayload>[]
          }
          delete: {
            args: Prisma.patch_tagDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$patch_tagPayload>
          }
          update: {
            args: Prisma.patch_tagUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$patch_tagPayload>
          }
          deleteMany: {
            args: Prisma.patch_tagDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.patch_tagUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.patch_tagUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$patch_tagPayload>[]
          }
          upsert: {
            args: Prisma.patch_tagUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$patch_tagPayload>
          }
          aggregate: {
            args: Prisma.Patch_tagAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePatch_tag>
          }
          groupBy: {
            args: Prisma.patch_tagGroupByArgs<ExtArgs>
            result: $Utils.Optional<Patch_tagGroupByOutputType>[]
          }
          count: {
            args: Prisma.patch_tagCountArgs<ExtArgs>
            result: $Utils.Optional<Patch_tagCountAggregateOutputType> | number
          }
        }
      }
      patch_tag_relation: {
        payload: Prisma.$patch_tag_relationPayload<ExtArgs>
        fields: Prisma.patch_tag_relationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.patch_tag_relationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$patch_tag_relationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.patch_tag_relationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$patch_tag_relationPayload>
          }
          findFirst: {
            args: Prisma.patch_tag_relationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$patch_tag_relationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.patch_tag_relationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$patch_tag_relationPayload>
          }
          findMany: {
            args: Prisma.patch_tag_relationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$patch_tag_relationPayload>[]
          }
          create: {
            args: Prisma.patch_tag_relationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$patch_tag_relationPayload>
          }
          createMany: {
            args: Prisma.patch_tag_relationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.patch_tag_relationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$patch_tag_relationPayload>[]
          }
          delete: {
            args: Prisma.patch_tag_relationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$patch_tag_relationPayload>
          }
          update: {
            args: Prisma.patch_tag_relationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$patch_tag_relationPayload>
          }
          deleteMany: {
            args: Prisma.patch_tag_relationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.patch_tag_relationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.patch_tag_relationUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$patch_tag_relationPayload>[]
          }
          upsert: {
            args: Prisma.patch_tag_relationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$patch_tag_relationPayload>
          }
          aggregate: {
            args: Prisma.Patch_tag_relationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePatch_tag_relation>
          }
          groupBy: {
            args: Prisma.patch_tag_relationGroupByArgs<ExtArgs>
            result: $Utils.Optional<Patch_tag_relationGroupByOutputType>[]
          }
          count: {
            args: Prisma.patch_tag_relationCountArgs<ExtArgs>
            result: $Utils.Optional<Patch_tag_relationCountAggregateOutputType> | number
          }
        }
      }
      patch_resource: {
        payload: Prisma.$patch_resourcePayload<ExtArgs>
        fields: Prisma.patch_resourceFieldRefs
        operations: {
          findUnique: {
            args: Prisma.patch_resourceFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$patch_resourcePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.patch_resourceFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$patch_resourcePayload>
          }
          findFirst: {
            args: Prisma.patch_resourceFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$patch_resourcePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.patch_resourceFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$patch_resourcePayload>
          }
          findMany: {
            args: Prisma.patch_resourceFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$patch_resourcePayload>[]
          }
          create: {
            args: Prisma.patch_resourceCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$patch_resourcePayload>
          }
          createMany: {
            args: Prisma.patch_resourceCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.patch_resourceCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$patch_resourcePayload>[]
          }
          delete: {
            args: Prisma.patch_resourceDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$patch_resourcePayload>
          }
          update: {
            args: Prisma.patch_resourceUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$patch_resourcePayload>
          }
          deleteMany: {
            args: Prisma.patch_resourceDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.patch_resourceUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.patch_resourceUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$patch_resourcePayload>[]
          }
          upsert: {
            args: Prisma.patch_resourceUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$patch_resourcePayload>
          }
          aggregate: {
            args: Prisma.Patch_resourceAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePatch_resource>
          }
          groupBy: {
            args: Prisma.patch_resourceGroupByArgs<ExtArgs>
            result: $Utils.Optional<Patch_resourceGroupByOutputType>[]
          }
          count: {
            args: Prisma.patch_resourceCountArgs<ExtArgs>
            result: $Utils.Optional<Patch_resourceCountAggregateOutputType> | number
          }
        }
      }
      patch_comment: {
        payload: Prisma.$patch_commentPayload<ExtArgs>
        fields: Prisma.patch_commentFieldRefs
        operations: {
          findUnique: {
            args: Prisma.patch_commentFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$patch_commentPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.patch_commentFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$patch_commentPayload>
          }
          findFirst: {
            args: Prisma.patch_commentFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$patch_commentPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.patch_commentFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$patch_commentPayload>
          }
          findMany: {
            args: Prisma.patch_commentFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$patch_commentPayload>[]
          }
          create: {
            args: Prisma.patch_commentCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$patch_commentPayload>
          }
          createMany: {
            args: Prisma.patch_commentCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.patch_commentCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$patch_commentPayload>[]
          }
          delete: {
            args: Prisma.patch_commentDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$patch_commentPayload>
          }
          update: {
            args: Prisma.patch_commentUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$patch_commentPayload>
          }
          deleteMany: {
            args: Prisma.patch_commentDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.patch_commentUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.patch_commentUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$patch_commentPayload>[]
          }
          upsert: {
            args: Prisma.patch_commentUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$patch_commentPayload>
          }
          aggregate: {
            args: Prisma.Patch_commentAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePatch_comment>
          }
          groupBy: {
            args: Prisma.patch_commentGroupByArgs<ExtArgs>
            result: $Utils.Optional<Patch_commentGroupByOutputType>[]
          }
          count: {
            args: Prisma.patch_commentCountArgs<ExtArgs>
            result: $Utils.Optional<Patch_commentCountAggregateOutputType> | number
          }
        }
      }
      patch_character: {
        payload: Prisma.$patch_characterPayload<ExtArgs>
        fields: Prisma.patch_characterFieldRefs
        operations: {
          findUnique: {
            args: Prisma.patch_characterFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$patch_characterPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.patch_characterFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$patch_characterPayload>
          }
          findFirst: {
            args: Prisma.patch_characterFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$patch_characterPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.patch_characterFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$patch_characterPayload>
          }
          findMany: {
            args: Prisma.patch_characterFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$patch_characterPayload>[]
          }
          create: {
            args: Prisma.patch_characterCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$patch_characterPayload>
          }
          createMany: {
            args: Prisma.patch_characterCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.patch_characterCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$patch_characterPayload>[]
          }
          delete: {
            args: Prisma.patch_characterDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$patch_characterPayload>
          }
          update: {
            args: Prisma.patch_characterUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$patch_characterPayload>
          }
          deleteMany: {
            args: Prisma.patch_characterDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.patch_characterUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.patch_characterUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$patch_characterPayload>[]
          }
          upsert: {
            args: Prisma.patch_characterUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$patch_characterPayload>
          }
          aggregate: {
            args: Prisma.Patch_characterAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePatch_character>
          }
          groupBy: {
            args: Prisma.patch_characterGroupByArgs<ExtArgs>
            result: $Utils.Optional<Patch_characterGroupByOutputType>[]
          }
          count: {
            args: Prisma.patch_characterCountArgs<ExtArgs>
            result: $Utils.Optional<Patch_characterCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    user?: userOmit
    admin_log?: admin_logOmit
    user_follow_relation?: user_follow_relationOmit
    user_message?: user_messageOmit
    user_patch_favorite_folder?: user_patch_favorite_folderOmit
    user_patch_favorite_folder_relation?: user_patch_favorite_folder_relationOmit
    user_patch_comment_like_relation?: user_patch_comment_like_relationOmit
    user_patch_resource_like_relation?: user_patch_resource_like_relationOmit
    patch?: patchOmit
    patch_alias?: patch_aliasOmit
    patch_tag?: patch_tagOmit
    patch_tag_relation?: patch_tag_relationOmit
    patch_resource?: patch_resourceOmit
    patch_comment?: patch_commentOmit
    patch_character?: patch_characterOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    admin_log: number
    patch_tag: number
    patch_comment_like: number
    patch_resource_like: number
    patch_favorite_folder: number
    following: number
    follower: number
    patch: number
    patch_comment: number
    patch_resource: number
    patch_character: number
    send_message: number
    receive_message: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    admin_log?: boolean | UserCountOutputTypeCountAdmin_logArgs
    patch_tag?: boolean | UserCountOutputTypeCountPatch_tagArgs
    patch_comment_like?: boolean | UserCountOutputTypeCountPatch_comment_likeArgs
    patch_resource_like?: boolean | UserCountOutputTypeCountPatch_resource_likeArgs
    patch_favorite_folder?: boolean | UserCountOutputTypeCountPatch_favorite_folderArgs
    following?: boolean | UserCountOutputTypeCountFollowingArgs
    follower?: boolean | UserCountOutputTypeCountFollowerArgs
    patch?: boolean | UserCountOutputTypeCountPatchArgs
    patch_comment?: boolean | UserCountOutputTypeCountPatch_commentArgs
    patch_resource?: boolean | UserCountOutputTypeCountPatch_resourceArgs
    patch_character?: boolean | UserCountOutputTypeCountPatch_characterArgs
    send_message?: boolean | UserCountOutputTypeCountSend_messageArgs
    receive_message?: boolean | UserCountOutputTypeCountReceive_messageArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountAdmin_logArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: admin_logWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountPatch_tagArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: patch_tagWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountPatch_comment_likeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_patch_comment_like_relationWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountPatch_resource_likeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_patch_resource_like_relationWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountPatch_favorite_folderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_patch_favorite_folderWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountFollowingArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_follow_relationWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountFollowerArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_follow_relationWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountPatchArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: patchWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountPatch_commentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: patch_commentWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountPatch_resourceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: patch_resourceWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountPatch_characterArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: patch_characterWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountSend_messageArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_messageWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountReceive_messageArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_messageWhereInput
  }


  /**
   * Count Type User_patch_favorite_folderCountOutputType
   */

  export type User_patch_favorite_folderCountOutputType = {
    patch: number
  }

  export type User_patch_favorite_folderCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    patch?: boolean | User_patch_favorite_folderCountOutputTypeCountPatchArgs
  }

  // Custom InputTypes
  /**
   * User_patch_favorite_folderCountOutputType without action
   */
  export type User_patch_favorite_folderCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User_patch_favorite_folderCountOutputType
     */
    select?: User_patch_favorite_folderCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * User_patch_favorite_folderCountOutputType without action
   */
  export type User_patch_favorite_folderCountOutputTypeCountPatchArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_patch_favorite_folder_relationWhereInput
  }


  /**
   * Count Type PatchCountOutputType
   */

  export type PatchCountOutputType = {
    alias: number
    tag: number
    favorite_folder: number
    resource: number
    comment: number
    characters: number
  }

  export type PatchCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    alias?: boolean | PatchCountOutputTypeCountAliasArgs
    tag?: boolean | PatchCountOutputTypeCountTagArgs
    favorite_folder?: boolean | PatchCountOutputTypeCountFavorite_folderArgs
    resource?: boolean | PatchCountOutputTypeCountResourceArgs
    comment?: boolean | PatchCountOutputTypeCountCommentArgs
    characters?: boolean | PatchCountOutputTypeCountCharactersArgs
  }

  // Custom InputTypes
  /**
   * PatchCountOutputType without action
   */
  export type PatchCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PatchCountOutputType
     */
    select?: PatchCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PatchCountOutputType without action
   */
  export type PatchCountOutputTypeCountAliasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: patch_aliasWhereInput
  }

  /**
   * PatchCountOutputType without action
   */
  export type PatchCountOutputTypeCountTagArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: patch_tag_relationWhereInput
  }

  /**
   * PatchCountOutputType without action
   */
  export type PatchCountOutputTypeCountFavorite_folderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_patch_favorite_folder_relationWhereInput
  }

  /**
   * PatchCountOutputType without action
   */
  export type PatchCountOutputTypeCountResourceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: patch_resourceWhereInput
  }

  /**
   * PatchCountOutputType without action
   */
  export type PatchCountOutputTypeCountCommentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: patch_commentWhereInput
  }

  /**
   * PatchCountOutputType without action
   */
  export type PatchCountOutputTypeCountCharactersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: patch_characterWhereInput
  }


  /**
   * Count Type Patch_tagCountOutputType
   */

  export type Patch_tagCountOutputType = {
    patch_relation: number
  }

  export type Patch_tagCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    patch_relation?: boolean | Patch_tagCountOutputTypeCountPatch_relationArgs
  }

  // Custom InputTypes
  /**
   * Patch_tagCountOutputType without action
   */
  export type Patch_tagCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Patch_tagCountOutputType
     */
    select?: Patch_tagCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Patch_tagCountOutputType without action
   */
  export type Patch_tagCountOutputTypeCountPatch_relationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: patch_tag_relationWhereInput
  }


  /**
   * Count Type Patch_resourceCountOutputType
   */

  export type Patch_resourceCountOutputType = {
    like_by: number
  }

  export type Patch_resourceCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    like_by?: boolean | Patch_resourceCountOutputTypeCountLike_byArgs
  }

  // Custom InputTypes
  /**
   * Patch_resourceCountOutputType without action
   */
  export type Patch_resourceCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Patch_resourceCountOutputType
     */
    select?: Patch_resourceCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Patch_resourceCountOutputType without action
   */
  export type Patch_resourceCountOutputTypeCountLike_byArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_patch_resource_like_relationWhereInput
  }


  /**
   * Count Type Patch_commentCountOutputType
   */

  export type Patch_commentCountOutputType = {
    like_by: number
    reply: number
  }

  export type Patch_commentCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    like_by?: boolean | Patch_commentCountOutputTypeCountLike_byArgs
    reply?: boolean | Patch_commentCountOutputTypeCountReplyArgs
  }

  // Custom InputTypes
  /**
   * Patch_commentCountOutputType without action
   */
  export type Patch_commentCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Patch_commentCountOutputType
     */
    select?: Patch_commentCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Patch_commentCountOutputType without action
   */
  export type Patch_commentCountOutputTypeCountLike_byArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_patch_comment_like_relationWhereInput
  }

  /**
   * Patch_commentCountOutputType without action
   */
  export type Patch_commentCountOutputTypeCountReplyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: patch_commentWhereInput
  }


  /**
   * Count Type Patch_characterCountOutputType
   */

  export type Patch_characterCountOutputType = {
    new_versions: number
  }

  export type Patch_characterCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    new_versions?: boolean | Patch_characterCountOutputTypeCountNew_versionsArgs
  }

  // Custom InputTypes
  /**
   * Patch_characterCountOutputType without action
   */
  export type Patch_characterCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Patch_characterCountOutputType
     */
    select?: Patch_characterCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Patch_characterCountOutputType without action
   */
  export type Patch_characterCountOutputTypeCountNew_versionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: patch_characterWhereInput
  }


  /**
   * Models
   */

  /**
   * Model user
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserAvgAggregateOutputType = {
    id: number | null
    role: number | null
    status: number | null
    moemoepoint: number | null
    daily_image_count: number | null
    daily_check_in: number | null
    daily_upload_size: number | null
  }

  export type UserSumAggregateOutputType = {
    id: number | null
    role: number | null
    status: number | null
    moemoepoint: number | null
    daily_image_count: number | null
    daily_check_in: number | null
    daily_upload_size: number | null
  }

  export type UserMinAggregateOutputType = {
    id: number | null
    name: string | null
    email: string | null
    password: string | null
    ip: string | null
    avatar: string | null
    role: number | null
    status: number | null
    register_time: Date | null
    moemoepoint: number | null
    bio: string | null
    enable_email_notice: boolean | null
    daily_image_count: number | null
    daily_check_in: number | null
    daily_upload_size: number | null
    last_login_time: string | null
    created: Date | null
    updated: Date | null
  }

  export type UserMaxAggregateOutputType = {
    id: number | null
    name: string | null
    email: string | null
    password: string | null
    ip: string | null
    avatar: string | null
    role: number | null
    status: number | null
    register_time: Date | null
    moemoepoint: number | null
    bio: string | null
    enable_email_notice: boolean | null
    daily_image_count: number | null
    daily_check_in: number | null
    daily_upload_size: number | null
    last_login_time: string | null
    created: Date | null
    updated: Date | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    name: number
    email: number
    password: number
    ip: number
    avatar: number
    role: number
    status: number
    register_time: number
    moemoepoint: number
    bio: number
    claimed_tasks: number
    enable_email_notice: number
    daily_image_count: number
    daily_check_in: number
    daily_upload_size: number
    last_login_time: number
    created: number
    updated: number
    _all: number
  }


  export type UserAvgAggregateInputType = {
    id?: true
    role?: true
    status?: true
    moemoepoint?: true
    daily_image_count?: true
    daily_check_in?: true
    daily_upload_size?: true
  }

  export type UserSumAggregateInputType = {
    id?: true
    role?: true
    status?: true
    moemoepoint?: true
    daily_image_count?: true
    daily_check_in?: true
    daily_upload_size?: true
  }

  export type UserMinAggregateInputType = {
    id?: true
    name?: true
    email?: true
    password?: true
    ip?: true
    avatar?: true
    role?: true
    status?: true
    register_time?: true
    moemoepoint?: true
    bio?: true
    enable_email_notice?: true
    daily_image_count?: true
    daily_check_in?: true
    daily_upload_size?: true
    last_login_time?: true
    created?: true
    updated?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    name?: true
    email?: true
    password?: true
    ip?: true
    avatar?: true
    role?: true
    status?: true
    register_time?: true
    moemoepoint?: true
    bio?: true
    enable_email_notice?: true
    daily_image_count?: true
    daily_check_in?: true
    daily_upload_size?: true
    last_login_time?: true
    created?: true
    updated?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    name?: true
    email?: true
    password?: true
    ip?: true
    avatar?: true
    role?: true
    status?: true
    register_time?: true
    moemoepoint?: true
    bio?: true
    claimed_tasks?: true
    enable_email_notice?: true
    daily_image_count?: true
    daily_check_in?: true
    daily_upload_size?: true
    last_login_time?: true
    created?: true
    updated?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user to aggregate.
     */
    where?: userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: userOrderByWithRelationInput | userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UserAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UserSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type userGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: userWhereInput
    orderBy?: userOrderByWithAggregationInput | userOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: userScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _avg?: UserAvgAggregateInputType
    _sum?: UserSumAggregateInputType
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: number
    name: string
    email: string
    password: string
    ip: string
    avatar: string
    role: number
    status: number
    register_time: Date
    moemoepoint: number
    bio: string
    claimed_tasks: string[]
    enable_email_notice: boolean
    daily_image_count: number
    daily_check_in: number
    daily_upload_size: number
    last_login_time: string
    created: Date
    updated: Date
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends userGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type userSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    email?: boolean
    password?: boolean
    ip?: boolean
    avatar?: boolean
    role?: boolean
    status?: boolean
    register_time?: boolean
    moemoepoint?: boolean
    bio?: boolean
    claimed_tasks?: boolean
    enable_email_notice?: boolean
    daily_image_count?: boolean
    daily_check_in?: boolean
    daily_upload_size?: boolean
    last_login_time?: boolean
    created?: boolean
    updated?: boolean
    admin_log?: boolean | user$admin_logArgs<ExtArgs>
    patch_tag?: boolean | user$patch_tagArgs<ExtArgs>
    patch_comment_like?: boolean | user$patch_comment_likeArgs<ExtArgs>
    patch_resource_like?: boolean | user$patch_resource_likeArgs<ExtArgs>
    patch_favorite_folder?: boolean | user$patch_favorite_folderArgs<ExtArgs>
    following?: boolean | user$followingArgs<ExtArgs>
    follower?: boolean | user$followerArgs<ExtArgs>
    patch?: boolean | user$patchArgs<ExtArgs>
    patch_comment?: boolean | user$patch_commentArgs<ExtArgs>
    patch_resource?: boolean | user$patch_resourceArgs<ExtArgs>
    patch_character?: boolean | user$patch_characterArgs<ExtArgs>
    send_message?: boolean | user$send_messageArgs<ExtArgs>
    receive_message?: boolean | user$receive_messageArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type userSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    email?: boolean
    password?: boolean
    ip?: boolean
    avatar?: boolean
    role?: boolean
    status?: boolean
    register_time?: boolean
    moemoepoint?: boolean
    bio?: boolean
    claimed_tasks?: boolean
    enable_email_notice?: boolean
    daily_image_count?: boolean
    daily_check_in?: boolean
    daily_upload_size?: boolean
    last_login_time?: boolean
    created?: boolean
    updated?: boolean
  }, ExtArgs["result"]["user"]>

  export type userSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    email?: boolean
    password?: boolean
    ip?: boolean
    avatar?: boolean
    role?: boolean
    status?: boolean
    register_time?: boolean
    moemoepoint?: boolean
    bio?: boolean
    claimed_tasks?: boolean
    enable_email_notice?: boolean
    daily_image_count?: boolean
    daily_check_in?: boolean
    daily_upload_size?: boolean
    last_login_time?: boolean
    created?: boolean
    updated?: boolean
  }, ExtArgs["result"]["user"]>

  export type userSelectScalar = {
    id?: boolean
    name?: boolean
    email?: boolean
    password?: boolean
    ip?: boolean
    avatar?: boolean
    role?: boolean
    status?: boolean
    register_time?: boolean
    moemoepoint?: boolean
    bio?: boolean
    claimed_tasks?: boolean
    enable_email_notice?: boolean
    daily_image_count?: boolean
    daily_check_in?: boolean
    daily_upload_size?: boolean
    last_login_time?: boolean
    created?: boolean
    updated?: boolean
  }

  export type userOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "email" | "password" | "ip" | "avatar" | "role" | "status" | "register_time" | "moemoepoint" | "bio" | "claimed_tasks" | "enable_email_notice" | "daily_image_count" | "daily_check_in" | "daily_upload_size" | "last_login_time" | "created" | "updated", ExtArgs["result"]["user"]>
  export type userInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    admin_log?: boolean | user$admin_logArgs<ExtArgs>
    patch_tag?: boolean | user$patch_tagArgs<ExtArgs>
    patch_comment_like?: boolean | user$patch_comment_likeArgs<ExtArgs>
    patch_resource_like?: boolean | user$patch_resource_likeArgs<ExtArgs>
    patch_favorite_folder?: boolean | user$patch_favorite_folderArgs<ExtArgs>
    following?: boolean | user$followingArgs<ExtArgs>
    follower?: boolean | user$followerArgs<ExtArgs>
    patch?: boolean | user$patchArgs<ExtArgs>
    patch_comment?: boolean | user$patch_commentArgs<ExtArgs>
    patch_resource?: boolean | user$patch_resourceArgs<ExtArgs>
    patch_character?: boolean | user$patch_characterArgs<ExtArgs>
    send_message?: boolean | user$send_messageArgs<ExtArgs>
    receive_message?: boolean | user$receive_messageArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type userIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type userIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $userPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "user"
    objects: {
      admin_log: Prisma.$admin_logPayload<ExtArgs>[]
      patch_tag: Prisma.$patch_tagPayload<ExtArgs>[]
      patch_comment_like: Prisma.$user_patch_comment_like_relationPayload<ExtArgs>[]
      patch_resource_like: Prisma.$user_patch_resource_like_relationPayload<ExtArgs>[]
      patch_favorite_folder: Prisma.$user_patch_favorite_folderPayload<ExtArgs>[]
      following: Prisma.$user_follow_relationPayload<ExtArgs>[]
      follower: Prisma.$user_follow_relationPayload<ExtArgs>[]
      patch: Prisma.$patchPayload<ExtArgs>[]
      patch_comment: Prisma.$patch_commentPayload<ExtArgs>[]
      patch_resource: Prisma.$patch_resourcePayload<ExtArgs>[]
      patch_character: Prisma.$patch_characterPayload<ExtArgs>[]
      send_message: Prisma.$user_messagePayload<ExtArgs>[]
      receive_message: Prisma.$user_messagePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      email: string
      password: string
      ip: string
      avatar: string
      role: number
      status: number
      register_time: Date
      moemoepoint: number
      bio: string
      claimed_tasks: string[]
      enable_email_notice: boolean
      daily_image_count: number
      daily_check_in: number
      daily_upload_size: number
      last_login_time: string
      created: Date
      updated: Date
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type userGetPayload<S extends boolean | null | undefined | userDefaultArgs> = $Result.GetResult<Prisma.$userPayload, S>

  type userCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<userFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface userDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['user'], meta: { name: 'user' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {userFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends userFindUniqueArgs>(args: SelectSubset<T, userFindUniqueArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {userFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends userFindUniqueOrThrowArgs>(args: SelectSubset<T, userFindUniqueOrThrowArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends userFindFirstArgs>(args?: SelectSubset<T, userFindFirstArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends userFindFirstOrThrowArgs>(args?: SelectSubset<T, userFindFirstOrThrowArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends userFindManyArgs>(args?: SelectSubset<T, userFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a User.
     * @param {userCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends userCreateArgs>(args: SelectSubset<T, userCreateArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many Users.
     * @param {userCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends userCreateManyArgs>(args?: SelectSubset<T, userCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {userCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `id`
     * const userWithIdOnly = await prisma.user.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends userCreateManyAndReturnArgs>(args?: SelectSubset<T, userCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a User.
     * @param {userDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends userDeleteArgs>(args: SelectSubset<T, userDeleteArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one User.
     * @param {userUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends userUpdateArgs>(args: SelectSubset<T, userUpdateArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more Users.
     * @param {userDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends userDeleteManyArgs>(args?: SelectSubset<T, userDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends userUpdateManyArgs>(args: SelectSubset<T, userUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users and returns the data updated in the database.
     * @param {userUpdateManyAndReturnArgs} args - Arguments to update many Users.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Users and only return the `id`
     * const userWithIdOnly = await prisma.user.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends userUpdateManyAndReturnArgs>(args: SelectSubset<T, userUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "updateManyAndReturn", ClientOptions>>

    /**
     * Create or update one User.
     * @param {userUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends userUpsertArgs>(args: SelectSubset<T, userUpsertArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends userCountArgs>(
      args?: Subset<T, userCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends userGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: userGroupByArgs['orderBy'] }
        : { orderBy?: userGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, userGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the user model
   */
  readonly fields: userFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for user.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__userClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    admin_log<T extends user$admin_logArgs<ExtArgs> = {}>(args?: Subset<T, user$admin_logArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$admin_logPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    patch_tag<T extends user$patch_tagArgs<ExtArgs> = {}>(args?: Subset<T, user$patch_tagArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$patch_tagPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    patch_comment_like<T extends user$patch_comment_likeArgs<ExtArgs> = {}>(args?: Subset<T, user$patch_comment_likeArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_patch_comment_like_relationPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    patch_resource_like<T extends user$patch_resource_likeArgs<ExtArgs> = {}>(args?: Subset<T, user$patch_resource_likeArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_patch_resource_like_relationPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    patch_favorite_folder<T extends user$patch_favorite_folderArgs<ExtArgs> = {}>(args?: Subset<T, user$patch_favorite_folderArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_patch_favorite_folderPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    following<T extends user$followingArgs<ExtArgs> = {}>(args?: Subset<T, user$followingArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_follow_relationPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    follower<T extends user$followerArgs<ExtArgs> = {}>(args?: Subset<T, user$followerArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_follow_relationPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    patch<T extends user$patchArgs<ExtArgs> = {}>(args?: Subset<T, user$patchArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$patchPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    patch_comment<T extends user$patch_commentArgs<ExtArgs> = {}>(args?: Subset<T, user$patch_commentArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$patch_commentPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    patch_resource<T extends user$patch_resourceArgs<ExtArgs> = {}>(args?: Subset<T, user$patch_resourceArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$patch_resourcePayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    patch_character<T extends user$patch_characterArgs<ExtArgs> = {}>(args?: Subset<T, user$patch_characterArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$patch_characterPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    send_message<T extends user$send_messageArgs<ExtArgs> = {}>(args?: Subset<T, user$send_messageArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_messagePayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    receive_message<T extends user$receive_messageArgs<ExtArgs> = {}>(args?: Subset<T, user$receive_messageArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_messagePayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the user model
   */ 
  interface userFieldRefs {
    readonly id: FieldRef<"user", 'Int'>
    readonly name: FieldRef<"user", 'String'>
    readonly email: FieldRef<"user", 'String'>
    readonly password: FieldRef<"user", 'String'>
    readonly ip: FieldRef<"user", 'String'>
    readonly avatar: FieldRef<"user", 'String'>
    readonly role: FieldRef<"user", 'Int'>
    readonly status: FieldRef<"user", 'Int'>
    readonly register_time: FieldRef<"user", 'DateTime'>
    readonly moemoepoint: FieldRef<"user", 'Int'>
    readonly bio: FieldRef<"user", 'String'>
    readonly claimed_tasks: FieldRef<"user", 'String[]'>
    readonly enable_email_notice: FieldRef<"user", 'Boolean'>
    readonly daily_image_count: FieldRef<"user", 'Int'>
    readonly daily_check_in: FieldRef<"user", 'Int'>
    readonly daily_upload_size: FieldRef<"user", 'Float'>
    readonly last_login_time: FieldRef<"user", 'String'>
    readonly created: FieldRef<"user", 'DateTime'>
    readonly updated: FieldRef<"user", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * user findUnique
   */
  export type userFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * Filter, which user to fetch.
     */
    where: userWhereUniqueInput
  }

  /**
   * user findUniqueOrThrow
   */
  export type userFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * Filter, which user to fetch.
     */
    where: userWhereUniqueInput
  }

  /**
   * user findFirst
   */
  export type userFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * Filter, which user to fetch.
     */
    where?: userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: userOrderByWithRelationInput | userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     */
    cursor?: userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * user findFirstOrThrow
   */
  export type userFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * Filter, which user to fetch.
     */
    where?: userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: userOrderByWithRelationInput | userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     */
    cursor?: userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * user findMany
   */
  export type userFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: userOrderByWithRelationInput | userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing users.
     */
    cursor?: userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * user create
   */
  export type userCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * The data needed to create a user.
     */
    data: XOR<userCreateInput, userUncheckedCreateInput>
  }

  /**
   * user createMany
   */
  export type userCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many users.
     */
    data: userCreateManyInput | userCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * user createManyAndReturn
   */
  export type userCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * The data used to create many users.
     */
    data: userCreateManyInput | userCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * user update
   */
  export type userUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * The data needed to update a user.
     */
    data: XOR<userUpdateInput, userUncheckedUpdateInput>
    /**
     * Choose, which user to update.
     */
    where: userWhereUniqueInput
  }

  /**
   * user updateMany
   */
  export type userUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update users.
     */
    data: XOR<userUpdateManyMutationInput, userUncheckedUpdateManyInput>
    /**
     * Filter which users to update
     */
    where?: userWhereInput
  }

  /**
   * user updateManyAndReturn
   */
  export type userUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * The data used to update users.
     */
    data: XOR<userUpdateManyMutationInput, userUncheckedUpdateManyInput>
    /**
     * Filter which users to update
     */
    where?: userWhereInput
  }

  /**
   * user upsert
   */
  export type userUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * The filter to search for the user to update in case it exists.
     */
    where: userWhereUniqueInput
    /**
     * In case the user found by the `where` argument doesn't exist, create a new user with this data.
     */
    create: XOR<userCreateInput, userUncheckedCreateInput>
    /**
     * In case the user was found with the provided `where` argument, update it with this data.
     */
    update: XOR<userUpdateInput, userUncheckedUpdateInput>
  }

  /**
   * user delete
   */
  export type userDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    /**
     * Filter which user to delete.
     */
    where: userWhereUniqueInput
  }

  /**
   * user deleteMany
   */
  export type userDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which users to delete
     */
    where?: userWhereInput
  }

  /**
   * user.admin_log
   */
  export type user$admin_logArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admin_log
     */
    select?: admin_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the admin_log
     */
    omit?: admin_logOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: admin_logInclude<ExtArgs> | null
    where?: admin_logWhereInput
    orderBy?: admin_logOrderByWithRelationInput | admin_logOrderByWithRelationInput[]
    cursor?: admin_logWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Admin_logScalarFieldEnum | Admin_logScalarFieldEnum[]
  }

  /**
   * user.patch_tag
   */
  export type user$patch_tagArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_tag
     */
    select?: patch_tagSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch_tag
     */
    omit?: patch_tagOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_tagInclude<ExtArgs> | null
    where?: patch_tagWhereInput
    orderBy?: patch_tagOrderByWithRelationInput | patch_tagOrderByWithRelationInput[]
    cursor?: patch_tagWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Patch_tagScalarFieldEnum | Patch_tagScalarFieldEnum[]
  }

  /**
   * user.patch_comment_like
   */
  export type user$patch_comment_likeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_patch_comment_like_relation
     */
    select?: user_patch_comment_like_relationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_patch_comment_like_relation
     */
    omit?: user_patch_comment_like_relationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_patch_comment_like_relationInclude<ExtArgs> | null
    where?: user_patch_comment_like_relationWhereInput
    orderBy?: user_patch_comment_like_relationOrderByWithRelationInput | user_patch_comment_like_relationOrderByWithRelationInput[]
    cursor?: user_patch_comment_like_relationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: User_patch_comment_like_relationScalarFieldEnum | User_patch_comment_like_relationScalarFieldEnum[]
  }

  /**
   * user.patch_resource_like
   */
  export type user$patch_resource_likeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_patch_resource_like_relation
     */
    select?: user_patch_resource_like_relationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_patch_resource_like_relation
     */
    omit?: user_patch_resource_like_relationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_patch_resource_like_relationInclude<ExtArgs> | null
    where?: user_patch_resource_like_relationWhereInput
    orderBy?: user_patch_resource_like_relationOrderByWithRelationInput | user_patch_resource_like_relationOrderByWithRelationInput[]
    cursor?: user_patch_resource_like_relationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: User_patch_resource_like_relationScalarFieldEnum | User_patch_resource_like_relationScalarFieldEnum[]
  }

  /**
   * user.patch_favorite_folder
   */
  export type user$patch_favorite_folderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_patch_favorite_folder
     */
    select?: user_patch_favorite_folderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_patch_favorite_folder
     */
    omit?: user_patch_favorite_folderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_patch_favorite_folderInclude<ExtArgs> | null
    where?: user_patch_favorite_folderWhereInput
    orderBy?: user_patch_favorite_folderOrderByWithRelationInput | user_patch_favorite_folderOrderByWithRelationInput[]
    cursor?: user_patch_favorite_folderWhereUniqueInput
    take?: number
    skip?: number
    distinct?: User_patch_favorite_folderScalarFieldEnum | User_patch_favorite_folderScalarFieldEnum[]
  }

  /**
   * user.following
   */
  export type user$followingArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_follow_relation
     */
    select?: user_follow_relationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_follow_relation
     */
    omit?: user_follow_relationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_follow_relationInclude<ExtArgs> | null
    where?: user_follow_relationWhereInput
    orderBy?: user_follow_relationOrderByWithRelationInput | user_follow_relationOrderByWithRelationInput[]
    cursor?: user_follow_relationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: User_follow_relationScalarFieldEnum | User_follow_relationScalarFieldEnum[]
  }

  /**
   * user.follower
   */
  export type user$followerArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_follow_relation
     */
    select?: user_follow_relationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_follow_relation
     */
    omit?: user_follow_relationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_follow_relationInclude<ExtArgs> | null
    where?: user_follow_relationWhereInput
    orderBy?: user_follow_relationOrderByWithRelationInput | user_follow_relationOrderByWithRelationInput[]
    cursor?: user_follow_relationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: User_follow_relationScalarFieldEnum | User_follow_relationScalarFieldEnum[]
  }

  /**
   * user.patch
   */
  export type user$patchArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch
     */
    select?: patchSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch
     */
    omit?: patchOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patchInclude<ExtArgs> | null
    where?: patchWhereInput
    orderBy?: patchOrderByWithRelationInput | patchOrderByWithRelationInput[]
    cursor?: patchWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PatchScalarFieldEnum | PatchScalarFieldEnum[]
  }

  /**
   * user.patch_comment
   */
  export type user$patch_commentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_comment
     */
    select?: patch_commentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch_comment
     */
    omit?: patch_commentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_commentInclude<ExtArgs> | null
    where?: patch_commentWhereInput
    orderBy?: patch_commentOrderByWithRelationInput | patch_commentOrderByWithRelationInput[]
    cursor?: patch_commentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Patch_commentScalarFieldEnum | Patch_commentScalarFieldEnum[]
  }

  /**
   * user.patch_resource
   */
  export type user$patch_resourceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_resource
     */
    select?: patch_resourceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch_resource
     */
    omit?: patch_resourceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_resourceInclude<ExtArgs> | null
    where?: patch_resourceWhereInput
    orderBy?: patch_resourceOrderByWithRelationInput | patch_resourceOrderByWithRelationInput[]
    cursor?: patch_resourceWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Patch_resourceScalarFieldEnum | Patch_resourceScalarFieldEnum[]
  }

  /**
   * user.patch_character
   */
  export type user$patch_characterArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_character
     */
    select?: patch_characterSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch_character
     */
    omit?: patch_characterOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_characterInclude<ExtArgs> | null
    where?: patch_characterWhereInput
    orderBy?: patch_characterOrderByWithRelationInput | patch_characterOrderByWithRelationInput[]
    cursor?: patch_characterWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Patch_characterScalarFieldEnum | Patch_characterScalarFieldEnum[]
  }

  /**
   * user.send_message
   */
  export type user$send_messageArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_message
     */
    select?: user_messageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_message
     */
    omit?: user_messageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_messageInclude<ExtArgs> | null
    where?: user_messageWhereInput
    orderBy?: user_messageOrderByWithRelationInput | user_messageOrderByWithRelationInput[]
    cursor?: user_messageWhereUniqueInput
    take?: number
    skip?: number
    distinct?: User_messageScalarFieldEnum | User_messageScalarFieldEnum[]
  }

  /**
   * user.receive_message
   */
  export type user$receive_messageArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_message
     */
    select?: user_messageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_message
     */
    omit?: user_messageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_messageInclude<ExtArgs> | null
    where?: user_messageWhereInput
    orderBy?: user_messageOrderByWithRelationInput | user_messageOrderByWithRelationInput[]
    cursor?: user_messageWhereUniqueInput
    take?: number
    skip?: number
    distinct?: User_messageScalarFieldEnum | User_messageScalarFieldEnum[]
  }

  /**
   * user without action
   */
  export type userDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
  }


  /**
   * Model admin_log
   */

  export type AggregateAdmin_log = {
    _count: Admin_logCountAggregateOutputType | null
    _avg: Admin_logAvgAggregateOutputType | null
    _sum: Admin_logSumAggregateOutputType | null
    _min: Admin_logMinAggregateOutputType | null
    _max: Admin_logMaxAggregateOutputType | null
  }

  export type Admin_logAvgAggregateOutputType = {
    id: number | null
    status: number | null
    user_id: number | null
  }

  export type Admin_logSumAggregateOutputType = {
    id: number | null
    status: number | null
    user_id: number | null
  }

  export type Admin_logMinAggregateOutputType = {
    id: number | null
    type: string | null
    content: string | null
    status: number | null
    user_id: number | null
    created: Date | null
    updated: Date | null
  }

  export type Admin_logMaxAggregateOutputType = {
    id: number | null
    type: string | null
    content: string | null
    status: number | null
    user_id: number | null
    created: Date | null
    updated: Date | null
  }

  export type Admin_logCountAggregateOutputType = {
    id: number
    type: number
    content: number
    status: number
    user_id: number
    created: number
    updated: number
    _all: number
  }


  export type Admin_logAvgAggregateInputType = {
    id?: true
    status?: true
    user_id?: true
  }

  export type Admin_logSumAggregateInputType = {
    id?: true
    status?: true
    user_id?: true
  }

  export type Admin_logMinAggregateInputType = {
    id?: true
    type?: true
    content?: true
    status?: true
    user_id?: true
    created?: true
    updated?: true
  }

  export type Admin_logMaxAggregateInputType = {
    id?: true
    type?: true
    content?: true
    status?: true
    user_id?: true
    created?: true
    updated?: true
  }

  export type Admin_logCountAggregateInputType = {
    id?: true
    type?: true
    content?: true
    status?: true
    user_id?: true
    created?: true
    updated?: true
    _all?: true
  }

  export type Admin_logAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which admin_log to aggregate.
     */
    where?: admin_logWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of admin_logs to fetch.
     */
    orderBy?: admin_logOrderByWithRelationInput | admin_logOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: admin_logWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` admin_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` admin_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned admin_logs
    **/
    _count?: true | Admin_logCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Admin_logAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Admin_logSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Admin_logMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Admin_logMaxAggregateInputType
  }

  export type GetAdmin_logAggregateType<T extends Admin_logAggregateArgs> = {
        [P in keyof T & keyof AggregateAdmin_log]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAdmin_log[P]>
      : GetScalarType<T[P], AggregateAdmin_log[P]>
  }




  export type admin_logGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: admin_logWhereInput
    orderBy?: admin_logOrderByWithAggregationInput | admin_logOrderByWithAggregationInput[]
    by: Admin_logScalarFieldEnum[] | Admin_logScalarFieldEnum
    having?: admin_logScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Admin_logCountAggregateInputType | true
    _avg?: Admin_logAvgAggregateInputType
    _sum?: Admin_logSumAggregateInputType
    _min?: Admin_logMinAggregateInputType
    _max?: Admin_logMaxAggregateInputType
  }

  export type Admin_logGroupByOutputType = {
    id: number
    type: string
    content: string
    status: number
    user_id: number
    created: Date
    updated: Date
    _count: Admin_logCountAggregateOutputType | null
    _avg: Admin_logAvgAggregateOutputType | null
    _sum: Admin_logSumAggregateOutputType | null
    _min: Admin_logMinAggregateOutputType | null
    _max: Admin_logMaxAggregateOutputType | null
  }

  type GetAdmin_logGroupByPayload<T extends admin_logGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Admin_logGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Admin_logGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Admin_logGroupByOutputType[P]>
            : GetScalarType<T[P], Admin_logGroupByOutputType[P]>
        }
      >
    >


  export type admin_logSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    type?: boolean
    content?: boolean
    status?: boolean
    user_id?: boolean
    created?: boolean
    updated?: boolean
    user?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["admin_log"]>

  export type admin_logSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    type?: boolean
    content?: boolean
    status?: boolean
    user_id?: boolean
    created?: boolean
    updated?: boolean
    user?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["admin_log"]>

  export type admin_logSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    type?: boolean
    content?: boolean
    status?: boolean
    user_id?: boolean
    created?: boolean
    updated?: boolean
    user?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["admin_log"]>

  export type admin_logSelectScalar = {
    id?: boolean
    type?: boolean
    content?: boolean
    status?: boolean
    user_id?: boolean
    created?: boolean
    updated?: boolean
  }

  export type admin_logOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "type" | "content" | "status" | "user_id" | "created" | "updated", ExtArgs["result"]["admin_log"]>
  export type admin_logInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | userDefaultArgs<ExtArgs>
  }
  export type admin_logIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | userDefaultArgs<ExtArgs>
  }
  export type admin_logIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | userDefaultArgs<ExtArgs>
  }

  export type $admin_logPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "admin_log"
    objects: {
      user: Prisma.$userPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      type: string
      content: string
      status: number
      user_id: number
      created: Date
      updated: Date
    }, ExtArgs["result"]["admin_log"]>
    composites: {}
  }

  type admin_logGetPayload<S extends boolean | null | undefined | admin_logDefaultArgs> = $Result.GetResult<Prisma.$admin_logPayload, S>

  type admin_logCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<admin_logFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Admin_logCountAggregateInputType | true
    }

  export interface admin_logDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['admin_log'], meta: { name: 'admin_log' } }
    /**
     * Find zero or one Admin_log that matches the filter.
     * @param {admin_logFindUniqueArgs} args - Arguments to find a Admin_log
     * @example
     * // Get one Admin_log
     * const admin_log = await prisma.admin_log.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends admin_logFindUniqueArgs>(args: SelectSubset<T, admin_logFindUniqueArgs<ExtArgs>>): Prisma__admin_logClient<$Result.GetResult<Prisma.$admin_logPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one Admin_log that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {admin_logFindUniqueOrThrowArgs} args - Arguments to find a Admin_log
     * @example
     * // Get one Admin_log
     * const admin_log = await prisma.admin_log.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends admin_logFindUniqueOrThrowArgs>(args: SelectSubset<T, admin_logFindUniqueOrThrowArgs<ExtArgs>>): Prisma__admin_logClient<$Result.GetResult<Prisma.$admin_logPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first Admin_log that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {admin_logFindFirstArgs} args - Arguments to find a Admin_log
     * @example
     * // Get one Admin_log
     * const admin_log = await prisma.admin_log.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends admin_logFindFirstArgs>(args?: SelectSubset<T, admin_logFindFirstArgs<ExtArgs>>): Prisma__admin_logClient<$Result.GetResult<Prisma.$admin_logPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first Admin_log that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {admin_logFindFirstOrThrowArgs} args - Arguments to find a Admin_log
     * @example
     * // Get one Admin_log
     * const admin_log = await prisma.admin_log.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends admin_logFindFirstOrThrowArgs>(args?: SelectSubset<T, admin_logFindFirstOrThrowArgs<ExtArgs>>): Prisma__admin_logClient<$Result.GetResult<Prisma.$admin_logPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more Admin_logs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {admin_logFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Admin_logs
     * const admin_logs = await prisma.admin_log.findMany()
     * 
     * // Get first 10 Admin_logs
     * const admin_logs = await prisma.admin_log.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const admin_logWithIdOnly = await prisma.admin_log.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends admin_logFindManyArgs>(args?: SelectSubset<T, admin_logFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$admin_logPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a Admin_log.
     * @param {admin_logCreateArgs} args - Arguments to create a Admin_log.
     * @example
     * // Create one Admin_log
     * const Admin_log = await prisma.admin_log.create({
     *   data: {
     *     // ... data to create a Admin_log
     *   }
     * })
     * 
     */
    create<T extends admin_logCreateArgs>(args: SelectSubset<T, admin_logCreateArgs<ExtArgs>>): Prisma__admin_logClient<$Result.GetResult<Prisma.$admin_logPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many Admin_logs.
     * @param {admin_logCreateManyArgs} args - Arguments to create many Admin_logs.
     * @example
     * // Create many Admin_logs
     * const admin_log = await prisma.admin_log.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends admin_logCreateManyArgs>(args?: SelectSubset<T, admin_logCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Admin_logs and returns the data saved in the database.
     * @param {admin_logCreateManyAndReturnArgs} args - Arguments to create many Admin_logs.
     * @example
     * // Create many Admin_logs
     * const admin_log = await prisma.admin_log.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Admin_logs and only return the `id`
     * const admin_logWithIdOnly = await prisma.admin_log.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends admin_logCreateManyAndReturnArgs>(args?: SelectSubset<T, admin_logCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$admin_logPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a Admin_log.
     * @param {admin_logDeleteArgs} args - Arguments to delete one Admin_log.
     * @example
     * // Delete one Admin_log
     * const Admin_log = await prisma.admin_log.delete({
     *   where: {
     *     // ... filter to delete one Admin_log
     *   }
     * })
     * 
     */
    delete<T extends admin_logDeleteArgs>(args: SelectSubset<T, admin_logDeleteArgs<ExtArgs>>): Prisma__admin_logClient<$Result.GetResult<Prisma.$admin_logPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one Admin_log.
     * @param {admin_logUpdateArgs} args - Arguments to update one Admin_log.
     * @example
     * // Update one Admin_log
     * const admin_log = await prisma.admin_log.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends admin_logUpdateArgs>(args: SelectSubset<T, admin_logUpdateArgs<ExtArgs>>): Prisma__admin_logClient<$Result.GetResult<Prisma.$admin_logPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more Admin_logs.
     * @param {admin_logDeleteManyArgs} args - Arguments to filter Admin_logs to delete.
     * @example
     * // Delete a few Admin_logs
     * const { count } = await prisma.admin_log.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends admin_logDeleteManyArgs>(args?: SelectSubset<T, admin_logDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Admin_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {admin_logUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Admin_logs
     * const admin_log = await prisma.admin_log.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends admin_logUpdateManyArgs>(args: SelectSubset<T, admin_logUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Admin_logs and returns the data updated in the database.
     * @param {admin_logUpdateManyAndReturnArgs} args - Arguments to update many Admin_logs.
     * @example
     * // Update many Admin_logs
     * const admin_log = await prisma.admin_log.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Admin_logs and only return the `id`
     * const admin_logWithIdOnly = await prisma.admin_log.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends admin_logUpdateManyAndReturnArgs>(args: SelectSubset<T, admin_logUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$admin_logPayload<ExtArgs>, T, "updateManyAndReturn", ClientOptions>>

    /**
     * Create or update one Admin_log.
     * @param {admin_logUpsertArgs} args - Arguments to update or create a Admin_log.
     * @example
     * // Update or create a Admin_log
     * const admin_log = await prisma.admin_log.upsert({
     *   create: {
     *     // ... data to create a Admin_log
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Admin_log we want to update
     *   }
     * })
     */
    upsert<T extends admin_logUpsertArgs>(args: SelectSubset<T, admin_logUpsertArgs<ExtArgs>>): Prisma__admin_logClient<$Result.GetResult<Prisma.$admin_logPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of Admin_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {admin_logCountArgs} args - Arguments to filter Admin_logs to count.
     * @example
     * // Count the number of Admin_logs
     * const count = await prisma.admin_log.count({
     *   where: {
     *     // ... the filter for the Admin_logs we want to count
     *   }
     * })
    **/
    count<T extends admin_logCountArgs>(
      args?: Subset<T, admin_logCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Admin_logCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Admin_log.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Admin_logAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Admin_logAggregateArgs>(args: Subset<T, Admin_logAggregateArgs>): Prisma.PrismaPromise<GetAdmin_logAggregateType<T>>

    /**
     * Group by Admin_log.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {admin_logGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends admin_logGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: admin_logGroupByArgs['orderBy'] }
        : { orderBy?: admin_logGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, admin_logGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAdmin_logGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the admin_log model
   */
  readonly fields: admin_logFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for admin_log.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__admin_logClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | Null, Null, ExtArgs, ClientOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the admin_log model
   */ 
  interface admin_logFieldRefs {
    readonly id: FieldRef<"admin_log", 'Int'>
    readonly type: FieldRef<"admin_log", 'String'>
    readonly content: FieldRef<"admin_log", 'String'>
    readonly status: FieldRef<"admin_log", 'Int'>
    readonly user_id: FieldRef<"admin_log", 'Int'>
    readonly created: FieldRef<"admin_log", 'DateTime'>
    readonly updated: FieldRef<"admin_log", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * admin_log findUnique
   */
  export type admin_logFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admin_log
     */
    select?: admin_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the admin_log
     */
    omit?: admin_logOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: admin_logInclude<ExtArgs> | null
    /**
     * Filter, which admin_log to fetch.
     */
    where: admin_logWhereUniqueInput
  }

  /**
   * admin_log findUniqueOrThrow
   */
  export type admin_logFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admin_log
     */
    select?: admin_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the admin_log
     */
    omit?: admin_logOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: admin_logInclude<ExtArgs> | null
    /**
     * Filter, which admin_log to fetch.
     */
    where: admin_logWhereUniqueInput
  }

  /**
   * admin_log findFirst
   */
  export type admin_logFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admin_log
     */
    select?: admin_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the admin_log
     */
    omit?: admin_logOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: admin_logInclude<ExtArgs> | null
    /**
     * Filter, which admin_log to fetch.
     */
    where?: admin_logWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of admin_logs to fetch.
     */
    orderBy?: admin_logOrderByWithRelationInput | admin_logOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for admin_logs.
     */
    cursor?: admin_logWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` admin_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` admin_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of admin_logs.
     */
    distinct?: Admin_logScalarFieldEnum | Admin_logScalarFieldEnum[]
  }

  /**
   * admin_log findFirstOrThrow
   */
  export type admin_logFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admin_log
     */
    select?: admin_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the admin_log
     */
    omit?: admin_logOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: admin_logInclude<ExtArgs> | null
    /**
     * Filter, which admin_log to fetch.
     */
    where?: admin_logWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of admin_logs to fetch.
     */
    orderBy?: admin_logOrderByWithRelationInput | admin_logOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for admin_logs.
     */
    cursor?: admin_logWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` admin_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` admin_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of admin_logs.
     */
    distinct?: Admin_logScalarFieldEnum | Admin_logScalarFieldEnum[]
  }

  /**
   * admin_log findMany
   */
  export type admin_logFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admin_log
     */
    select?: admin_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the admin_log
     */
    omit?: admin_logOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: admin_logInclude<ExtArgs> | null
    /**
     * Filter, which admin_logs to fetch.
     */
    where?: admin_logWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of admin_logs to fetch.
     */
    orderBy?: admin_logOrderByWithRelationInput | admin_logOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing admin_logs.
     */
    cursor?: admin_logWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` admin_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` admin_logs.
     */
    skip?: number
    distinct?: Admin_logScalarFieldEnum | Admin_logScalarFieldEnum[]
  }

  /**
   * admin_log create
   */
  export type admin_logCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admin_log
     */
    select?: admin_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the admin_log
     */
    omit?: admin_logOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: admin_logInclude<ExtArgs> | null
    /**
     * The data needed to create a admin_log.
     */
    data: XOR<admin_logCreateInput, admin_logUncheckedCreateInput>
  }

  /**
   * admin_log createMany
   */
  export type admin_logCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many admin_logs.
     */
    data: admin_logCreateManyInput | admin_logCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * admin_log createManyAndReturn
   */
  export type admin_logCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admin_log
     */
    select?: admin_logSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the admin_log
     */
    omit?: admin_logOmit<ExtArgs> | null
    /**
     * The data used to create many admin_logs.
     */
    data: admin_logCreateManyInput | admin_logCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: admin_logIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * admin_log update
   */
  export type admin_logUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admin_log
     */
    select?: admin_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the admin_log
     */
    omit?: admin_logOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: admin_logInclude<ExtArgs> | null
    /**
     * The data needed to update a admin_log.
     */
    data: XOR<admin_logUpdateInput, admin_logUncheckedUpdateInput>
    /**
     * Choose, which admin_log to update.
     */
    where: admin_logWhereUniqueInput
  }

  /**
   * admin_log updateMany
   */
  export type admin_logUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update admin_logs.
     */
    data: XOR<admin_logUpdateManyMutationInput, admin_logUncheckedUpdateManyInput>
    /**
     * Filter which admin_logs to update
     */
    where?: admin_logWhereInput
  }

  /**
   * admin_log updateManyAndReturn
   */
  export type admin_logUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admin_log
     */
    select?: admin_logSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the admin_log
     */
    omit?: admin_logOmit<ExtArgs> | null
    /**
     * The data used to update admin_logs.
     */
    data: XOR<admin_logUpdateManyMutationInput, admin_logUncheckedUpdateManyInput>
    /**
     * Filter which admin_logs to update
     */
    where?: admin_logWhereInput
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: admin_logIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * admin_log upsert
   */
  export type admin_logUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admin_log
     */
    select?: admin_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the admin_log
     */
    omit?: admin_logOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: admin_logInclude<ExtArgs> | null
    /**
     * The filter to search for the admin_log to update in case it exists.
     */
    where: admin_logWhereUniqueInput
    /**
     * In case the admin_log found by the `where` argument doesn't exist, create a new admin_log with this data.
     */
    create: XOR<admin_logCreateInput, admin_logUncheckedCreateInput>
    /**
     * In case the admin_log was found with the provided `where` argument, update it with this data.
     */
    update: XOR<admin_logUpdateInput, admin_logUncheckedUpdateInput>
  }

  /**
   * admin_log delete
   */
  export type admin_logDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admin_log
     */
    select?: admin_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the admin_log
     */
    omit?: admin_logOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: admin_logInclude<ExtArgs> | null
    /**
     * Filter which admin_log to delete.
     */
    where: admin_logWhereUniqueInput
  }

  /**
   * admin_log deleteMany
   */
  export type admin_logDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which admin_logs to delete
     */
    where?: admin_logWhereInput
  }

  /**
   * admin_log without action
   */
  export type admin_logDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admin_log
     */
    select?: admin_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the admin_log
     */
    omit?: admin_logOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: admin_logInclude<ExtArgs> | null
  }


  /**
   * Model user_follow_relation
   */

  export type AggregateUser_follow_relation = {
    _count: User_follow_relationCountAggregateOutputType | null
    _avg: User_follow_relationAvgAggregateOutputType | null
    _sum: User_follow_relationSumAggregateOutputType | null
    _min: User_follow_relationMinAggregateOutputType | null
    _max: User_follow_relationMaxAggregateOutputType | null
  }

  export type User_follow_relationAvgAggregateOutputType = {
    id: number | null
    follower_id: number | null
    following_id: number | null
  }

  export type User_follow_relationSumAggregateOutputType = {
    id: number | null
    follower_id: number | null
    following_id: number | null
  }

  export type User_follow_relationMinAggregateOutputType = {
    id: number | null
    follower_id: number | null
    following_id: number | null
  }

  export type User_follow_relationMaxAggregateOutputType = {
    id: number | null
    follower_id: number | null
    following_id: number | null
  }

  export type User_follow_relationCountAggregateOutputType = {
    id: number
    follower_id: number
    following_id: number
    _all: number
  }


  export type User_follow_relationAvgAggregateInputType = {
    id?: true
    follower_id?: true
    following_id?: true
  }

  export type User_follow_relationSumAggregateInputType = {
    id?: true
    follower_id?: true
    following_id?: true
  }

  export type User_follow_relationMinAggregateInputType = {
    id?: true
    follower_id?: true
    following_id?: true
  }

  export type User_follow_relationMaxAggregateInputType = {
    id?: true
    follower_id?: true
    following_id?: true
  }

  export type User_follow_relationCountAggregateInputType = {
    id?: true
    follower_id?: true
    following_id?: true
    _all?: true
  }

  export type User_follow_relationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_follow_relation to aggregate.
     */
    where?: user_follow_relationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_follow_relations to fetch.
     */
    orderBy?: user_follow_relationOrderByWithRelationInput | user_follow_relationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: user_follow_relationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_follow_relations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_follow_relations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned user_follow_relations
    **/
    _count?: true | User_follow_relationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: User_follow_relationAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: User_follow_relationSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: User_follow_relationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: User_follow_relationMaxAggregateInputType
  }

  export type GetUser_follow_relationAggregateType<T extends User_follow_relationAggregateArgs> = {
        [P in keyof T & keyof AggregateUser_follow_relation]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser_follow_relation[P]>
      : GetScalarType<T[P], AggregateUser_follow_relation[P]>
  }




  export type user_follow_relationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_follow_relationWhereInput
    orderBy?: user_follow_relationOrderByWithAggregationInput | user_follow_relationOrderByWithAggregationInput[]
    by: User_follow_relationScalarFieldEnum[] | User_follow_relationScalarFieldEnum
    having?: user_follow_relationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: User_follow_relationCountAggregateInputType | true
    _avg?: User_follow_relationAvgAggregateInputType
    _sum?: User_follow_relationSumAggregateInputType
    _min?: User_follow_relationMinAggregateInputType
    _max?: User_follow_relationMaxAggregateInputType
  }

  export type User_follow_relationGroupByOutputType = {
    id: number
    follower_id: number
    following_id: number
    _count: User_follow_relationCountAggregateOutputType | null
    _avg: User_follow_relationAvgAggregateOutputType | null
    _sum: User_follow_relationSumAggregateOutputType | null
    _min: User_follow_relationMinAggregateOutputType | null
    _max: User_follow_relationMaxAggregateOutputType | null
  }

  type GetUser_follow_relationGroupByPayload<T extends user_follow_relationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<User_follow_relationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof User_follow_relationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], User_follow_relationGroupByOutputType[P]>
            : GetScalarType<T[P], User_follow_relationGroupByOutputType[P]>
        }
      >
    >


  export type user_follow_relationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    follower_id?: boolean
    following_id?: boolean
    follower?: boolean | userDefaultArgs<ExtArgs>
    following?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_follow_relation"]>

  export type user_follow_relationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    follower_id?: boolean
    following_id?: boolean
    follower?: boolean | userDefaultArgs<ExtArgs>
    following?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_follow_relation"]>

  export type user_follow_relationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    follower_id?: boolean
    following_id?: boolean
    follower?: boolean | userDefaultArgs<ExtArgs>
    following?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_follow_relation"]>

  export type user_follow_relationSelectScalar = {
    id?: boolean
    follower_id?: boolean
    following_id?: boolean
  }

  export type user_follow_relationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "follower_id" | "following_id", ExtArgs["result"]["user_follow_relation"]>
  export type user_follow_relationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    follower?: boolean | userDefaultArgs<ExtArgs>
    following?: boolean | userDefaultArgs<ExtArgs>
  }
  export type user_follow_relationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    follower?: boolean | userDefaultArgs<ExtArgs>
    following?: boolean | userDefaultArgs<ExtArgs>
  }
  export type user_follow_relationIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    follower?: boolean | userDefaultArgs<ExtArgs>
    following?: boolean | userDefaultArgs<ExtArgs>
  }

  export type $user_follow_relationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "user_follow_relation"
    objects: {
      follower: Prisma.$userPayload<ExtArgs>
      following: Prisma.$userPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      follower_id: number
      following_id: number
    }, ExtArgs["result"]["user_follow_relation"]>
    composites: {}
  }

  type user_follow_relationGetPayload<S extends boolean | null | undefined | user_follow_relationDefaultArgs> = $Result.GetResult<Prisma.$user_follow_relationPayload, S>

  type user_follow_relationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<user_follow_relationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: User_follow_relationCountAggregateInputType | true
    }

  export interface user_follow_relationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['user_follow_relation'], meta: { name: 'user_follow_relation' } }
    /**
     * Find zero or one User_follow_relation that matches the filter.
     * @param {user_follow_relationFindUniqueArgs} args - Arguments to find a User_follow_relation
     * @example
     * // Get one User_follow_relation
     * const user_follow_relation = await prisma.user_follow_relation.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends user_follow_relationFindUniqueArgs>(args: SelectSubset<T, user_follow_relationFindUniqueArgs<ExtArgs>>): Prisma__user_follow_relationClient<$Result.GetResult<Prisma.$user_follow_relationPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one User_follow_relation that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {user_follow_relationFindUniqueOrThrowArgs} args - Arguments to find a User_follow_relation
     * @example
     * // Get one User_follow_relation
     * const user_follow_relation = await prisma.user_follow_relation.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends user_follow_relationFindUniqueOrThrowArgs>(args: SelectSubset<T, user_follow_relationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__user_follow_relationClient<$Result.GetResult<Prisma.$user_follow_relationPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first User_follow_relation that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_follow_relationFindFirstArgs} args - Arguments to find a User_follow_relation
     * @example
     * // Get one User_follow_relation
     * const user_follow_relation = await prisma.user_follow_relation.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends user_follow_relationFindFirstArgs>(args?: SelectSubset<T, user_follow_relationFindFirstArgs<ExtArgs>>): Prisma__user_follow_relationClient<$Result.GetResult<Prisma.$user_follow_relationPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first User_follow_relation that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_follow_relationFindFirstOrThrowArgs} args - Arguments to find a User_follow_relation
     * @example
     * // Get one User_follow_relation
     * const user_follow_relation = await prisma.user_follow_relation.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends user_follow_relationFindFirstOrThrowArgs>(args?: SelectSubset<T, user_follow_relationFindFirstOrThrowArgs<ExtArgs>>): Prisma__user_follow_relationClient<$Result.GetResult<Prisma.$user_follow_relationPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more User_follow_relations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_follow_relationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all User_follow_relations
     * const user_follow_relations = await prisma.user_follow_relation.findMany()
     * 
     * // Get first 10 User_follow_relations
     * const user_follow_relations = await prisma.user_follow_relation.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const user_follow_relationWithIdOnly = await prisma.user_follow_relation.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends user_follow_relationFindManyArgs>(args?: SelectSubset<T, user_follow_relationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_follow_relationPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a User_follow_relation.
     * @param {user_follow_relationCreateArgs} args - Arguments to create a User_follow_relation.
     * @example
     * // Create one User_follow_relation
     * const User_follow_relation = await prisma.user_follow_relation.create({
     *   data: {
     *     // ... data to create a User_follow_relation
     *   }
     * })
     * 
     */
    create<T extends user_follow_relationCreateArgs>(args: SelectSubset<T, user_follow_relationCreateArgs<ExtArgs>>): Prisma__user_follow_relationClient<$Result.GetResult<Prisma.$user_follow_relationPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many User_follow_relations.
     * @param {user_follow_relationCreateManyArgs} args - Arguments to create many User_follow_relations.
     * @example
     * // Create many User_follow_relations
     * const user_follow_relation = await prisma.user_follow_relation.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends user_follow_relationCreateManyArgs>(args?: SelectSubset<T, user_follow_relationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many User_follow_relations and returns the data saved in the database.
     * @param {user_follow_relationCreateManyAndReturnArgs} args - Arguments to create many User_follow_relations.
     * @example
     * // Create many User_follow_relations
     * const user_follow_relation = await prisma.user_follow_relation.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many User_follow_relations and only return the `id`
     * const user_follow_relationWithIdOnly = await prisma.user_follow_relation.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends user_follow_relationCreateManyAndReturnArgs>(args?: SelectSubset<T, user_follow_relationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_follow_relationPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a User_follow_relation.
     * @param {user_follow_relationDeleteArgs} args - Arguments to delete one User_follow_relation.
     * @example
     * // Delete one User_follow_relation
     * const User_follow_relation = await prisma.user_follow_relation.delete({
     *   where: {
     *     // ... filter to delete one User_follow_relation
     *   }
     * })
     * 
     */
    delete<T extends user_follow_relationDeleteArgs>(args: SelectSubset<T, user_follow_relationDeleteArgs<ExtArgs>>): Prisma__user_follow_relationClient<$Result.GetResult<Prisma.$user_follow_relationPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one User_follow_relation.
     * @param {user_follow_relationUpdateArgs} args - Arguments to update one User_follow_relation.
     * @example
     * // Update one User_follow_relation
     * const user_follow_relation = await prisma.user_follow_relation.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends user_follow_relationUpdateArgs>(args: SelectSubset<T, user_follow_relationUpdateArgs<ExtArgs>>): Prisma__user_follow_relationClient<$Result.GetResult<Prisma.$user_follow_relationPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more User_follow_relations.
     * @param {user_follow_relationDeleteManyArgs} args - Arguments to filter User_follow_relations to delete.
     * @example
     * // Delete a few User_follow_relations
     * const { count } = await prisma.user_follow_relation.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends user_follow_relationDeleteManyArgs>(args?: SelectSubset<T, user_follow_relationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_follow_relations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_follow_relationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many User_follow_relations
     * const user_follow_relation = await prisma.user_follow_relation.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends user_follow_relationUpdateManyArgs>(args: SelectSubset<T, user_follow_relationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_follow_relations and returns the data updated in the database.
     * @param {user_follow_relationUpdateManyAndReturnArgs} args - Arguments to update many User_follow_relations.
     * @example
     * // Update many User_follow_relations
     * const user_follow_relation = await prisma.user_follow_relation.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more User_follow_relations and only return the `id`
     * const user_follow_relationWithIdOnly = await prisma.user_follow_relation.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends user_follow_relationUpdateManyAndReturnArgs>(args: SelectSubset<T, user_follow_relationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_follow_relationPayload<ExtArgs>, T, "updateManyAndReturn", ClientOptions>>

    /**
     * Create or update one User_follow_relation.
     * @param {user_follow_relationUpsertArgs} args - Arguments to update or create a User_follow_relation.
     * @example
     * // Update or create a User_follow_relation
     * const user_follow_relation = await prisma.user_follow_relation.upsert({
     *   create: {
     *     // ... data to create a User_follow_relation
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User_follow_relation we want to update
     *   }
     * })
     */
    upsert<T extends user_follow_relationUpsertArgs>(args: SelectSubset<T, user_follow_relationUpsertArgs<ExtArgs>>): Prisma__user_follow_relationClient<$Result.GetResult<Prisma.$user_follow_relationPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of User_follow_relations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_follow_relationCountArgs} args - Arguments to filter User_follow_relations to count.
     * @example
     * // Count the number of User_follow_relations
     * const count = await prisma.user_follow_relation.count({
     *   where: {
     *     // ... the filter for the User_follow_relations we want to count
     *   }
     * })
    **/
    count<T extends user_follow_relationCountArgs>(
      args?: Subset<T, user_follow_relationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], User_follow_relationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User_follow_relation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_follow_relationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends User_follow_relationAggregateArgs>(args: Subset<T, User_follow_relationAggregateArgs>): Prisma.PrismaPromise<GetUser_follow_relationAggregateType<T>>

    /**
     * Group by User_follow_relation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_follow_relationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends user_follow_relationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: user_follow_relationGroupByArgs['orderBy'] }
        : { orderBy?: user_follow_relationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, user_follow_relationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUser_follow_relationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the user_follow_relation model
   */
  readonly fields: user_follow_relationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for user_follow_relation.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__user_follow_relationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    follower<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | Null, Null, ExtArgs, ClientOptions>
    following<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | Null, Null, ExtArgs, ClientOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the user_follow_relation model
   */ 
  interface user_follow_relationFieldRefs {
    readonly id: FieldRef<"user_follow_relation", 'Int'>
    readonly follower_id: FieldRef<"user_follow_relation", 'Int'>
    readonly following_id: FieldRef<"user_follow_relation", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * user_follow_relation findUnique
   */
  export type user_follow_relationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_follow_relation
     */
    select?: user_follow_relationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_follow_relation
     */
    omit?: user_follow_relationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_follow_relationInclude<ExtArgs> | null
    /**
     * Filter, which user_follow_relation to fetch.
     */
    where: user_follow_relationWhereUniqueInput
  }

  /**
   * user_follow_relation findUniqueOrThrow
   */
  export type user_follow_relationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_follow_relation
     */
    select?: user_follow_relationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_follow_relation
     */
    omit?: user_follow_relationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_follow_relationInclude<ExtArgs> | null
    /**
     * Filter, which user_follow_relation to fetch.
     */
    where: user_follow_relationWhereUniqueInput
  }

  /**
   * user_follow_relation findFirst
   */
  export type user_follow_relationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_follow_relation
     */
    select?: user_follow_relationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_follow_relation
     */
    omit?: user_follow_relationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_follow_relationInclude<ExtArgs> | null
    /**
     * Filter, which user_follow_relation to fetch.
     */
    where?: user_follow_relationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_follow_relations to fetch.
     */
    orderBy?: user_follow_relationOrderByWithRelationInput | user_follow_relationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_follow_relations.
     */
    cursor?: user_follow_relationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_follow_relations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_follow_relations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_follow_relations.
     */
    distinct?: User_follow_relationScalarFieldEnum | User_follow_relationScalarFieldEnum[]
  }

  /**
   * user_follow_relation findFirstOrThrow
   */
  export type user_follow_relationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_follow_relation
     */
    select?: user_follow_relationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_follow_relation
     */
    omit?: user_follow_relationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_follow_relationInclude<ExtArgs> | null
    /**
     * Filter, which user_follow_relation to fetch.
     */
    where?: user_follow_relationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_follow_relations to fetch.
     */
    orderBy?: user_follow_relationOrderByWithRelationInput | user_follow_relationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_follow_relations.
     */
    cursor?: user_follow_relationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_follow_relations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_follow_relations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_follow_relations.
     */
    distinct?: User_follow_relationScalarFieldEnum | User_follow_relationScalarFieldEnum[]
  }

  /**
   * user_follow_relation findMany
   */
  export type user_follow_relationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_follow_relation
     */
    select?: user_follow_relationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_follow_relation
     */
    omit?: user_follow_relationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_follow_relationInclude<ExtArgs> | null
    /**
     * Filter, which user_follow_relations to fetch.
     */
    where?: user_follow_relationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_follow_relations to fetch.
     */
    orderBy?: user_follow_relationOrderByWithRelationInput | user_follow_relationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing user_follow_relations.
     */
    cursor?: user_follow_relationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_follow_relations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_follow_relations.
     */
    skip?: number
    distinct?: User_follow_relationScalarFieldEnum | User_follow_relationScalarFieldEnum[]
  }

  /**
   * user_follow_relation create
   */
  export type user_follow_relationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_follow_relation
     */
    select?: user_follow_relationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_follow_relation
     */
    omit?: user_follow_relationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_follow_relationInclude<ExtArgs> | null
    /**
     * The data needed to create a user_follow_relation.
     */
    data: XOR<user_follow_relationCreateInput, user_follow_relationUncheckedCreateInput>
  }

  /**
   * user_follow_relation createMany
   */
  export type user_follow_relationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many user_follow_relations.
     */
    data: user_follow_relationCreateManyInput | user_follow_relationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * user_follow_relation createManyAndReturn
   */
  export type user_follow_relationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_follow_relation
     */
    select?: user_follow_relationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user_follow_relation
     */
    omit?: user_follow_relationOmit<ExtArgs> | null
    /**
     * The data used to create many user_follow_relations.
     */
    data: user_follow_relationCreateManyInput | user_follow_relationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_follow_relationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * user_follow_relation update
   */
  export type user_follow_relationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_follow_relation
     */
    select?: user_follow_relationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_follow_relation
     */
    omit?: user_follow_relationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_follow_relationInclude<ExtArgs> | null
    /**
     * The data needed to update a user_follow_relation.
     */
    data: XOR<user_follow_relationUpdateInput, user_follow_relationUncheckedUpdateInput>
    /**
     * Choose, which user_follow_relation to update.
     */
    where: user_follow_relationWhereUniqueInput
  }

  /**
   * user_follow_relation updateMany
   */
  export type user_follow_relationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update user_follow_relations.
     */
    data: XOR<user_follow_relationUpdateManyMutationInput, user_follow_relationUncheckedUpdateManyInput>
    /**
     * Filter which user_follow_relations to update
     */
    where?: user_follow_relationWhereInput
  }

  /**
   * user_follow_relation updateManyAndReturn
   */
  export type user_follow_relationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_follow_relation
     */
    select?: user_follow_relationSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user_follow_relation
     */
    omit?: user_follow_relationOmit<ExtArgs> | null
    /**
     * The data used to update user_follow_relations.
     */
    data: XOR<user_follow_relationUpdateManyMutationInput, user_follow_relationUncheckedUpdateManyInput>
    /**
     * Filter which user_follow_relations to update
     */
    where?: user_follow_relationWhereInput
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_follow_relationIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * user_follow_relation upsert
   */
  export type user_follow_relationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_follow_relation
     */
    select?: user_follow_relationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_follow_relation
     */
    omit?: user_follow_relationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_follow_relationInclude<ExtArgs> | null
    /**
     * The filter to search for the user_follow_relation to update in case it exists.
     */
    where: user_follow_relationWhereUniqueInput
    /**
     * In case the user_follow_relation found by the `where` argument doesn't exist, create a new user_follow_relation with this data.
     */
    create: XOR<user_follow_relationCreateInput, user_follow_relationUncheckedCreateInput>
    /**
     * In case the user_follow_relation was found with the provided `where` argument, update it with this data.
     */
    update: XOR<user_follow_relationUpdateInput, user_follow_relationUncheckedUpdateInput>
  }

  /**
   * user_follow_relation delete
   */
  export type user_follow_relationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_follow_relation
     */
    select?: user_follow_relationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_follow_relation
     */
    omit?: user_follow_relationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_follow_relationInclude<ExtArgs> | null
    /**
     * Filter which user_follow_relation to delete.
     */
    where: user_follow_relationWhereUniqueInput
  }

  /**
   * user_follow_relation deleteMany
   */
  export type user_follow_relationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_follow_relations to delete
     */
    where?: user_follow_relationWhereInput
  }

  /**
   * user_follow_relation without action
   */
  export type user_follow_relationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_follow_relation
     */
    select?: user_follow_relationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_follow_relation
     */
    omit?: user_follow_relationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_follow_relationInclude<ExtArgs> | null
  }


  /**
   * Model user_message
   */

  export type AggregateUser_message = {
    _count: User_messageCountAggregateOutputType | null
    _avg: User_messageAvgAggregateOutputType | null
    _sum: User_messageSumAggregateOutputType | null
    _min: User_messageMinAggregateOutputType | null
    _max: User_messageMaxAggregateOutputType | null
  }

  export type User_messageAvgAggregateOutputType = {
    id: number | null
    status: number | null
    sender_id: number | null
    recipient_id: number | null
  }

  export type User_messageSumAggregateOutputType = {
    id: number | null
    status: number | null
    sender_id: number | null
    recipient_id: number | null
  }

  export type User_messageMinAggregateOutputType = {
    id: number | null
    type: string | null
    content: string | null
    status: number | null
    link: string | null
    sender_id: number | null
    recipient_id: number | null
    created: Date | null
    updated: Date | null
  }

  export type User_messageMaxAggregateOutputType = {
    id: number | null
    type: string | null
    content: string | null
    status: number | null
    link: string | null
    sender_id: number | null
    recipient_id: number | null
    created: Date | null
    updated: Date | null
  }

  export type User_messageCountAggregateOutputType = {
    id: number
    type: number
    content: number
    status: number
    link: number
    sender_id: number
    recipient_id: number
    created: number
    updated: number
    _all: number
  }


  export type User_messageAvgAggregateInputType = {
    id?: true
    status?: true
    sender_id?: true
    recipient_id?: true
  }

  export type User_messageSumAggregateInputType = {
    id?: true
    status?: true
    sender_id?: true
    recipient_id?: true
  }

  export type User_messageMinAggregateInputType = {
    id?: true
    type?: true
    content?: true
    status?: true
    link?: true
    sender_id?: true
    recipient_id?: true
    created?: true
    updated?: true
  }

  export type User_messageMaxAggregateInputType = {
    id?: true
    type?: true
    content?: true
    status?: true
    link?: true
    sender_id?: true
    recipient_id?: true
    created?: true
    updated?: true
  }

  export type User_messageCountAggregateInputType = {
    id?: true
    type?: true
    content?: true
    status?: true
    link?: true
    sender_id?: true
    recipient_id?: true
    created?: true
    updated?: true
    _all?: true
  }

  export type User_messageAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_message to aggregate.
     */
    where?: user_messageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_messages to fetch.
     */
    orderBy?: user_messageOrderByWithRelationInput | user_messageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: user_messageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_messages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned user_messages
    **/
    _count?: true | User_messageCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: User_messageAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: User_messageSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: User_messageMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: User_messageMaxAggregateInputType
  }

  export type GetUser_messageAggregateType<T extends User_messageAggregateArgs> = {
        [P in keyof T & keyof AggregateUser_message]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser_message[P]>
      : GetScalarType<T[P], AggregateUser_message[P]>
  }




  export type user_messageGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_messageWhereInput
    orderBy?: user_messageOrderByWithAggregationInput | user_messageOrderByWithAggregationInput[]
    by: User_messageScalarFieldEnum[] | User_messageScalarFieldEnum
    having?: user_messageScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: User_messageCountAggregateInputType | true
    _avg?: User_messageAvgAggregateInputType
    _sum?: User_messageSumAggregateInputType
    _min?: User_messageMinAggregateInputType
    _max?: User_messageMaxAggregateInputType
  }

  export type User_messageGroupByOutputType = {
    id: number
    type: string
    content: string
    status: number
    link: string
    sender_id: number | null
    recipient_id: number | null
    created: Date
    updated: Date
    _count: User_messageCountAggregateOutputType | null
    _avg: User_messageAvgAggregateOutputType | null
    _sum: User_messageSumAggregateOutputType | null
    _min: User_messageMinAggregateOutputType | null
    _max: User_messageMaxAggregateOutputType | null
  }

  type GetUser_messageGroupByPayload<T extends user_messageGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<User_messageGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof User_messageGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], User_messageGroupByOutputType[P]>
            : GetScalarType<T[P], User_messageGroupByOutputType[P]>
        }
      >
    >


  export type user_messageSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    type?: boolean
    content?: boolean
    status?: boolean
    link?: boolean
    sender_id?: boolean
    recipient_id?: boolean
    created?: boolean
    updated?: boolean
    sender?: boolean | user_message$senderArgs<ExtArgs>
    recipient?: boolean | user_message$recipientArgs<ExtArgs>
  }, ExtArgs["result"]["user_message"]>

  export type user_messageSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    type?: boolean
    content?: boolean
    status?: boolean
    link?: boolean
    sender_id?: boolean
    recipient_id?: boolean
    created?: boolean
    updated?: boolean
    sender?: boolean | user_message$senderArgs<ExtArgs>
    recipient?: boolean | user_message$recipientArgs<ExtArgs>
  }, ExtArgs["result"]["user_message"]>

  export type user_messageSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    type?: boolean
    content?: boolean
    status?: boolean
    link?: boolean
    sender_id?: boolean
    recipient_id?: boolean
    created?: boolean
    updated?: boolean
    sender?: boolean | user_message$senderArgs<ExtArgs>
    recipient?: boolean | user_message$recipientArgs<ExtArgs>
  }, ExtArgs["result"]["user_message"]>

  export type user_messageSelectScalar = {
    id?: boolean
    type?: boolean
    content?: boolean
    status?: boolean
    link?: boolean
    sender_id?: boolean
    recipient_id?: boolean
    created?: boolean
    updated?: boolean
  }

  export type user_messageOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "type" | "content" | "status" | "link" | "sender_id" | "recipient_id" | "created" | "updated", ExtArgs["result"]["user_message"]>
  export type user_messageInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sender?: boolean | user_message$senderArgs<ExtArgs>
    recipient?: boolean | user_message$recipientArgs<ExtArgs>
  }
  export type user_messageIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sender?: boolean | user_message$senderArgs<ExtArgs>
    recipient?: boolean | user_message$recipientArgs<ExtArgs>
  }
  export type user_messageIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sender?: boolean | user_message$senderArgs<ExtArgs>
    recipient?: boolean | user_message$recipientArgs<ExtArgs>
  }

  export type $user_messagePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "user_message"
    objects: {
      sender: Prisma.$userPayload<ExtArgs> | null
      recipient: Prisma.$userPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      type: string
      content: string
      status: number
      link: string
      sender_id: number | null
      recipient_id: number | null
      created: Date
      updated: Date
    }, ExtArgs["result"]["user_message"]>
    composites: {}
  }

  type user_messageGetPayload<S extends boolean | null | undefined | user_messageDefaultArgs> = $Result.GetResult<Prisma.$user_messagePayload, S>

  type user_messageCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<user_messageFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: User_messageCountAggregateInputType | true
    }

  export interface user_messageDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['user_message'], meta: { name: 'user_message' } }
    /**
     * Find zero or one User_message that matches the filter.
     * @param {user_messageFindUniqueArgs} args - Arguments to find a User_message
     * @example
     * // Get one User_message
     * const user_message = await prisma.user_message.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends user_messageFindUniqueArgs>(args: SelectSubset<T, user_messageFindUniqueArgs<ExtArgs>>): Prisma__user_messageClient<$Result.GetResult<Prisma.$user_messagePayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one User_message that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {user_messageFindUniqueOrThrowArgs} args - Arguments to find a User_message
     * @example
     * // Get one User_message
     * const user_message = await prisma.user_message.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends user_messageFindUniqueOrThrowArgs>(args: SelectSubset<T, user_messageFindUniqueOrThrowArgs<ExtArgs>>): Prisma__user_messageClient<$Result.GetResult<Prisma.$user_messagePayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first User_message that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_messageFindFirstArgs} args - Arguments to find a User_message
     * @example
     * // Get one User_message
     * const user_message = await prisma.user_message.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends user_messageFindFirstArgs>(args?: SelectSubset<T, user_messageFindFirstArgs<ExtArgs>>): Prisma__user_messageClient<$Result.GetResult<Prisma.$user_messagePayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first User_message that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_messageFindFirstOrThrowArgs} args - Arguments to find a User_message
     * @example
     * // Get one User_message
     * const user_message = await prisma.user_message.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends user_messageFindFirstOrThrowArgs>(args?: SelectSubset<T, user_messageFindFirstOrThrowArgs<ExtArgs>>): Prisma__user_messageClient<$Result.GetResult<Prisma.$user_messagePayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more User_messages that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_messageFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all User_messages
     * const user_messages = await prisma.user_message.findMany()
     * 
     * // Get first 10 User_messages
     * const user_messages = await prisma.user_message.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const user_messageWithIdOnly = await prisma.user_message.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends user_messageFindManyArgs>(args?: SelectSubset<T, user_messageFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_messagePayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a User_message.
     * @param {user_messageCreateArgs} args - Arguments to create a User_message.
     * @example
     * // Create one User_message
     * const User_message = await prisma.user_message.create({
     *   data: {
     *     // ... data to create a User_message
     *   }
     * })
     * 
     */
    create<T extends user_messageCreateArgs>(args: SelectSubset<T, user_messageCreateArgs<ExtArgs>>): Prisma__user_messageClient<$Result.GetResult<Prisma.$user_messagePayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many User_messages.
     * @param {user_messageCreateManyArgs} args - Arguments to create many User_messages.
     * @example
     * // Create many User_messages
     * const user_message = await prisma.user_message.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends user_messageCreateManyArgs>(args?: SelectSubset<T, user_messageCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many User_messages and returns the data saved in the database.
     * @param {user_messageCreateManyAndReturnArgs} args - Arguments to create many User_messages.
     * @example
     * // Create many User_messages
     * const user_message = await prisma.user_message.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many User_messages and only return the `id`
     * const user_messageWithIdOnly = await prisma.user_message.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends user_messageCreateManyAndReturnArgs>(args?: SelectSubset<T, user_messageCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_messagePayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a User_message.
     * @param {user_messageDeleteArgs} args - Arguments to delete one User_message.
     * @example
     * // Delete one User_message
     * const User_message = await prisma.user_message.delete({
     *   where: {
     *     // ... filter to delete one User_message
     *   }
     * })
     * 
     */
    delete<T extends user_messageDeleteArgs>(args: SelectSubset<T, user_messageDeleteArgs<ExtArgs>>): Prisma__user_messageClient<$Result.GetResult<Prisma.$user_messagePayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one User_message.
     * @param {user_messageUpdateArgs} args - Arguments to update one User_message.
     * @example
     * // Update one User_message
     * const user_message = await prisma.user_message.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends user_messageUpdateArgs>(args: SelectSubset<T, user_messageUpdateArgs<ExtArgs>>): Prisma__user_messageClient<$Result.GetResult<Prisma.$user_messagePayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more User_messages.
     * @param {user_messageDeleteManyArgs} args - Arguments to filter User_messages to delete.
     * @example
     * // Delete a few User_messages
     * const { count } = await prisma.user_message.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends user_messageDeleteManyArgs>(args?: SelectSubset<T, user_messageDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_messages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_messageUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many User_messages
     * const user_message = await prisma.user_message.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends user_messageUpdateManyArgs>(args: SelectSubset<T, user_messageUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_messages and returns the data updated in the database.
     * @param {user_messageUpdateManyAndReturnArgs} args - Arguments to update many User_messages.
     * @example
     * // Update many User_messages
     * const user_message = await prisma.user_message.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more User_messages and only return the `id`
     * const user_messageWithIdOnly = await prisma.user_message.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends user_messageUpdateManyAndReturnArgs>(args: SelectSubset<T, user_messageUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_messagePayload<ExtArgs>, T, "updateManyAndReturn", ClientOptions>>

    /**
     * Create or update one User_message.
     * @param {user_messageUpsertArgs} args - Arguments to update or create a User_message.
     * @example
     * // Update or create a User_message
     * const user_message = await prisma.user_message.upsert({
     *   create: {
     *     // ... data to create a User_message
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User_message we want to update
     *   }
     * })
     */
    upsert<T extends user_messageUpsertArgs>(args: SelectSubset<T, user_messageUpsertArgs<ExtArgs>>): Prisma__user_messageClient<$Result.GetResult<Prisma.$user_messagePayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of User_messages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_messageCountArgs} args - Arguments to filter User_messages to count.
     * @example
     * // Count the number of User_messages
     * const count = await prisma.user_message.count({
     *   where: {
     *     // ... the filter for the User_messages we want to count
     *   }
     * })
    **/
    count<T extends user_messageCountArgs>(
      args?: Subset<T, user_messageCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], User_messageCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User_message.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_messageAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends User_messageAggregateArgs>(args: Subset<T, User_messageAggregateArgs>): Prisma.PrismaPromise<GetUser_messageAggregateType<T>>

    /**
     * Group by User_message.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_messageGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends user_messageGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: user_messageGroupByArgs['orderBy'] }
        : { orderBy?: user_messageGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, user_messageGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUser_messageGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the user_message model
   */
  readonly fields: user_messageFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for user_message.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__user_messageClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    sender<T extends user_message$senderArgs<ExtArgs> = {}>(args?: Subset<T, user_message$senderArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | null, null, ExtArgs, ClientOptions>
    recipient<T extends user_message$recipientArgs<ExtArgs> = {}>(args?: Subset<T, user_message$recipientArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | null, null, ExtArgs, ClientOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the user_message model
   */ 
  interface user_messageFieldRefs {
    readonly id: FieldRef<"user_message", 'Int'>
    readonly type: FieldRef<"user_message", 'String'>
    readonly content: FieldRef<"user_message", 'String'>
    readonly status: FieldRef<"user_message", 'Int'>
    readonly link: FieldRef<"user_message", 'String'>
    readonly sender_id: FieldRef<"user_message", 'Int'>
    readonly recipient_id: FieldRef<"user_message", 'Int'>
    readonly created: FieldRef<"user_message", 'DateTime'>
    readonly updated: FieldRef<"user_message", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * user_message findUnique
   */
  export type user_messageFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_message
     */
    select?: user_messageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_message
     */
    omit?: user_messageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_messageInclude<ExtArgs> | null
    /**
     * Filter, which user_message to fetch.
     */
    where: user_messageWhereUniqueInput
  }

  /**
   * user_message findUniqueOrThrow
   */
  export type user_messageFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_message
     */
    select?: user_messageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_message
     */
    omit?: user_messageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_messageInclude<ExtArgs> | null
    /**
     * Filter, which user_message to fetch.
     */
    where: user_messageWhereUniqueInput
  }

  /**
   * user_message findFirst
   */
  export type user_messageFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_message
     */
    select?: user_messageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_message
     */
    omit?: user_messageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_messageInclude<ExtArgs> | null
    /**
     * Filter, which user_message to fetch.
     */
    where?: user_messageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_messages to fetch.
     */
    orderBy?: user_messageOrderByWithRelationInput | user_messageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_messages.
     */
    cursor?: user_messageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_messages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_messages.
     */
    distinct?: User_messageScalarFieldEnum | User_messageScalarFieldEnum[]
  }

  /**
   * user_message findFirstOrThrow
   */
  export type user_messageFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_message
     */
    select?: user_messageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_message
     */
    omit?: user_messageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_messageInclude<ExtArgs> | null
    /**
     * Filter, which user_message to fetch.
     */
    where?: user_messageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_messages to fetch.
     */
    orderBy?: user_messageOrderByWithRelationInput | user_messageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_messages.
     */
    cursor?: user_messageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_messages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_messages.
     */
    distinct?: User_messageScalarFieldEnum | User_messageScalarFieldEnum[]
  }

  /**
   * user_message findMany
   */
  export type user_messageFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_message
     */
    select?: user_messageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_message
     */
    omit?: user_messageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_messageInclude<ExtArgs> | null
    /**
     * Filter, which user_messages to fetch.
     */
    where?: user_messageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_messages to fetch.
     */
    orderBy?: user_messageOrderByWithRelationInput | user_messageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing user_messages.
     */
    cursor?: user_messageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_messages.
     */
    skip?: number
    distinct?: User_messageScalarFieldEnum | User_messageScalarFieldEnum[]
  }

  /**
   * user_message create
   */
  export type user_messageCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_message
     */
    select?: user_messageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_message
     */
    omit?: user_messageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_messageInclude<ExtArgs> | null
    /**
     * The data needed to create a user_message.
     */
    data: XOR<user_messageCreateInput, user_messageUncheckedCreateInput>
  }

  /**
   * user_message createMany
   */
  export type user_messageCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many user_messages.
     */
    data: user_messageCreateManyInput | user_messageCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * user_message createManyAndReturn
   */
  export type user_messageCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_message
     */
    select?: user_messageSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user_message
     */
    omit?: user_messageOmit<ExtArgs> | null
    /**
     * The data used to create many user_messages.
     */
    data: user_messageCreateManyInput | user_messageCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_messageIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * user_message update
   */
  export type user_messageUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_message
     */
    select?: user_messageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_message
     */
    omit?: user_messageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_messageInclude<ExtArgs> | null
    /**
     * The data needed to update a user_message.
     */
    data: XOR<user_messageUpdateInput, user_messageUncheckedUpdateInput>
    /**
     * Choose, which user_message to update.
     */
    where: user_messageWhereUniqueInput
  }

  /**
   * user_message updateMany
   */
  export type user_messageUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update user_messages.
     */
    data: XOR<user_messageUpdateManyMutationInput, user_messageUncheckedUpdateManyInput>
    /**
     * Filter which user_messages to update
     */
    where?: user_messageWhereInput
  }

  /**
   * user_message updateManyAndReturn
   */
  export type user_messageUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_message
     */
    select?: user_messageSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user_message
     */
    omit?: user_messageOmit<ExtArgs> | null
    /**
     * The data used to update user_messages.
     */
    data: XOR<user_messageUpdateManyMutationInput, user_messageUncheckedUpdateManyInput>
    /**
     * Filter which user_messages to update
     */
    where?: user_messageWhereInput
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_messageIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * user_message upsert
   */
  export type user_messageUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_message
     */
    select?: user_messageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_message
     */
    omit?: user_messageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_messageInclude<ExtArgs> | null
    /**
     * The filter to search for the user_message to update in case it exists.
     */
    where: user_messageWhereUniqueInput
    /**
     * In case the user_message found by the `where` argument doesn't exist, create a new user_message with this data.
     */
    create: XOR<user_messageCreateInput, user_messageUncheckedCreateInput>
    /**
     * In case the user_message was found with the provided `where` argument, update it with this data.
     */
    update: XOR<user_messageUpdateInput, user_messageUncheckedUpdateInput>
  }

  /**
   * user_message delete
   */
  export type user_messageDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_message
     */
    select?: user_messageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_message
     */
    omit?: user_messageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_messageInclude<ExtArgs> | null
    /**
     * Filter which user_message to delete.
     */
    where: user_messageWhereUniqueInput
  }

  /**
   * user_message deleteMany
   */
  export type user_messageDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_messages to delete
     */
    where?: user_messageWhereInput
  }

  /**
   * user_message.sender
   */
  export type user_message$senderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    where?: userWhereInput
  }

  /**
   * user_message.recipient
   */
  export type user_message$recipientArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user
     */
    omit?: userOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: userInclude<ExtArgs> | null
    where?: userWhereInput
  }

  /**
   * user_message without action
   */
  export type user_messageDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_message
     */
    select?: user_messageSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_message
     */
    omit?: user_messageOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_messageInclude<ExtArgs> | null
  }


  /**
   * Model user_patch_favorite_folder
   */

  export type AggregateUser_patch_favorite_folder = {
    _count: User_patch_favorite_folderCountAggregateOutputType | null
    _avg: User_patch_favorite_folderAvgAggregateOutputType | null
    _sum: User_patch_favorite_folderSumAggregateOutputType | null
    _min: User_patch_favorite_folderMinAggregateOutputType | null
    _max: User_patch_favorite_folderMaxAggregateOutputType | null
  }

  export type User_patch_favorite_folderAvgAggregateOutputType = {
    id: number | null
    user_id: number | null
  }

  export type User_patch_favorite_folderSumAggregateOutputType = {
    id: number | null
    user_id: number | null
  }

  export type User_patch_favorite_folderMinAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    is_public: boolean | null
    user_id: number | null
    created: Date | null
    updated: Date | null
  }

  export type User_patch_favorite_folderMaxAggregateOutputType = {
    id: number | null
    name: string | null
    description: string | null
    is_public: boolean | null
    user_id: number | null
    created: Date | null
    updated: Date | null
  }

  export type User_patch_favorite_folderCountAggregateOutputType = {
    id: number
    name: number
    description: number
    is_public: number
    user_id: number
    created: number
    updated: number
    _all: number
  }


  export type User_patch_favorite_folderAvgAggregateInputType = {
    id?: true
    user_id?: true
  }

  export type User_patch_favorite_folderSumAggregateInputType = {
    id?: true
    user_id?: true
  }

  export type User_patch_favorite_folderMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    is_public?: true
    user_id?: true
    created?: true
    updated?: true
  }

  export type User_patch_favorite_folderMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    is_public?: true
    user_id?: true
    created?: true
    updated?: true
  }

  export type User_patch_favorite_folderCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    is_public?: true
    user_id?: true
    created?: true
    updated?: true
    _all?: true
  }

  export type User_patch_favorite_folderAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_patch_favorite_folder to aggregate.
     */
    where?: user_patch_favorite_folderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_patch_favorite_folders to fetch.
     */
    orderBy?: user_patch_favorite_folderOrderByWithRelationInput | user_patch_favorite_folderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: user_patch_favorite_folderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_patch_favorite_folders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_patch_favorite_folders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned user_patch_favorite_folders
    **/
    _count?: true | User_patch_favorite_folderCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: User_patch_favorite_folderAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: User_patch_favorite_folderSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: User_patch_favorite_folderMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: User_patch_favorite_folderMaxAggregateInputType
  }

  export type GetUser_patch_favorite_folderAggregateType<T extends User_patch_favorite_folderAggregateArgs> = {
        [P in keyof T & keyof AggregateUser_patch_favorite_folder]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser_patch_favorite_folder[P]>
      : GetScalarType<T[P], AggregateUser_patch_favorite_folder[P]>
  }




  export type user_patch_favorite_folderGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_patch_favorite_folderWhereInput
    orderBy?: user_patch_favorite_folderOrderByWithAggregationInput | user_patch_favorite_folderOrderByWithAggregationInput[]
    by: User_patch_favorite_folderScalarFieldEnum[] | User_patch_favorite_folderScalarFieldEnum
    having?: user_patch_favorite_folderScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: User_patch_favorite_folderCountAggregateInputType | true
    _avg?: User_patch_favorite_folderAvgAggregateInputType
    _sum?: User_patch_favorite_folderSumAggregateInputType
    _min?: User_patch_favorite_folderMinAggregateInputType
    _max?: User_patch_favorite_folderMaxAggregateInputType
  }

  export type User_patch_favorite_folderGroupByOutputType = {
    id: number
    name: string
    description: string
    is_public: boolean
    user_id: number
    created: Date
    updated: Date
    _count: User_patch_favorite_folderCountAggregateOutputType | null
    _avg: User_patch_favorite_folderAvgAggregateOutputType | null
    _sum: User_patch_favorite_folderSumAggregateOutputType | null
    _min: User_patch_favorite_folderMinAggregateOutputType | null
    _max: User_patch_favorite_folderMaxAggregateOutputType | null
  }

  type GetUser_patch_favorite_folderGroupByPayload<T extends user_patch_favorite_folderGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<User_patch_favorite_folderGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof User_patch_favorite_folderGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], User_patch_favorite_folderGroupByOutputType[P]>
            : GetScalarType<T[P], User_patch_favorite_folderGroupByOutputType[P]>
        }
      >
    >


  export type user_patch_favorite_folderSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    is_public?: boolean
    user_id?: boolean
    created?: boolean
    updated?: boolean
    user?: boolean | userDefaultArgs<ExtArgs>
    patch?: boolean | user_patch_favorite_folder$patchArgs<ExtArgs>
    _count?: boolean | User_patch_favorite_folderCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_patch_favorite_folder"]>

  export type user_patch_favorite_folderSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    is_public?: boolean
    user_id?: boolean
    created?: boolean
    updated?: boolean
    user?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_patch_favorite_folder"]>

  export type user_patch_favorite_folderSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    is_public?: boolean
    user_id?: boolean
    created?: boolean
    updated?: boolean
    user?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_patch_favorite_folder"]>

  export type user_patch_favorite_folderSelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    is_public?: boolean
    user_id?: boolean
    created?: boolean
    updated?: boolean
  }

  export type user_patch_favorite_folderOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "description" | "is_public" | "user_id" | "created" | "updated", ExtArgs["result"]["user_patch_favorite_folder"]>
  export type user_patch_favorite_folderInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | userDefaultArgs<ExtArgs>
    patch?: boolean | user_patch_favorite_folder$patchArgs<ExtArgs>
    _count?: boolean | User_patch_favorite_folderCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type user_patch_favorite_folderIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | userDefaultArgs<ExtArgs>
  }
  export type user_patch_favorite_folderIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | userDefaultArgs<ExtArgs>
  }

  export type $user_patch_favorite_folderPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "user_patch_favorite_folder"
    objects: {
      user: Prisma.$userPayload<ExtArgs>
      patch: Prisma.$user_patch_favorite_folder_relationPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      description: string
      is_public: boolean
      user_id: number
      created: Date
      updated: Date
    }, ExtArgs["result"]["user_patch_favorite_folder"]>
    composites: {}
  }

  type user_patch_favorite_folderGetPayload<S extends boolean | null | undefined | user_patch_favorite_folderDefaultArgs> = $Result.GetResult<Prisma.$user_patch_favorite_folderPayload, S>

  type user_patch_favorite_folderCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<user_patch_favorite_folderFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: User_patch_favorite_folderCountAggregateInputType | true
    }

  export interface user_patch_favorite_folderDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['user_patch_favorite_folder'], meta: { name: 'user_patch_favorite_folder' } }
    /**
     * Find zero or one User_patch_favorite_folder that matches the filter.
     * @param {user_patch_favorite_folderFindUniqueArgs} args - Arguments to find a User_patch_favorite_folder
     * @example
     * // Get one User_patch_favorite_folder
     * const user_patch_favorite_folder = await prisma.user_patch_favorite_folder.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends user_patch_favorite_folderFindUniqueArgs>(args: SelectSubset<T, user_patch_favorite_folderFindUniqueArgs<ExtArgs>>): Prisma__user_patch_favorite_folderClient<$Result.GetResult<Prisma.$user_patch_favorite_folderPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one User_patch_favorite_folder that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {user_patch_favorite_folderFindUniqueOrThrowArgs} args - Arguments to find a User_patch_favorite_folder
     * @example
     * // Get one User_patch_favorite_folder
     * const user_patch_favorite_folder = await prisma.user_patch_favorite_folder.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends user_patch_favorite_folderFindUniqueOrThrowArgs>(args: SelectSubset<T, user_patch_favorite_folderFindUniqueOrThrowArgs<ExtArgs>>): Prisma__user_patch_favorite_folderClient<$Result.GetResult<Prisma.$user_patch_favorite_folderPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first User_patch_favorite_folder that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_patch_favorite_folderFindFirstArgs} args - Arguments to find a User_patch_favorite_folder
     * @example
     * // Get one User_patch_favorite_folder
     * const user_patch_favorite_folder = await prisma.user_patch_favorite_folder.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends user_patch_favorite_folderFindFirstArgs>(args?: SelectSubset<T, user_patch_favorite_folderFindFirstArgs<ExtArgs>>): Prisma__user_patch_favorite_folderClient<$Result.GetResult<Prisma.$user_patch_favorite_folderPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first User_patch_favorite_folder that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_patch_favorite_folderFindFirstOrThrowArgs} args - Arguments to find a User_patch_favorite_folder
     * @example
     * // Get one User_patch_favorite_folder
     * const user_patch_favorite_folder = await prisma.user_patch_favorite_folder.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends user_patch_favorite_folderFindFirstOrThrowArgs>(args?: SelectSubset<T, user_patch_favorite_folderFindFirstOrThrowArgs<ExtArgs>>): Prisma__user_patch_favorite_folderClient<$Result.GetResult<Prisma.$user_patch_favorite_folderPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more User_patch_favorite_folders that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_patch_favorite_folderFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all User_patch_favorite_folders
     * const user_patch_favorite_folders = await prisma.user_patch_favorite_folder.findMany()
     * 
     * // Get first 10 User_patch_favorite_folders
     * const user_patch_favorite_folders = await prisma.user_patch_favorite_folder.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const user_patch_favorite_folderWithIdOnly = await prisma.user_patch_favorite_folder.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends user_patch_favorite_folderFindManyArgs>(args?: SelectSubset<T, user_patch_favorite_folderFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_patch_favorite_folderPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a User_patch_favorite_folder.
     * @param {user_patch_favorite_folderCreateArgs} args - Arguments to create a User_patch_favorite_folder.
     * @example
     * // Create one User_patch_favorite_folder
     * const User_patch_favorite_folder = await prisma.user_patch_favorite_folder.create({
     *   data: {
     *     // ... data to create a User_patch_favorite_folder
     *   }
     * })
     * 
     */
    create<T extends user_patch_favorite_folderCreateArgs>(args: SelectSubset<T, user_patch_favorite_folderCreateArgs<ExtArgs>>): Prisma__user_patch_favorite_folderClient<$Result.GetResult<Prisma.$user_patch_favorite_folderPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many User_patch_favorite_folders.
     * @param {user_patch_favorite_folderCreateManyArgs} args - Arguments to create many User_patch_favorite_folders.
     * @example
     * // Create many User_patch_favorite_folders
     * const user_patch_favorite_folder = await prisma.user_patch_favorite_folder.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends user_patch_favorite_folderCreateManyArgs>(args?: SelectSubset<T, user_patch_favorite_folderCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many User_patch_favorite_folders and returns the data saved in the database.
     * @param {user_patch_favorite_folderCreateManyAndReturnArgs} args - Arguments to create many User_patch_favorite_folders.
     * @example
     * // Create many User_patch_favorite_folders
     * const user_patch_favorite_folder = await prisma.user_patch_favorite_folder.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many User_patch_favorite_folders and only return the `id`
     * const user_patch_favorite_folderWithIdOnly = await prisma.user_patch_favorite_folder.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends user_patch_favorite_folderCreateManyAndReturnArgs>(args?: SelectSubset<T, user_patch_favorite_folderCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_patch_favorite_folderPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a User_patch_favorite_folder.
     * @param {user_patch_favorite_folderDeleteArgs} args - Arguments to delete one User_patch_favorite_folder.
     * @example
     * // Delete one User_patch_favorite_folder
     * const User_patch_favorite_folder = await prisma.user_patch_favorite_folder.delete({
     *   where: {
     *     // ... filter to delete one User_patch_favorite_folder
     *   }
     * })
     * 
     */
    delete<T extends user_patch_favorite_folderDeleteArgs>(args: SelectSubset<T, user_patch_favorite_folderDeleteArgs<ExtArgs>>): Prisma__user_patch_favorite_folderClient<$Result.GetResult<Prisma.$user_patch_favorite_folderPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one User_patch_favorite_folder.
     * @param {user_patch_favorite_folderUpdateArgs} args - Arguments to update one User_patch_favorite_folder.
     * @example
     * // Update one User_patch_favorite_folder
     * const user_patch_favorite_folder = await prisma.user_patch_favorite_folder.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends user_patch_favorite_folderUpdateArgs>(args: SelectSubset<T, user_patch_favorite_folderUpdateArgs<ExtArgs>>): Prisma__user_patch_favorite_folderClient<$Result.GetResult<Prisma.$user_patch_favorite_folderPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more User_patch_favorite_folders.
     * @param {user_patch_favorite_folderDeleteManyArgs} args - Arguments to filter User_patch_favorite_folders to delete.
     * @example
     * // Delete a few User_patch_favorite_folders
     * const { count } = await prisma.user_patch_favorite_folder.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends user_patch_favorite_folderDeleteManyArgs>(args?: SelectSubset<T, user_patch_favorite_folderDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_patch_favorite_folders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_patch_favorite_folderUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many User_patch_favorite_folders
     * const user_patch_favorite_folder = await prisma.user_patch_favorite_folder.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends user_patch_favorite_folderUpdateManyArgs>(args: SelectSubset<T, user_patch_favorite_folderUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_patch_favorite_folders and returns the data updated in the database.
     * @param {user_patch_favorite_folderUpdateManyAndReturnArgs} args - Arguments to update many User_patch_favorite_folders.
     * @example
     * // Update many User_patch_favorite_folders
     * const user_patch_favorite_folder = await prisma.user_patch_favorite_folder.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more User_patch_favorite_folders and only return the `id`
     * const user_patch_favorite_folderWithIdOnly = await prisma.user_patch_favorite_folder.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends user_patch_favorite_folderUpdateManyAndReturnArgs>(args: SelectSubset<T, user_patch_favorite_folderUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_patch_favorite_folderPayload<ExtArgs>, T, "updateManyAndReturn", ClientOptions>>

    /**
     * Create or update one User_patch_favorite_folder.
     * @param {user_patch_favorite_folderUpsertArgs} args - Arguments to update or create a User_patch_favorite_folder.
     * @example
     * // Update or create a User_patch_favorite_folder
     * const user_patch_favorite_folder = await prisma.user_patch_favorite_folder.upsert({
     *   create: {
     *     // ... data to create a User_patch_favorite_folder
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User_patch_favorite_folder we want to update
     *   }
     * })
     */
    upsert<T extends user_patch_favorite_folderUpsertArgs>(args: SelectSubset<T, user_patch_favorite_folderUpsertArgs<ExtArgs>>): Prisma__user_patch_favorite_folderClient<$Result.GetResult<Prisma.$user_patch_favorite_folderPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of User_patch_favorite_folders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_patch_favorite_folderCountArgs} args - Arguments to filter User_patch_favorite_folders to count.
     * @example
     * // Count the number of User_patch_favorite_folders
     * const count = await prisma.user_patch_favorite_folder.count({
     *   where: {
     *     // ... the filter for the User_patch_favorite_folders we want to count
     *   }
     * })
    **/
    count<T extends user_patch_favorite_folderCountArgs>(
      args?: Subset<T, user_patch_favorite_folderCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], User_patch_favorite_folderCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User_patch_favorite_folder.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_patch_favorite_folderAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends User_patch_favorite_folderAggregateArgs>(args: Subset<T, User_patch_favorite_folderAggregateArgs>): Prisma.PrismaPromise<GetUser_patch_favorite_folderAggregateType<T>>

    /**
     * Group by User_patch_favorite_folder.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_patch_favorite_folderGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends user_patch_favorite_folderGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: user_patch_favorite_folderGroupByArgs['orderBy'] }
        : { orderBy?: user_patch_favorite_folderGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, user_patch_favorite_folderGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUser_patch_favorite_folderGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the user_patch_favorite_folder model
   */
  readonly fields: user_patch_favorite_folderFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for user_patch_favorite_folder.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__user_patch_favorite_folderClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | Null, Null, ExtArgs, ClientOptions>
    patch<T extends user_patch_favorite_folder$patchArgs<ExtArgs> = {}>(args?: Subset<T, user_patch_favorite_folder$patchArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_patch_favorite_folder_relationPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the user_patch_favorite_folder model
   */ 
  interface user_patch_favorite_folderFieldRefs {
    readonly id: FieldRef<"user_patch_favorite_folder", 'Int'>
    readonly name: FieldRef<"user_patch_favorite_folder", 'String'>
    readonly description: FieldRef<"user_patch_favorite_folder", 'String'>
    readonly is_public: FieldRef<"user_patch_favorite_folder", 'Boolean'>
    readonly user_id: FieldRef<"user_patch_favorite_folder", 'Int'>
    readonly created: FieldRef<"user_patch_favorite_folder", 'DateTime'>
    readonly updated: FieldRef<"user_patch_favorite_folder", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * user_patch_favorite_folder findUnique
   */
  export type user_patch_favorite_folderFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_patch_favorite_folder
     */
    select?: user_patch_favorite_folderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_patch_favorite_folder
     */
    omit?: user_patch_favorite_folderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_patch_favorite_folderInclude<ExtArgs> | null
    /**
     * Filter, which user_patch_favorite_folder to fetch.
     */
    where: user_patch_favorite_folderWhereUniqueInput
  }

  /**
   * user_patch_favorite_folder findUniqueOrThrow
   */
  export type user_patch_favorite_folderFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_patch_favorite_folder
     */
    select?: user_patch_favorite_folderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_patch_favorite_folder
     */
    omit?: user_patch_favorite_folderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_patch_favorite_folderInclude<ExtArgs> | null
    /**
     * Filter, which user_patch_favorite_folder to fetch.
     */
    where: user_patch_favorite_folderWhereUniqueInput
  }

  /**
   * user_patch_favorite_folder findFirst
   */
  export type user_patch_favorite_folderFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_patch_favorite_folder
     */
    select?: user_patch_favorite_folderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_patch_favorite_folder
     */
    omit?: user_patch_favorite_folderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_patch_favorite_folderInclude<ExtArgs> | null
    /**
     * Filter, which user_patch_favorite_folder to fetch.
     */
    where?: user_patch_favorite_folderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_patch_favorite_folders to fetch.
     */
    orderBy?: user_patch_favorite_folderOrderByWithRelationInput | user_patch_favorite_folderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_patch_favorite_folders.
     */
    cursor?: user_patch_favorite_folderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_patch_favorite_folders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_patch_favorite_folders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_patch_favorite_folders.
     */
    distinct?: User_patch_favorite_folderScalarFieldEnum | User_patch_favorite_folderScalarFieldEnum[]
  }

  /**
   * user_patch_favorite_folder findFirstOrThrow
   */
  export type user_patch_favorite_folderFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_patch_favorite_folder
     */
    select?: user_patch_favorite_folderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_patch_favorite_folder
     */
    omit?: user_patch_favorite_folderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_patch_favorite_folderInclude<ExtArgs> | null
    /**
     * Filter, which user_patch_favorite_folder to fetch.
     */
    where?: user_patch_favorite_folderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_patch_favorite_folders to fetch.
     */
    orderBy?: user_patch_favorite_folderOrderByWithRelationInput | user_patch_favorite_folderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_patch_favorite_folders.
     */
    cursor?: user_patch_favorite_folderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_patch_favorite_folders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_patch_favorite_folders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_patch_favorite_folders.
     */
    distinct?: User_patch_favorite_folderScalarFieldEnum | User_patch_favorite_folderScalarFieldEnum[]
  }

  /**
   * user_patch_favorite_folder findMany
   */
  export type user_patch_favorite_folderFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_patch_favorite_folder
     */
    select?: user_patch_favorite_folderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_patch_favorite_folder
     */
    omit?: user_patch_favorite_folderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_patch_favorite_folderInclude<ExtArgs> | null
    /**
     * Filter, which user_patch_favorite_folders to fetch.
     */
    where?: user_patch_favorite_folderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_patch_favorite_folders to fetch.
     */
    orderBy?: user_patch_favorite_folderOrderByWithRelationInput | user_patch_favorite_folderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing user_patch_favorite_folders.
     */
    cursor?: user_patch_favorite_folderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_patch_favorite_folders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_patch_favorite_folders.
     */
    skip?: number
    distinct?: User_patch_favorite_folderScalarFieldEnum | User_patch_favorite_folderScalarFieldEnum[]
  }

  /**
   * user_patch_favorite_folder create
   */
  export type user_patch_favorite_folderCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_patch_favorite_folder
     */
    select?: user_patch_favorite_folderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_patch_favorite_folder
     */
    omit?: user_patch_favorite_folderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_patch_favorite_folderInclude<ExtArgs> | null
    /**
     * The data needed to create a user_patch_favorite_folder.
     */
    data: XOR<user_patch_favorite_folderCreateInput, user_patch_favorite_folderUncheckedCreateInput>
  }

  /**
   * user_patch_favorite_folder createMany
   */
  export type user_patch_favorite_folderCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many user_patch_favorite_folders.
     */
    data: user_patch_favorite_folderCreateManyInput | user_patch_favorite_folderCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * user_patch_favorite_folder createManyAndReturn
   */
  export type user_patch_favorite_folderCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_patch_favorite_folder
     */
    select?: user_patch_favorite_folderSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user_patch_favorite_folder
     */
    omit?: user_patch_favorite_folderOmit<ExtArgs> | null
    /**
     * The data used to create many user_patch_favorite_folders.
     */
    data: user_patch_favorite_folderCreateManyInput | user_patch_favorite_folderCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_patch_favorite_folderIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * user_patch_favorite_folder update
   */
  export type user_patch_favorite_folderUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_patch_favorite_folder
     */
    select?: user_patch_favorite_folderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_patch_favorite_folder
     */
    omit?: user_patch_favorite_folderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_patch_favorite_folderInclude<ExtArgs> | null
    /**
     * The data needed to update a user_patch_favorite_folder.
     */
    data: XOR<user_patch_favorite_folderUpdateInput, user_patch_favorite_folderUncheckedUpdateInput>
    /**
     * Choose, which user_patch_favorite_folder to update.
     */
    where: user_patch_favorite_folderWhereUniqueInput
  }

  /**
   * user_patch_favorite_folder updateMany
   */
  export type user_patch_favorite_folderUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update user_patch_favorite_folders.
     */
    data: XOR<user_patch_favorite_folderUpdateManyMutationInput, user_patch_favorite_folderUncheckedUpdateManyInput>
    /**
     * Filter which user_patch_favorite_folders to update
     */
    where?: user_patch_favorite_folderWhereInput
  }

  /**
   * user_patch_favorite_folder updateManyAndReturn
   */
  export type user_patch_favorite_folderUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_patch_favorite_folder
     */
    select?: user_patch_favorite_folderSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user_patch_favorite_folder
     */
    omit?: user_patch_favorite_folderOmit<ExtArgs> | null
    /**
     * The data used to update user_patch_favorite_folders.
     */
    data: XOR<user_patch_favorite_folderUpdateManyMutationInput, user_patch_favorite_folderUncheckedUpdateManyInput>
    /**
     * Filter which user_patch_favorite_folders to update
     */
    where?: user_patch_favorite_folderWhereInput
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_patch_favorite_folderIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * user_patch_favorite_folder upsert
   */
  export type user_patch_favorite_folderUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_patch_favorite_folder
     */
    select?: user_patch_favorite_folderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_patch_favorite_folder
     */
    omit?: user_patch_favorite_folderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_patch_favorite_folderInclude<ExtArgs> | null
    /**
     * The filter to search for the user_patch_favorite_folder to update in case it exists.
     */
    where: user_patch_favorite_folderWhereUniqueInput
    /**
     * In case the user_patch_favorite_folder found by the `where` argument doesn't exist, create a new user_patch_favorite_folder with this data.
     */
    create: XOR<user_patch_favorite_folderCreateInput, user_patch_favorite_folderUncheckedCreateInput>
    /**
     * In case the user_patch_favorite_folder was found with the provided `where` argument, update it with this data.
     */
    update: XOR<user_patch_favorite_folderUpdateInput, user_patch_favorite_folderUncheckedUpdateInput>
  }

  /**
   * user_patch_favorite_folder delete
   */
  export type user_patch_favorite_folderDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_patch_favorite_folder
     */
    select?: user_patch_favorite_folderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_patch_favorite_folder
     */
    omit?: user_patch_favorite_folderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_patch_favorite_folderInclude<ExtArgs> | null
    /**
     * Filter which user_patch_favorite_folder to delete.
     */
    where: user_patch_favorite_folderWhereUniqueInput
  }

  /**
   * user_patch_favorite_folder deleteMany
   */
  export type user_patch_favorite_folderDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_patch_favorite_folders to delete
     */
    where?: user_patch_favorite_folderWhereInput
  }

  /**
   * user_patch_favorite_folder.patch
   */
  export type user_patch_favorite_folder$patchArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_patch_favorite_folder_relation
     */
    select?: user_patch_favorite_folder_relationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_patch_favorite_folder_relation
     */
    omit?: user_patch_favorite_folder_relationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_patch_favorite_folder_relationInclude<ExtArgs> | null
    where?: user_patch_favorite_folder_relationWhereInput
    orderBy?: user_patch_favorite_folder_relationOrderByWithRelationInput | user_patch_favorite_folder_relationOrderByWithRelationInput[]
    cursor?: user_patch_favorite_folder_relationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: User_patch_favorite_folder_relationScalarFieldEnum | User_patch_favorite_folder_relationScalarFieldEnum[]
  }

  /**
   * user_patch_favorite_folder without action
   */
  export type user_patch_favorite_folderDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_patch_favorite_folder
     */
    select?: user_patch_favorite_folderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_patch_favorite_folder
     */
    omit?: user_patch_favorite_folderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_patch_favorite_folderInclude<ExtArgs> | null
  }


  /**
   * Model user_patch_favorite_folder_relation
   */

  export type AggregateUser_patch_favorite_folder_relation = {
    _count: User_patch_favorite_folder_relationCountAggregateOutputType | null
    _avg: User_patch_favorite_folder_relationAvgAggregateOutputType | null
    _sum: User_patch_favorite_folder_relationSumAggregateOutputType | null
    _min: User_patch_favorite_folder_relationMinAggregateOutputType | null
    _max: User_patch_favorite_folder_relationMaxAggregateOutputType | null
  }

  export type User_patch_favorite_folder_relationAvgAggregateOutputType = {
    id: number | null
    folder_id: number | null
    patch_id: number | null
  }

  export type User_patch_favorite_folder_relationSumAggregateOutputType = {
    id: number | null
    folder_id: number | null
    patch_id: number | null
  }

  export type User_patch_favorite_folder_relationMinAggregateOutputType = {
    id: number | null
    folder_id: number | null
    patch_id: number | null
    created: Date | null
    updated: Date | null
  }

  export type User_patch_favorite_folder_relationMaxAggregateOutputType = {
    id: number | null
    folder_id: number | null
    patch_id: number | null
    created: Date | null
    updated: Date | null
  }

  export type User_patch_favorite_folder_relationCountAggregateOutputType = {
    id: number
    folder_id: number
    patch_id: number
    created: number
    updated: number
    _all: number
  }


  export type User_patch_favorite_folder_relationAvgAggregateInputType = {
    id?: true
    folder_id?: true
    patch_id?: true
  }

  export type User_patch_favorite_folder_relationSumAggregateInputType = {
    id?: true
    folder_id?: true
    patch_id?: true
  }

  export type User_patch_favorite_folder_relationMinAggregateInputType = {
    id?: true
    folder_id?: true
    patch_id?: true
    created?: true
    updated?: true
  }

  export type User_patch_favorite_folder_relationMaxAggregateInputType = {
    id?: true
    folder_id?: true
    patch_id?: true
    created?: true
    updated?: true
  }

  export type User_patch_favorite_folder_relationCountAggregateInputType = {
    id?: true
    folder_id?: true
    patch_id?: true
    created?: true
    updated?: true
    _all?: true
  }

  export type User_patch_favorite_folder_relationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_patch_favorite_folder_relation to aggregate.
     */
    where?: user_patch_favorite_folder_relationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_patch_favorite_folder_relations to fetch.
     */
    orderBy?: user_patch_favorite_folder_relationOrderByWithRelationInput | user_patch_favorite_folder_relationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: user_patch_favorite_folder_relationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_patch_favorite_folder_relations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_patch_favorite_folder_relations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned user_patch_favorite_folder_relations
    **/
    _count?: true | User_patch_favorite_folder_relationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: User_patch_favorite_folder_relationAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: User_patch_favorite_folder_relationSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: User_patch_favorite_folder_relationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: User_patch_favorite_folder_relationMaxAggregateInputType
  }

  export type GetUser_patch_favorite_folder_relationAggregateType<T extends User_patch_favorite_folder_relationAggregateArgs> = {
        [P in keyof T & keyof AggregateUser_patch_favorite_folder_relation]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser_patch_favorite_folder_relation[P]>
      : GetScalarType<T[P], AggregateUser_patch_favorite_folder_relation[P]>
  }




  export type user_patch_favorite_folder_relationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_patch_favorite_folder_relationWhereInput
    orderBy?: user_patch_favorite_folder_relationOrderByWithAggregationInput | user_patch_favorite_folder_relationOrderByWithAggregationInput[]
    by: User_patch_favorite_folder_relationScalarFieldEnum[] | User_patch_favorite_folder_relationScalarFieldEnum
    having?: user_patch_favorite_folder_relationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: User_patch_favorite_folder_relationCountAggregateInputType | true
    _avg?: User_patch_favorite_folder_relationAvgAggregateInputType
    _sum?: User_patch_favorite_folder_relationSumAggregateInputType
    _min?: User_patch_favorite_folder_relationMinAggregateInputType
    _max?: User_patch_favorite_folder_relationMaxAggregateInputType
  }

  export type User_patch_favorite_folder_relationGroupByOutputType = {
    id: number
    folder_id: number
    patch_id: number
    created: Date
    updated: Date
    _count: User_patch_favorite_folder_relationCountAggregateOutputType | null
    _avg: User_patch_favorite_folder_relationAvgAggregateOutputType | null
    _sum: User_patch_favorite_folder_relationSumAggregateOutputType | null
    _min: User_patch_favorite_folder_relationMinAggregateOutputType | null
    _max: User_patch_favorite_folder_relationMaxAggregateOutputType | null
  }

  type GetUser_patch_favorite_folder_relationGroupByPayload<T extends user_patch_favorite_folder_relationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<User_patch_favorite_folder_relationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof User_patch_favorite_folder_relationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], User_patch_favorite_folder_relationGroupByOutputType[P]>
            : GetScalarType<T[P], User_patch_favorite_folder_relationGroupByOutputType[P]>
        }
      >
    >


  export type user_patch_favorite_folder_relationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    folder_id?: boolean
    patch_id?: boolean
    created?: boolean
    updated?: boolean
    folder?: boolean | user_patch_favorite_folderDefaultArgs<ExtArgs>
    patch?: boolean | patchDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_patch_favorite_folder_relation"]>

  export type user_patch_favorite_folder_relationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    folder_id?: boolean
    patch_id?: boolean
    created?: boolean
    updated?: boolean
    folder?: boolean | user_patch_favorite_folderDefaultArgs<ExtArgs>
    patch?: boolean | patchDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_patch_favorite_folder_relation"]>

  export type user_patch_favorite_folder_relationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    folder_id?: boolean
    patch_id?: boolean
    created?: boolean
    updated?: boolean
    folder?: boolean | user_patch_favorite_folderDefaultArgs<ExtArgs>
    patch?: boolean | patchDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_patch_favorite_folder_relation"]>

  export type user_patch_favorite_folder_relationSelectScalar = {
    id?: boolean
    folder_id?: boolean
    patch_id?: boolean
    created?: boolean
    updated?: boolean
  }

  export type user_patch_favorite_folder_relationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "folder_id" | "patch_id" | "created" | "updated", ExtArgs["result"]["user_patch_favorite_folder_relation"]>
  export type user_patch_favorite_folder_relationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    folder?: boolean | user_patch_favorite_folderDefaultArgs<ExtArgs>
    patch?: boolean | patchDefaultArgs<ExtArgs>
  }
  export type user_patch_favorite_folder_relationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    folder?: boolean | user_patch_favorite_folderDefaultArgs<ExtArgs>
    patch?: boolean | patchDefaultArgs<ExtArgs>
  }
  export type user_patch_favorite_folder_relationIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    folder?: boolean | user_patch_favorite_folderDefaultArgs<ExtArgs>
    patch?: boolean | patchDefaultArgs<ExtArgs>
  }

  export type $user_patch_favorite_folder_relationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "user_patch_favorite_folder_relation"
    objects: {
      folder: Prisma.$user_patch_favorite_folderPayload<ExtArgs>
      patch: Prisma.$patchPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      folder_id: number
      patch_id: number
      created: Date
      updated: Date
    }, ExtArgs["result"]["user_patch_favorite_folder_relation"]>
    composites: {}
  }

  type user_patch_favorite_folder_relationGetPayload<S extends boolean | null | undefined | user_patch_favorite_folder_relationDefaultArgs> = $Result.GetResult<Prisma.$user_patch_favorite_folder_relationPayload, S>

  type user_patch_favorite_folder_relationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<user_patch_favorite_folder_relationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: User_patch_favorite_folder_relationCountAggregateInputType | true
    }

  export interface user_patch_favorite_folder_relationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['user_patch_favorite_folder_relation'], meta: { name: 'user_patch_favorite_folder_relation' } }
    /**
     * Find zero or one User_patch_favorite_folder_relation that matches the filter.
     * @param {user_patch_favorite_folder_relationFindUniqueArgs} args - Arguments to find a User_patch_favorite_folder_relation
     * @example
     * // Get one User_patch_favorite_folder_relation
     * const user_patch_favorite_folder_relation = await prisma.user_patch_favorite_folder_relation.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends user_patch_favorite_folder_relationFindUniqueArgs>(args: SelectSubset<T, user_patch_favorite_folder_relationFindUniqueArgs<ExtArgs>>): Prisma__user_patch_favorite_folder_relationClient<$Result.GetResult<Prisma.$user_patch_favorite_folder_relationPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one User_patch_favorite_folder_relation that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {user_patch_favorite_folder_relationFindUniqueOrThrowArgs} args - Arguments to find a User_patch_favorite_folder_relation
     * @example
     * // Get one User_patch_favorite_folder_relation
     * const user_patch_favorite_folder_relation = await prisma.user_patch_favorite_folder_relation.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends user_patch_favorite_folder_relationFindUniqueOrThrowArgs>(args: SelectSubset<T, user_patch_favorite_folder_relationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__user_patch_favorite_folder_relationClient<$Result.GetResult<Prisma.$user_patch_favorite_folder_relationPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first User_patch_favorite_folder_relation that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_patch_favorite_folder_relationFindFirstArgs} args - Arguments to find a User_patch_favorite_folder_relation
     * @example
     * // Get one User_patch_favorite_folder_relation
     * const user_patch_favorite_folder_relation = await prisma.user_patch_favorite_folder_relation.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends user_patch_favorite_folder_relationFindFirstArgs>(args?: SelectSubset<T, user_patch_favorite_folder_relationFindFirstArgs<ExtArgs>>): Prisma__user_patch_favorite_folder_relationClient<$Result.GetResult<Prisma.$user_patch_favorite_folder_relationPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first User_patch_favorite_folder_relation that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_patch_favorite_folder_relationFindFirstOrThrowArgs} args - Arguments to find a User_patch_favorite_folder_relation
     * @example
     * // Get one User_patch_favorite_folder_relation
     * const user_patch_favorite_folder_relation = await prisma.user_patch_favorite_folder_relation.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends user_patch_favorite_folder_relationFindFirstOrThrowArgs>(args?: SelectSubset<T, user_patch_favorite_folder_relationFindFirstOrThrowArgs<ExtArgs>>): Prisma__user_patch_favorite_folder_relationClient<$Result.GetResult<Prisma.$user_patch_favorite_folder_relationPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more User_patch_favorite_folder_relations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_patch_favorite_folder_relationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all User_patch_favorite_folder_relations
     * const user_patch_favorite_folder_relations = await prisma.user_patch_favorite_folder_relation.findMany()
     * 
     * // Get first 10 User_patch_favorite_folder_relations
     * const user_patch_favorite_folder_relations = await prisma.user_patch_favorite_folder_relation.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const user_patch_favorite_folder_relationWithIdOnly = await prisma.user_patch_favorite_folder_relation.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends user_patch_favorite_folder_relationFindManyArgs>(args?: SelectSubset<T, user_patch_favorite_folder_relationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_patch_favorite_folder_relationPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a User_patch_favorite_folder_relation.
     * @param {user_patch_favorite_folder_relationCreateArgs} args - Arguments to create a User_patch_favorite_folder_relation.
     * @example
     * // Create one User_patch_favorite_folder_relation
     * const User_patch_favorite_folder_relation = await prisma.user_patch_favorite_folder_relation.create({
     *   data: {
     *     // ... data to create a User_patch_favorite_folder_relation
     *   }
     * })
     * 
     */
    create<T extends user_patch_favorite_folder_relationCreateArgs>(args: SelectSubset<T, user_patch_favorite_folder_relationCreateArgs<ExtArgs>>): Prisma__user_patch_favorite_folder_relationClient<$Result.GetResult<Prisma.$user_patch_favorite_folder_relationPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many User_patch_favorite_folder_relations.
     * @param {user_patch_favorite_folder_relationCreateManyArgs} args - Arguments to create many User_patch_favorite_folder_relations.
     * @example
     * // Create many User_patch_favorite_folder_relations
     * const user_patch_favorite_folder_relation = await prisma.user_patch_favorite_folder_relation.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends user_patch_favorite_folder_relationCreateManyArgs>(args?: SelectSubset<T, user_patch_favorite_folder_relationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many User_patch_favorite_folder_relations and returns the data saved in the database.
     * @param {user_patch_favorite_folder_relationCreateManyAndReturnArgs} args - Arguments to create many User_patch_favorite_folder_relations.
     * @example
     * // Create many User_patch_favorite_folder_relations
     * const user_patch_favorite_folder_relation = await prisma.user_patch_favorite_folder_relation.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many User_patch_favorite_folder_relations and only return the `id`
     * const user_patch_favorite_folder_relationWithIdOnly = await prisma.user_patch_favorite_folder_relation.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends user_patch_favorite_folder_relationCreateManyAndReturnArgs>(args?: SelectSubset<T, user_patch_favorite_folder_relationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_patch_favorite_folder_relationPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a User_patch_favorite_folder_relation.
     * @param {user_patch_favorite_folder_relationDeleteArgs} args - Arguments to delete one User_patch_favorite_folder_relation.
     * @example
     * // Delete one User_patch_favorite_folder_relation
     * const User_patch_favorite_folder_relation = await prisma.user_patch_favorite_folder_relation.delete({
     *   where: {
     *     // ... filter to delete one User_patch_favorite_folder_relation
     *   }
     * })
     * 
     */
    delete<T extends user_patch_favorite_folder_relationDeleteArgs>(args: SelectSubset<T, user_patch_favorite_folder_relationDeleteArgs<ExtArgs>>): Prisma__user_patch_favorite_folder_relationClient<$Result.GetResult<Prisma.$user_patch_favorite_folder_relationPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one User_patch_favorite_folder_relation.
     * @param {user_patch_favorite_folder_relationUpdateArgs} args - Arguments to update one User_patch_favorite_folder_relation.
     * @example
     * // Update one User_patch_favorite_folder_relation
     * const user_patch_favorite_folder_relation = await prisma.user_patch_favorite_folder_relation.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends user_patch_favorite_folder_relationUpdateArgs>(args: SelectSubset<T, user_patch_favorite_folder_relationUpdateArgs<ExtArgs>>): Prisma__user_patch_favorite_folder_relationClient<$Result.GetResult<Prisma.$user_patch_favorite_folder_relationPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more User_patch_favorite_folder_relations.
     * @param {user_patch_favorite_folder_relationDeleteManyArgs} args - Arguments to filter User_patch_favorite_folder_relations to delete.
     * @example
     * // Delete a few User_patch_favorite_folder_relations
     * const { count } = await prisma.user_patch_favorite_folder_relation.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends user_patch_favorite_folder_relationDeleteManyArgs>(args?: SelectSubset<T, user_patch_favorite_folder_relationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_patch_favorite_folder_relations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_patch_favorite_folder_relationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many User_patch_favorite_folder_relations
     * const user_patch_favorite_folder_relation = await prisma.user_patch_favorite_folder_relation.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends user_patch_favorite_folder_relationUpdateManyArgs>(args: SelectSubset<T, user_patch_favorite_folder_relationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_patch_favorite_folder_relations and returns the data updated in the database.
     * @param {user_patch_favorite_folder_relationUpdateManyAndReturnArgs} args - Arguments to update many User_patch_favorite_folder_relations.
     * @example
     * // Update many User_patch_favorite_folder_relations
     * const user_patch_favorite_folder_relation = await prisma.user_patch_favorite_folder_relation.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more User_patch_favorite_folder_relations and only return the `id`
     * const user_patch_favorite_folder_relationWithIdOnly = await prisma.user_patch_favorite_folder_relation.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends user_patch_favorite_folder_relationUpdateManyAndReturnArgs>(args: SelectSubset<T, user_patch_favorite_folder_relationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_patch_favorite_folder_relationPayload<ExtArgs>, T, "updateManyAndReturn", ClientOptions>>

    /**
     * Create or update one User_patch_favorite_folder_relation.
     * @param {user_patch_favorite_folder_relationUpsertArgs} args - Arguments to update or create a User_patch_favorite_folder_relation.
     * @example
     * // Update or create a User_patch_favorite_folder_relation
     * const user_patch_favorite_folder_relation = await prisma.user_patch_favorite_folder_relation.upsert({
     *   create: {
     *     // ... data to create a User_patch_favorite_folder_relation
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User_patch_favorite_folder_relation we want to update
     *   }
     * })
     */
    upsert<T extends user_patch_favorite_folder_relationUpsertArgs>(args: SelectSubset<T, user_patch_favorite_folder_relationUpsertArgs<ExtArgs>>): Prisma__user_patch_favorite_folder_relationClient<$Result.GetResult<Prisma.$user_patch_favorite_folder_relationPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of User_patch_favorite_folder_relations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_patch_favorite_folder_relationCountArgs} args - Arguments to filter User_patch_favorite_folder_relations to count.
     * @example
     * // Count the number of User_patch_favorite_folder_relations
     * const count = await prisma.user_patch_favorite_folder_relation.count({
     *   where: {
     *     // ... the filter for the User_patch_favorite_folder_relations we want to count
     *   }
     * })
    **/
    count<T extends user_patch_favorite_folder_relationCountArgs>(
      args?: Subset<T, user_patch_favorite_folder_relationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], User_patch_favorite_folder_relationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User_patch_favorite_folder_relation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_patch_favorite_folder_relationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends User_patch_favorite_folder_relationAggregateArgs>(args: Subset<T, User_patch_favorite_folder_relationAggregateArgs>): Prisma.PrismaPromise<GetUser_patch_favorite_folder_relationAggregateType<T>>

    /**
     * Group by User_patch_favorite_folder_relation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_patch_favorite_folder_relationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends user_patch_favorite_folder_relationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: user_patch_favorite_folder_relationGroupByArgs['orderBy'] }
        : { orderBy?: user_patch_favorite_folder_relationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, user_patch_favorite_folder_relationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUser_patch_favorite_folder_relationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the user_patch_favorite_folder_relation model
   */
  readonly fields: user_patch_favorite_folder_relationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for user_patch_favorite_folder_relation.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__user_patch_favorite_folder_relationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    folder<T extends user_patch_favorite_folderDefaultArgs<ExtArgs> = {}>(args?: Subset<T, user_patch_favorite_folderDefaultArgs<ExtArgs>>): Prisma__user_patch_favorite_folderClient<$Result.GetResult<Prisma.$user_patch_favorite_folderPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | Null, Null, ExtArgs, ClientOptions>
    patch<T extends patchDefaultArgs<ExtArgs> = {}>(args?: Subset<T, patchDefaultArgs<ExtArgs>>): Prisma__patchClient<$Result.GetResult<Prisma.$patchPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | Null, Null, ExtArgs, ClientOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the user_patch_favorite_folder_relation model
   */ 
  interface user_patch_favorite_folder_relationFieldRefs {
    readonly id: FieldRef<"user_patch_favorite_folder_relation", 'Int'>
    readonly folder_id: FieldRef<"user_patch_favorite_folder_relation", 'Int'>
    readonly patch_id: FieldRef<"user_patch_favorite_folder_relation", 'Int'>
    readonly created: FieldRef<"user_patch_favorite_folder_relation", 'DateTime'>
    readonly updated: FieldRef<"user_patch_favorite_folder_relation", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * user_patch_favorite_folder_relation findUnique
   */
  export type user_patch_favorite_folder_relationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_patch_favorite_folder_relation
     */
    select?: user_patch_favorite_folder_relationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_patch_favorite_folder_relation
     */
    omit?: user_patch_favorite_folder_relationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_patch_favorite_folder_relationInclude<ExtArgs> | null
    /**
     * Filter, which user_patch_favorite_folder_relation to fetch.
     */
    where: user_patch_favorite_folder_relationWhereUniqueInput
  }

  /**
   * user_patch_favorite_folder_relation findUniqueOrThrow
   */
  export type user_patch_favorite_folder_relationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_patch_favorite_folder_relation
     */
    select?: user_patch_favorite_folder_relationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_patch_favorite_folder_relation
     */
    omit?: user_patch_favorite_folder_relationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_patch_favorite_folder_relationInclude<ExtArgs> | null
    /**
     * Filter, which user_patch_favorite_folder_relation to fetch.
     */
    where: user_patch_favorite_folder_relationWhereUniqueInput
  }

  /**
   * user_patch_favorite_folder_relation findFirst
   */
  export type user_patch_favorite_folder_relationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_patch_favorite_folder_relation
     */
    select?: user_patch_favorite_folder_relationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_patch_favorite_folder_relation
     */
    omit?: user_patch_favorite_folder_relationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_patch_favorite_folder_relationInclude<ExtArgs> | null
    /**
     * Filter, which user_patch_favorite_folder_relation to fetch.
     */
    where?: user_patch_favorite_folder_relationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_patch_favorite_folder_relations to fetch.
     */
    orderBy?: user_patch_favorite_folder_relationOrderByWithRelationInput | user_patch_favorite_folder_relationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_patch_favorite_folder_relations.
     */
    cursor?: user_patch_favorite_folder_relationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_patch_favorite_folder_relations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_patch_favorite_folder_relations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_patch_favorite_folder_relations.
     */
    distinct?: User_patch_favorite_folder_relationScalarFieldEnum | User_patch_favorite_folder_relationScalarFieldEnum[]
  }

  /**
   * user_patch_favorite_folder_relation findFirstOrThrow
   */
  export type user_patch_favorite_folder_relationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_patch_favorite_folder_relation
     */
    select?: user_patch_favorite_folder_relationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_patch_favorite_folder_relation
     */
    omit?: user_patch_favorite_folder_relationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_patch_favorite_folder_relationInclude<ExtArgs> | null
    /**
     * Filter, which user_patch_favorite_folder_relation to fetch.
     */
    where?: user_patch_favorite_folder_relationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_patch_favorite_folder_relations to fetch.
     */
    orderBy?: user_patch_favorite_folder_relationOrderByWithRelationInput | user_patch_favorite_folder_relationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_patch_favorite_folder_relations.
     */
    cursor?: user_patch_favorite_folder_relationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_patch_favorite_folder_relations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_patch_favorite_folder_relations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_patch_favorite_folder_relations.
     */
    distinct?: User_patch_favorite_folder_relationScalarFieldEnum | User_patch_favorite_folder_relationScalarFieldEnum[]
  }

  /**
   * user_patch_favorite_folder_relation findMany
   */
  export type user_patch_favorite_folder_relationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_patch_favorite_folder_relation
     */
    select?: user_patch_favorite_folder_relationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_patch_favorite_folder_relation
     */
    omit?: user_patch_favorite_folder_relationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_patch_favorite_folder_relationInclude<ExtArgs> | null
    /**
     * Filter, which user_patch_favorite_folder_relations to fetch.
     */
    where?: user_patch_favorite_folder_relationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_patch_favorite_folder_relations to fetch.
     */
    orderBy?: user_patch_favorite_folder_relationOrderByWithRelationInput | user_patch_favorite_folder_relationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing user_patch_favorite_folder_relations.
     */
    cursor?: user_patch_favorite_folder_relationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_patch_favorite_folder_relations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_patch_favorite_folder_relations.
     */
    skip?: number
    distinct?: User_patch_favorite_folder_relationScalarFieldEnum | User_patch_favorite_folder_relationScalarFieldEnum[]
  }

  /**
   * user_patch_favorite_folder_relation create
   */
  export type user_patch_favorite_folder_relationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_patch_favorite_folder_relation
     */
    select?: user_patch_favorite_folder_relationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_patch_favorite_folder_relation
     */
    omit?: user_patch_favorite_folder_relationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_patch_favorite_folder_relationInclude<ExtArgs> | null
    /**
     * The data needed to create a user_patch_favorite_folder_relation.
     */
    data: XOR<user_patch_favorite_folder_relationCreateInput, user_patch_favorite_folder_relationUncheckedCreateInput>
  }

  /**
   * user_patch_favorite_folder_relation createMany
   */
  export type user_patch_favorite_folder_relationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many user_patch_favorite_folder_relations.
     */
    data: user_patch_favorite_folder_relationCreateManyInput | user_patch_favorite_folder_relationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * user_patch_favorite_folder_relation createManyAndReturn
   */
  export type user_patch_favorite_folder_relationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_patch_favorite_folder_relation
     */
    select?: user_patch_favorite_folder_relationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user_patch_favorite_folder_relation
     */
    omit?: user_patch_favorite_folder_relationOmit<ExtArgs> | null
    /**
     * The data used to create many user_patch_favorite_folder_relations.
     */
    data: user_patch_favorite_folder_relationCreateManyInput | user_patch_favorite_folder_relationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_patch_favorite_folder_relationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * user_patch_favorite_folder_relation update
   */
  export type user_patch_favorite_folder_relationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_patch_favorite_folder_relation
     */
    select?: user_patch_favorite_folder_relationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_patch_favorite_folder_relation
     */
    omit?: user_patch_favorite_folder_relationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_patch_favorite_folder_relationInclude<ExtArgs> | null
    /**
     * The data needed to update a user_patch_favorite_folder_relation.
     */
    data: XOR<user_patch_favorite_folder_relationUpdateInput, user_patch_favorite_folder_relationUncheckedUpdateInput>
    /**
     * Choose, which user_patch_favorite_folder_relation to update.
     */
    where: user_patch_favorite_folder_relationWhereUniqueInput
  }

  /**
   * user_patch_favorite_folder_relation updateMany
   */
  export type user_patch_favorite_folder_relationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update user_patch_favorite_folder_relations.
     */
    data: XOR<user_patch_favorite_folder_relationUpdateManyMutationInput, user_patch_favorite_folder_relationUncheckedUpdateManyInput>
    /**
     * Filter which user_patch_favorite_folder_relations to update
     */
    where?: user_patch_favorite_folder_relationWhereInput
  }

  /**
   * user_patch_favorite_folder_relation updateManyAndReturn
   */
  export type user_patch_favorite_folder_relationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_patch_favorite_folder_relation
     */
    select?: user_patch_favorite_folder_relationSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user_patch_favorite_folder_relation
     */
    omit?: user_patch_favorite_folder_relationOmit<ExtArgs> | null
    /**
     * The data used to update user_patch_favorite_folder_relations.
     */
    data: XOR<user_patch_favorite_folder_relationUpdateManyMutationInput, user_patch_favorite_folder_relationUncheckedUpdateManyInput>
    /**
     * Filter which user_patch_favorite_folder_relations to update
     */
    where?: user_patch_favorite_folder_relationWhereInput
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_patch_favorite_folder_relationIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * user_patch_favorite_folder_relation upsert
   */
  export type user_patch_favorite_folder_relationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_patch_favorite_folder_relation
     */
    select?: user_patch_favorite_folder_relationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_patch_favorite_folder_relation
     */
    omit?: user_patch_favorite_folder_relationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_patch_favorite_folder_relationInclude<ExtArgs> | null
    /**
     * The filter to search for the user_patch_favorite_folder_relation to update in case it exists.
     */
    where: user_patch_favorite_folder_relationWhereUniqueInput
    /**
     * In case the user_patch_favorite_folder_relation found by the `where` argument doesn't exist, create a new user_patch_favorite_folder_relation with this data.
     */
    create: XOR<user_patch_favorite_folder_relationCreateInput, user_patch_favorite_folder_relationUncheckedCreateInput>
    /**
     * In case the user_patch_favorite_folder_relation was found with the provided `where` argument, update it with this data.
     */
    update: XOR<user_patch_favorite_folder_relationUpdateInput, user_patch_favorite_folder_relationUncheckedUpdateInput>
  }

  /**
   * user_patch_favorite_folder_relation delete
   */
  export type user_patch_favorite_folder_relationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_patch_favorite_folder_relation
     */
    select?: user_patch_favorite_folder_relationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_patch_favorite_folder_relation
     */
    omit?: user_patch_favorite_folder_relationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_patch_favorite_folder_relationInclude<ExtArgs> | null
    /**
     * Filter which user_patch_favorite_folder_relation to delete.
     */
    where: user_patch_favorite_folder_relationWhereUniqueInput
  }

  /**
   * user_patch_favorite_folder_relation deleteMany
   */
  export type user_patch_favorite_folder_relationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_patch_favorite_folder_relations to delete
     */
    where?: user_patch_favorite_folder_relationWhereInput
  }

  /**
   * user_patch_favorite_folder_relation without action
   */
  export type user_patch_favorite_folder_relationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_patch_favorite_folder_relation
     */
    select?: user_patch_favorite_folder_relationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_patch_favorite_folder_relation
     */
    omit?: user_patch_favorite_folder_relationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_patch_favorite_folder_relationInclude<ExtArgs> | null
  }


  /**
   * Model user_patch_comment_like_relation
   */

  export type AggregateUser_patch_comment_like_relation = {
    _count: User_patch_comment_like_relationCountAggregateOutputType | null
    _avg: User_patch_comment_like_relationAvgAggregateOutputType | null
    _sum: User_patch_comment_like_relationSumAggregateOutputType | null
    _min: User_patch_comment_like_relationMinAggregateOutputType | null
    _max: User_patch_comment_like_relationMaxAggregateOutputType | null
  }

  export type User_patch_comment_like_relationAvgAggregateOutputType = {
    id: number | null
    user_id: number | null
    comment_id: number | null
  }

  export type User_patch_comment_like_relationSumAggregateOutputType = {
    id: number | null
    user_id: number | null
    comment_id: number | null
  }

  export type User_patch_comment_like_relationMinAggregateOutputType = {
    id: number | null
    user_id: number | null
    comment_id: number | null
    created: Date | null
    updated: Date | null
  }

  export type User_patch_comment_like_relationMaxAggregateOutputType = {
    id: number | null
    user_id: number | null
    comment_id: number | null
    created: Date | null
    updated: Date | null
  }

  export type User_patch_comment_like_relationCountAggregateOutputType = {
    id: number
    user_id: number
    comment_id: number
    created: number
    updated: number
    _all: number
  }


  export type User_patch_comment_like_relationAvgAggregateInputType = {
    id?: true
    user_id?: true
    comment_id?: true
  }

  export type User_patch_comment_like_relationSumAggregateInputType = {
    id?: true
    user_id?: true
    comment_id?: true
  }

  export type User_patch_comment_like_relationMinAggregateInputType = {
    id?: true
    user_id?: true
    comment_id?: true
    created?: true
    updated?: true
  }

  export type User_patch_comment_like_relationMaxAggregateInputType = {
    id?: true
    user_id?: true
    comment_id?: true
    created?: true
    updated?: true
  }

  export type User_patch_comment_like_relationCountAggregateInputType = {
    id?: true
    user_id?: true
    comment_id?: true
    created?: true
    updated?: true
    _all?: true
  }

  export type User_patch_comment_like_relationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_patch_comment_like_relation to aggregate.
     */
    where?: user_patch_comment_like_relationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_patch_comment_like_relations to fetch.
     */
    orderBy?: user_patch_comment_like_relationOrderByWithRelationInput | user_patch_comment_like_relationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: user_patch_comment_like_relationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_patch_comment_like_relations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_patch_comment_like_relations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned user_patch_comment_like_relations
    **/
    _count?: true | User_patch_comment_like_relationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: User_patch_comment_like_relationAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: User_patch_comment_like_relationSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: User_patch_comment_like_relationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: User_patch_comment_like_relationMaxAggregateInputType
  }

  export type GetUser_patch_comment_like_relationAggregateType<T extends User_patch_comment_like_relationAggregateArgs> = {
        [P in keyof T & keyof AggregateUser_patch_comment_like_relation]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser_patch_comment_like_relation[P]>
      : GetScalarType<T[P], AggregateUser_patch_comment_like_relation[P]>
  }




  export type user_patch_comment_like_relationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_patch_comment_like_relationWhereInput
    orderBy?: user_patch_comment_like_relationOrderByWithAggregationInput | user_patch_comment_like_relationOrderByWithAggregationInput[]
    by: User_patch_comment_like_relationScalarFieldEnum[] | User_patch_comment_like_relationScalarFieldEnum
    having?: user_patch_comment_like_relationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: User_patch_comment_like_relationCountAggregateInputType | true
    _avg?: User_patch_comment_like_relationAvgAggregateInputType
    _sum?: User_patch_comment_like_relationSumAggregateInputType
    _min?: User_patch_comment_like_relationMinAggregateInputType
    _max?: User_patch_comment_like_relationMaxAggregateInputType
  }

  export type User_patch_comment_like_relationGroupByOutputType = {
    id: number
    user_id: number
    comment_id: number
    created: Date
    updated: Date
    _count: User_patch_comment_like_relationCountAggregateOutputType | null
    _avg: User_patch_comment_like_relationAvgAggregateOutputType | null
    _sum: User_patch_comment_like_relationSumAggregateOutputType | null
    _min: User_patch_comment_like_relationMinAggregateOutputType | null
    _max: User_patch_comment_like_relationMaxAggregateOutputType | null
  }

  type GetUser_patch_comment_like_relationGroupByPayload<T extends user_patch_comment_like_relationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<User_patch_comment_like_relationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof User_patch_comment_like_relationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], User_patch_comment_like_relationGroupByOutputType[P]>
            : GetScalarType<T[P], User_patch_comment_like_relationGroupByOutputType[P]>
        }
      >
    >


  export type user_patch_comment_like_relationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    comment_id?: boolean
    created?: boolean
    updated?: boolean
    user?: boolean | userDefaultArgs<ExtArgs>
    comment?: boolean | patch_commentDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_patch_comment_like_relation"]>

  export type user_patch_comment_like_relationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    comment_id?: boolean
    created?: boolean
    updated?: boolean
    user?: boolean | userDefaultArgs<ExtArgs>
    comment?: boolean | patch_commentDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_patch_comment_like_relation"]>

  export type user_patch_comment_like_relationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    comment_id?: boolean
    created?: boolean
    updated?: boolean
    user?: boolean | userDefaultArgs<ExtArgs>
    comment?: boolean | patch_commentDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_patch_comment_like_relation"]>

  export type user_patch_comment_like_relationSelectScalar = {
    id?: boolean
    user_id?: boolean
    comment_id?: boolean
    created?: boolean
    updated?: boolean
  }

  export type user_patch_comment_like_relationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "comment_id" | "created" | "updated", ExtArgs["result"]["user_patch_comment_like_relation"]>
  export type user_patch_comment_like_relationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | userDefaultArgs<ExtArgs>
    comment?: boolean | patch_commentDefaultArgs<ExtArgs>
  }
  export type user_patch_comment_like_relationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | userDefaultArgs<ExtArgs>
    comment?: boolean | patch_commentDefaultArgs<ExtArgs>
  }
  export type user_patch_comment_like_relationIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | userDefaultArgs<ExtArgs>
    comment?: boolean | patch_commentDefaultArgs<ExtArgs>
  }

  export type $user_patch_comment_like_relationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "user_patch_comment_like_relation"
    objects: {
      user: Prisma.$userPayload<ExtArgs>
      comment: Prisma.$patch_commentPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      user_id: number
      comment_id: number
      created: Date
      updated: Date
    }, ExtArgs["result"]["user_patch_comment_like_relation"]>
    composites: {}
  }

  type user_patch_comment_like_relationGetPayload<S extends boolean | null | undefined | user_patch_comment_like_relationDefaultArgs> = $Result.GetResult<Prisma.$user_patch_comment_like_relationPayload, S>

  type user_patch_comment_like_relationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<user_patch_comment_like_relationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: User_patch_comment_like_relationCountAggregateInputType | true
    }

  export interface user_patch_comment_like_relationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['user_patch_comment_like_relation'], meta: { name: 'user_patch_comment_like_relation' } }
    /**
     * Find zero or one User_patch_comment_like_relation that matches the filter.
     * @param {user_patch_comment_like_relationFindUniqueArgs} args - Arguments to find a User_patch_comment_like_relation
     * @example
     * // Get one User_patch_comment_like_relation
     * const user_patch_comment_like_relation = await prisma.user_patch_comment_like_relation.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends user_patch_comment_like_relationFindUniqueArgs>(args: SelectSubset<T, user_patch_comment_like_relationFindUniqueArgs<ExtArgs>>): Prisma__user_patch_comment_like_relationClient<$Result.GetResult<Prisma.$user_patch_comment_like_relationPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one User_patch_comment_like_relation that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {user_patch_comment_like_relationFindUniqueOrThrowArgs} args - Arguments to find a User_patch_comment_like_relation
     * @example
     * // Get one User_patch_comment_like_relation
     * const user_patch_comment_like_relation = await prisma.user_patch_comment_like_relation.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends user_patch_comment_like_relationFindUniqueOrThrowArgs>(args: SelectSubset<T, user_patch_comment_like_relationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__user_patch_comment_like_relationClient<$Result.GetResult<Prisma.$user_patch_comment_like_relationPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first User_patch_comment_like_relation that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_patch_comment_like_relationFindFirstArgs} args - Arguments to find a User_patch_comment_like_relation
     * @example
     * // Get one User_patch_comment_like_relation
     * const user_patch_comment_like_relation = await prisma.user_patch_comment_like_relation.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends user_patch_comment_like_relationFindFirstArgs>(args?: SelectSubset<T, user_patch_comment_like_relationFindFirstArgs<ExtArgs>>): Prisma__user_patch_comment_like_relationClient<$Result.GetResult<Prisma.$user_patch_comment_like_relationPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first User_patch_comment_like_relation that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_patch_comment_like_relationFindFirstOrThrowArgs} args - Arguments to find a User_patch_comment_like_relation
     * @example
     * // Get one User_patch_comment_like_relation
     * const user_patch_comment_like_relation = await prisma.user_patch_comment_like_relation.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends user_patch_comment_like_relationFindFirstOrThrowArgs>(args?: SelectSubset<T, user_patch_comment_like_relationFindFirstOrThrowArgs<ExtArgs>>): Prisma__user_patch_comment_like_relationClient<$Result.GetResult<Prisma.$user_patch_comment_like_relationPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more User_patch_comment_like_relations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_patch_comment_like_relationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all User_patch_comment_like_relations
     * const user_patch_comment_like_relations = await prisma.user_patch_comment_like_relation.findMany()
     * 
     * // Get first 10 User_patch_comment_like_relations
     * const user_patch_comment_like_relations = await prisma.user_patch_comment_like_relation.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const user_patch_comment_like_relationWithIdOnly = await prisma.user_patch_comment_like_relation.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends user_patch_comment_like_relationFindManyArgs>(args?: SelectSubset<T, user_patch_comment_like_relationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_patch_comment_like_relationPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a User_patch_comment_like_relation.
     * @param {user_patch_comment_like_relationCreateArgs} args - Arguments to create a User_patch_comment_like_relation.
     * @example
     * // Create one User_patch_comment_like_relation
     * const User_patch_comment_like_relation = await prisma.user_patch_comment_like_relation.create({
     *   data: {
     *     // ... data to create a User_patch_comment_like_relation
     *   }
     * })
     * 
     */
    create<T extends user_patch_comment_like_relationCreateArgs>(args: SelectSubset<T, user_patch_comment_like_relationCreateArgs<ExtArgs>>): Prisma__user_patch_comment_like_relationClient<$Result.GetResult<Prisma.$user_patch_comment_like_relationPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many User_patch_comment_like_relations.
     * @param {user_patch_comment_like_relationCreateManyArgs} args - Arguments to create many User_patch_comment_like_relations.
     * @example
     * // Create many User_patch_comment_like_relations
     * const user_patch_comment_like_relation = await prisma.user_patch_comment_like_relation.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends user_patch_comment_like_relationCreateManyArgs>(args?: SelectSubset<T, user_patch_comment_like_relationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many User_patch_comment_like_relations and returns the data saved in the database.
     * @param {user_patch_comment_like_relationCreateManyAndReturnArgs} args - Arguments to create many User_patch_comment_like_relations.
     * @example
     * // Create many User_patch_comment_like_relations
     * const user_patch_comment_like_relation = await prisma.user_patch_comment_like_relation.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many User_patch_comment_like_relations and only return the `id`
     * const user_patch_comment_like_relationWithIdOnly = await prisma.user_patch_comment_like_relation.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends user_patch_comment_like_relationCreateManyAndReturnArgs>(args?: SelectSubset<T, user_patch_comment_like_relationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_patch_comment_like_relationPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a User_patch_comment_like_relation.
     * @param {user_patch_comment_like_relationDeleteArgs} args - Arguments to delete one User_patch_comment_like_relation.
     * @example
     * // Delete one User_patch_comment_like_relation
     * const User_patch_comment_like_relation = await prisma.user_patch_comment_like_relation.delete({
     *   where: {
     *     // ... filter to delete one User_patch_comment_like_relation
     *   }
     * })
     * 
     */
    delete<T extends user_patch_comment_like_relationDeleteArgs>(args: SelectSubset<T, user_patch_comment_like_relationDeleteArgs<ExtArgs>>): Prisma__user_patch_comment_like_relationClient<$Result.GetResult<Prisma.$user_patch_comment_like_relationPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one User_patch_comment_like_relation.
     * @param {user_patch_comment_like_relationUpdateArgs} args - Arguments to update one User_patch_comment_like_relation.
     * @example
     * // Update one User_patch_comment_like_relation
     * const user_patch_comment_like_relation = await prisma.user_patch_comment_like_relation.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends user_patch_comment_like_relationUpdateArgs>(args: SelectSubset<T, user_patch_comment_like_relationUpdateArgs<ExtArgs>>): Prisma__user_patch_comment_like_relationClient<$Result.GetResult<Prisma.$user_patch_comment_like_relationPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more User_patch_comment_like_relations.
     * @param {user_patch_comment_like_relationDeleteManyArgs} args - Arguments to filter User_patch_comment_like_relations to delete.
     * @example
     * // Delete a few User_patch_comment_like_relations
     * const { count } = await prisma.user_patch_comment_like_relation.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends user_patch_comment_like_relationDeleteManyArgs>(args?: SelectSubset<T, user_patch_comment_like_relationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_patch_comment_like_relations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_patch_comment_like_relationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many User_patch_comment_like_relations
     * const user_patch_comment_like_relation = await prisma.user_patch_comment_like_relation.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends user_patch_comment_like_relationUpdateManyArgs>(args: SelectSubset<T, user_patch_comment_like_relationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_patch_comment_like_relations and returns the data updated in the database.
     * @param {user_patch_comment_like_relationUpdateManyAndReturnArgs} args - Arguments to update many User_patch_comment_like_relations.
     * @example
     * // Update many User_patch_comment_like_relations
     * const user_patch_comment_like_relation = await prisma.user_patch_comment_like_relation.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more User_patch_comment_like_relations and only return the `id`
     * const user_patch_comment_like_relationWithIdOnly = await prisma.user_patch_comment_like_relation.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends user_patch_comment_like_relationUpdateManyAndReturnArgs>(args: SelectSubset<T, user_patch_comment_like_relationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_patch_comment_like_relationPayload<ExtArgs>, T, "updateManyAndReturn", ClientOptions>>

    /**
     * Create or update one User_patch_comment_like_relation.
     * @param {user_patch_comment_like_relationUpsertArgs} args - Arguments to update or create a User_patch_comment_like_relation.
     * @example
     * // Update or create a User_patch_comment_like_relation
     * const user_patch_comment_like_relation = await prisma.user_patch_comment_like_relation.upsert({
     *   create: {
     *     // ... data to create a User_patch_comment_like_relation
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User_patch_comment_like_relation we want to update
     *   }
     * })
     */
    upsert<T extends user_patch_comment_like_relationUpsertArgs>(args: SelectSubset<T, user_patch_comment_like_relationUpsertArgs<ExtArgs>>): Prisma__user_patch_comment_like_relationClient<$Result.GetResult<Prisma.$user_patch_comment_like_relationPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of User_patch_comment_like_relations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_patch_comment_like_relationCountArgs} args - Arguments to filter User_patch_comment_like_relations to count.
     * @example
     * // Count the number of User_patch_comment_like_relations
     * const count = await prisma.user_patch_comment_like_relation.count({
     *   where: {
     *     // ... the filter for the User_patch_comment_like_relations we want to count
     *   }
     * })
    **/
    count<T extends user_patch_comment_like_relationCountArgs>(
      args?: Subset<T, user_patch_comment_like_relationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], User_patch_comment_like_relationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User_patch_comment_like_relation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_patch_comment_like_relationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends User_patch_comment_like_relationAggregateArgs>(args: Subset<T, User_patch_comment_like_relationAggregateArgs>): Prisma.PrismaPromise<GetUser_patch_comment_like_relationAggregateType<T>>

    /**
     * Group by User_patch_comment_like_relation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_patch_comment_like_relationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends user_patch_comment_like_relationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: user_patch_comment_like_relationGroupByArgs['orderBy'] }
        : { orderBy?: user_patch_comment_like_relationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, user_patch_comment_like_relationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUser_patch_comment_like_relationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the user_patch_comment_like_relation model
   */
  readonly fields: user_patch_comment_like_relationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for user_patch_comment_like_relation.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__user_patch_comment_like_relationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | Null, Null, ExtArgs, ClientOptions>
    comment<T extends patch_commentDefaultArgs<ExtArgs> = {}>(args?: Subset<T, patch_commentDefaultArgs<ExtArgs>>): Prisma__patch_commentClient<$Result.GetResult<Prisma.$patch_commentPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | Null, Null, ExtArgs, ClientOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the user_patch_comment_like_relation model
   */ 
  interface user_patch_comment_like_relationFieldRefs {
    readonly id: FieldRef<"user_patch_comment_like_relation", 'Int'>
    readonly user_id: FieldRef<"user_patch_comment_like_relation", 'Int'>
    readonly comment_id: FieldRef<"user_patch_comment_like_relation", 'Int'>
    readonly created: FieldRef<"user_patch_comment_like_relation", 'DateTime'>
    readonly updated: FieldRef<"user_patch_comment_like_relation", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * user_patch_comment_like_relation findUnique
   */
  export type user_patch_comment_like_relationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_patch_comment_like_relation
     */
    select?: user_patch_comment_like_relationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_patch_comment_like_relation
     */
    omit?: user_patch_comment_like_relationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_patch_comment_like_relationInclude<ExtArgs> | null
    /**
     * Filter, which user_patch_comment_like_relation to fetch.
     */
    where: user_patch_comment_like_relationWhereUniqueInput
  }

  /**
   * user_patch_comment_like_relation findUniqueOrThrow
   */
  export type user_patch_comment_like_relationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_patch_comment_like_relation
     */
    select?: user_patch_comment_like_relationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_patch_comment_like_relation
     */
    omit?: user_patch_comment_like_relationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_patch_comment_like_relationInclude<ExtArgs> | null
    /**
     * Filter, which user_patch_comment_like_relation to fetch.
     */
    where: user_patch_comment_like_relationWhereUniqueInput
  }

  /**
   * user_patch_comment_like_relation findFirst
   */
  export type user_patch_comment_like_relationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_patch_comment_like_relation
     */
    select?: user_patch_comment_like_relationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_patch_comment_like_relation
     */
    omit?: user_patch_comment_like_relationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_patch_comment_like_relationInclude<ExtArgs> | null
    /**
     * Filter, which user_patch_comment_like_relation to fetch.
     */
    where?: user_patch_comment_like_relationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_patch_comment_like_relations to fetch.
     */
    orderBy?: user_patch_comment_like_relationOrderByWithRelationInput | user_patch_comment_like_relationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_patch_comment_like_relations.
     */
    cursor?: user_patch_comment_like_relationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_patch_comment_like_relations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_patch_comment_like_relations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_patch_comment_like_relations.
     */
    distinct?: User_patch_comment_like_relationScalarFieldEnum | User_patch_comment_like_relationScalarFieldEnum[]
  }

  /**
   * user_patch_comment_like_relation findFirstOrThrow
   */
  export type user_patch_comment_like_relationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_patch_comment_like_relation
     */
    select?: user_patch_comment_like_relationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_patch_comment_like_relation
     */
    omit?: user_patch_comment_like_relationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_patch_comment_like_relationInclude<ExtArgs> | null
    /**
     * Filter, which user_patch_comment_like_relation to fetch.
     */
    where?: user_patch_comment_like_relationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_patch_comment_like_relations to fetch.
     */
    orderBy?: user_patch_comment_like_relationOrderByWithRelationInput | user_patch_comment_like_relationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_patch_comment_like_relations.
     */
    cursor?: user_patch_comment_like_relationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_patch_comment_like_relations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_patch_comment_like_relations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_patch_comment_like_relations.
     */
    distinct?: User_patch_comment_like_relationScalarFieldEnum | User_patch_comment_like_relationScalarFieldEnum[]
  }

  /**
   * user_patch_comment_like_relation findMany
   */
  export type user_patch_comment_like_relationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_patch_comment_like_relation
     */
    select?: user_patch_comment_like_relationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_patch_comment_like_relation
     */
    omit?: user_patch_comment_like_relationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_patch_comment_like_relationInclude<ExtArgs> | null
    /**
     * Filter, which user_patch_comment_like_relations to fetch.
     */
    where?: user_patch_comment_like_relationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_patch_comment_like_relations to fetch.
     */
    orderBy?: user_patch_comment_like_relationOrderByWithRelationInput | user_patch_comment_like_relationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing user_patch_comment_like_relations.
     */
    cursor?: user_patch_comment_like_relationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_patch_comment_like_relations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_patch_comment_like_relations.
     */
    skip?: number
    distinct?: User_patch_comment_like_relationScalarFieldEnum | User_patch_comment_like_relationScalarFieldEnum[]
  }

  /**
   * user_patch_comment_like_relation create
   */
  export type user_patch_comment_like_relationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_patch_comment_like_relation
     */
    select?: user_patch_comment_like_relationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_patch_comment_like_relation
     */
    omit?: user_patch_comment_like_relationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_patch_comment_like_relationInclude<ExtArgs> | null
    /**
     * The data needed to create a user_patch_comment_like_relation.
     */
    data: XOR<user_patch_comment_like_relationCreateInput, user_patch_comment_like_relationUncheckedCreateInput>
  }

  /**
   * user_patch_comment_like_relation createMany
   */
  export type user_patch_comment_like_relationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many user_patch_comment_like_relations.
     */
    data: user_patch_comment_like_relationCreateManyInput | user_patch_comment_like_relationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * user_patch_comment_like_relation createManyAndReturn
   */
  export type user_patch_comment_like_relationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_patch_comment_like_relation
     */
    select?: user_patch_comment_like_relationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user_patch_comment_like_relation
     */
    omit?: user_patch_comment_like_relationOmit<ExtArgs> | null
    /**
     * The data used to create many user_patch_comment_like_relations.
     */
    data: user_patch_comment_like_relationCreateManyInput | user_patch_comment_like_relationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_patch_comment_like_relationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * user_patch_comment_like_relation update
   */
  export type user_patch_comment_like_relationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_patch_comment_like_relation
     */
    select?: user_patch_comment_like_relationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_patch_comment_like_relation
     */
    omit?: user_patch_comment_like_relationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_patch_comment_like_relationInclude<ExtArgs> | null
    /**
     * The data needed to update a user_patch_comment_like_relation.
     */
    data: XOR<user_patch_comment_like_relationUpdateInput, user_patch_comment_like_relationUncheckedUpdateInput>
    /**
     * Choose, which user_patch_comment_like_relation to update.
     */
    where: user_patch_comment_like_relationWhereUniqueInput
  }

  /**
   * user_patch_comment_like_relation updateMany
   */
  export type user_patch_comment_like_relationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update user_patch_comment_like_relations.
     */
    data: XOR<user_patch_comment_like_relationUpdateManyMutationInput, user_patch_comment_like_relationUncheckedUpdateManyInput>
    /**
     * Filter which user_patch_comment_like_relations to update
     */
    where?: user_patch_comment_like_relationWhereInput
  }

  /**
   * user_patch_comment_like_relation updateManyAndReturn
   */
  export type user_patch_comment_like_relationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_patch_comment_like_relation
     */
    select?: user_patch_comment_like_relationSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user_patch_comment_like_relation
     */
    omit?: user_patch_comment_like_relationOmit<ExtArgs> | null
    /**
     * The data used to update user_patch_comment_like_relations.
     */
    data: XOR<user_patch_comment_like_relationUpdateManyMutationInput, user_patch_comment_like_relationUncheckedUpdateManyInput>
    /**
     * Filter which user_patch_comment_like_relations to update
     */
    where?: user_patch_comment_like_relationWhereInput
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_patch_comment_like_relationIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * user_patch_comment_like_relation upsert
   */
  export type user_patch_comment_like_relationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_patch_comment_like_relation
     */
    select?: user_patch_comment_like_relationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_patch_comment_like_relation
     */
    omit?: user_patch_comment_like_relationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_patch_comment_like_relationInclude<ExtArgs> | null
    /**
     * The filter to search for the user_patch_comment_like_relation to update in case it exists.
     */
    where: user_patch_comment_like_relationWhereUniqueInput
    /**
     * In case the user_patch_comment_like_relation found by the `where` argument doesn't exist, create a new user_patch_comment_like_relation with this data.
     */
    create: XOR<user_patch_comment_like_relationCreateInput, user_patch_comment_like_relationUncheckedCreateInput>
    /**
     * In case the user_patch_comment_like_relation was found with the provided `where` argument, update it with this data.
     */
    update: XOR<user_patch_comment_like_relationUpdateInput, user_patch_comment_like_relationUncheckedUpdateInput>
  }

  /**
   * user_patch_comment_like_relation delete
   */
  export type user_patch_comment_like_relationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_patch_comment_like_relation
     */
    select?: user_patch_comment_like_relationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_patch_comment_like_relation
     */
    omit?: user_patch_comment_like_relationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_patch_comment_like_relationInclude<ExtArgs> | null
    /**
     * Filter which user_patch_comment_like_relation to delete.
     */
    where: user_patch_comment_like_relationWhereUniqueInput
  }

  /**
   * user_patch_comment_like_relation deleteMany
   */
  export type user_patch_comment_like_relationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_patch_comment_like_relations to delete
     */
    where?: user_patch_comment_like_relationWhereInput
  }

  /**
   * user_patch_comment_like_relation without action
   */
  export type user_patch_comment_like_relationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_patch_comment_like_relation
     */
    select?: user_patch_comment_like_relationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_patch_comment_like_relation
     */
    omit?: user_patch_comment_like_relationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_patch_comment_like_relationInclude<ExtArgs> | null
  }


  /**
   * Model user_patch_resource_like_relation
   */

  export type AggregateUser_patch_resource_like_relation = {
    _count: User_patch_resource_like_relationCountAggregateOutputType | null
    _avg: User_patch_resource_like_relationAvgAggregateOutputType | null
    _sum: User_patch_resource_like_relationSumAggregateOutputType | null
    _min: User_patch_resource_like_relationMinAggregateOutputType | null
    _max: User_patch_resource_like_relationMaxAggregateOutputType | null
  }

  export type User_patch_resource_like_relationAvgAggregateOutputType = {
    id: number | null
    user_id: number | null
    resource_id: number | null
  }

  export type User_patch_resource_like_relationSumAggregateOutputType = {
    id: number | null
    user_id: number | null
    resource_id: number | null
  }

  export type User_patch_resource_like_relationMinAggregateOutputType = {
    id: number | null
    user_id: number | null
    resource_id: number | null
    created: Date | null
    updated: Date | null
  }

  export type User_patch_resource_like_relationMaxAggregateOutputType = {
    id: number | null
    user_id: number | null
    resource_id: number | null
    created: Date | null
    updated: Date | null
  }

  export type User_patch_resource_like_relationCountAggregateOutputType = {
    id: number
    user_id: number
    resource_id: number
    created: number
    updated: number
    _all: number
  }


  export type User_patch_resource_like_relationAvgAggregateInputType = {
    id?: true
    user_id?: true
    resource_id?: true
  }

  export type User_patch_resource_like_relationSumAggregateInputType = {
    id?: true
    user_id?: true
    resource_id?: true
  }

  export type User_patch_resource_like_relationMinAggregateInputType = {
    id?: true
    user_id?: true
    resource_id?: true
    created?: true
    updated?: true
  }

  export type User_patch_resource_like_relationMaxAggregateInputType = {
    id?: true
    user_id?: true
    resource_id?: true
    created?: true
    updated?: true
  }

  export type User_patch_resource_like_relationCountAggregateInputType = {
    id?: true
    user_id?: true
    resource_id?: true
    created?: true
    updated?: true
    _all?: true
  }

  export type User_patch_resource_like_relationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_patch_resource_like_relation to aggregate.
     */
    where?: user_patch_resource_like_relationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_patch_resource_like_relations to fetch.
     */
    orderBy?: user_patch_resource_like_relationOrderByWithRelationInput | user_patch_resource_like_relationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: user_patch_resource_like_relationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_patch_resource_like_relations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_patch_resource_like_relations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned user_patch_resource_like_relations
    **/
    _count?: true | User_patch_resource_like_relationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: User_patch_resource_like_relationAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: User_patch_resource_like_relationSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: User_patch_resource_like_relationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: User_patch_resource_like_relationMaxAggregateInputType
  }

  export type GetUser_patch_resource_like_relationAggregateType<T extends User_patch_resource_like_relationAggregateArgs> = {
        [P in keyof T & keyof AggregateUser_patch_resource_like_relation]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser_patch_resource_like_relation[P]>
      : GetScalarType<T[P], AggregateUser_patch_resource_like_relation[P]>
  }




  export type user_patch_resource_like_relationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_patch_resource_like_relationWhereInput
    orderBy?: user_patch_resource_like_relationOrderByWithAggregationInput | user_patch_resource_like_relationOrderByWithAggregationInput[]
    by: User_patch_resource_like_relationScalarFieldEnum[] | User_patch_resource_like_relationScalarFieldEnum
    having?: user_patch_resource_like_relationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: User_patch_resource_like_relationCountAggregateInputType | true
    _avg?: User_patch_resource_like_relationAvgAggregateInputType
    _sum?: User_patch_resource_like_relationSumAggregateInputType
    _min?: User_patch_resource_like_relationMinAggregateInputType
    _max?: User_patch_resource_like_relationMaxAggregateInputType
  }

  export type User_patch_resource_like_relationGroupByOutputType = {
    id: number
    user_id: number
    resource_id: number
    created: Date
    updated: Date
    _count: User_patch_resource_like_relationCountAggregateOutputType | null
    _avg: User_patch_resource_like_relationAvgAggregateOutputType | null
    _sum: User_patch_resource_like_relationSumAggregateOutputType | null
    _min: User_patch_resource_like_relationMinAggregateOutputType | null
    _max: User_patch_resource_like_relationMaxAggregateOutputType | null
  }

  type GetUser_patch_resource_like_relationGroupByPayload<T extends user_patch_resource_like_relationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<User_patch_resource_like_relationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof User_patch_resource_like_relationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], User_patch_resource_like_relationGroupByOutputType[P]>
            : GetScalarType<T[P], User_patch_resource_like_relationGroupByOutputType[P]>
        }
      >
    >


  export type user_patch_resource_like_relationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    resource_id?: boolean
    created?: boolean
    updated?: boolean
    user?: boolean | userDefaultArgs<ExtArgs>
    resource?: boolean | patch_resourceDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_patch_resource_like_relation"]>

  export type user_patch_resource_like_relationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    resource_id?: boolean
    created?: boolean
    updated?: boolean
    user?: boolean | userDefaultArgs<ExtArgs>
    resource?: boolean | patch_resourceDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_patch_resource_like_relation"]>

  export type user_patch_resource_like_relationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    resource_id?: boolean
    created?: boolean
    updated?: boolean
    user?: boolean | userDefaultArgs<ExtArgs>
    resource?: boolean | patch_resourceDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_patch_resource_like_relation"]>

  export type user_patch_resource_like_relationSelectScalar = {
    id?: boolean
    user_id?: boolean
    resource_id?: boolean
    created?: boolean
    updated?: boolean
  }

  export type user_patch_resource_like_relationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "resource_id" | "created" | "updated", ExtArgs["result"]["user_patch_resource_like_relation"]>
  export type user_patch_resource_like_relationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | userDefaultArgs<ExtArgs>
    resource?: boolean | patch_resourceDefaultArgs<ExtArgs>
  }
  export type user_patch_resource_like_relationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | userDefaultArgs<ExtArgs>
    resource?: boolean | patch_resourceDefaultArgs<ExtArgs>
  }
  export type user_patch_resource_like_relationIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | userDefaultArgs<ExtArgs>
    resource?: boolean | patch_resourceDefaultArgs<ExtArgs>
  }

  export type $user_patch_resource_like_relationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "user_patch_resource_like_relation"
    objects: {
      user: Prisma.$userPayload<ExtArgs>
      resource: Prisma.$patch_resourcePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      user_id: number
      resource_id: number
      created: Date
      updated: Date
    }, ExtArgs["result"]["user_patch_resource_like_relation"]>
    composites: {}
  }

  type user_patch_resource_like_relationGetPayload<S extends boolean | null | undefined | user_patch_resource_like_relationDefaultArgs> = $Result.GetResult<Prisma.$user_patch_resource_like_relationPayload, S>

  type user_patch_resource_like_relationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<user_patch_resource_like_relationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: User_patch_resource_like_relationCountAggregateInputType | true
    }

  export interface user_patch_resource_like_relationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['user_patch_resource_like_relation'], meta: { name: 'user_patch_resource_like_relation' } }
    /**
     * Find zero or one User_patch_resource_like_relation that matches the filter.
     * @param {user_patch_resource_like_relationFindUniqueArgs} args - Arguments to find a User_patch_resource_like_relation
     * @example
     * // Get one User_patch_resource_like_relation
     * const user_patch_resource_like_relation = await prisma.user_patch_resource_like_relation.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends user_patch_resource_like_relationFindUniqueArgs>(args: SelectSubset<T, user_patch_resource_like_relationFindUniqueArgs<ExtArgs>>): Prisma__user_patch_resource_like_relationClient<$Result.GetResult<Prisma.$user_patch_resource_like_relationPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one User_patch_resource_like_relation that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {user_patch_resource_like_relationFindUniqueOrThrowArgs} args - Arguments to find a User_patch_resource_like_relation
     * @example
     * // Get one User_patch_resource_like_relation
     * const user_patch_resource_like_relation = await prisma.user_patch_resource_like_relation.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends user_patch_resource_like_relationFindUniqueOrThrowArgs>(args: SelectSubset<T, user_patch_resource_like_relationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__user_patch_resource_like_relationClient<$Result.GetResult<Prisma.$user_patch_resource_like_relationPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first User_patch_resource_like_relation that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_patch_resource_like_relationFindFirstArgs} args - Arguments to find a User_patch_resource_like_relation
     * @example
     * // Get one User_patch_resource_like_relation
     * const user_patch_resource_like_relation = await prisma.user_patch_resource_like_relation.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends user_patch_resource_like_relationFindFirstArgs>(args?: SelectSubset<T, user_patch_resource_like_relationFindFirstArgs<ExtArgs>>): Prisma__user_patch_resource_like_relationClient<$Result.GetResult<Prisma.$user_patch_resource_like_relationPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first User_patch_resource_like_relation that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_patch_resource_like_relationFindFirstOrThrowArgs} args - Arguments to find a User_patch_resource_like_relation
     * @example
     * // Get one User_patch_resource_like_relation
     * const user_patch_resource_like_relation = await prisma.user_patch_resource_like_relation.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends user_patch_resource_like_relationFindFirstOrThrowArgs>(args?: SelectSubset<T, user_patch_resource_like_relationFindFirstOrThrowArgs<ExtArgs>>): Prisma__user_patch_resource_like_relationClient<$Result.GetResult<Prisma.$user_patch_resource_like_relationPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more User_patch_resource_like_relations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_patch_resource_like_relationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all User_patch_resource_like_relations
     * const user_patch_resource_like_relations = await prisma.user_patch_resource_like_relation.findMany()
     * 
     * // Get first 10 User_patch_resource_like_relations
     * const user_patch_resource_like_relations = await prisma.user_patch_resource_like_relation.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const user_patch_resource_like_relationWithIdOnly = await prisma.user_patch_resource_like_relation.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends user_patch_resource_like_relationFindManyArgs>(args?: SelectSubset<T, user_patch_resource_like_relationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_patch_resource_like_relationPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a User_patch_resource_like_relation.
     * @param {user_patch_resource_like_relationCreateArgs} args - Arguments to create a User_patch_resource_like_relation.
     * @example
     * // Create one User_patch_resource_like_relation
     * const User_patch_resource_like_relation = await prisma.user_patch_resource_like_relation.create({
     *   data: {
     *     // ... data to create a User_patch_resource_like_relation
     *   }
     * })
     * 
     */
    create<T extends user_patch_resource_like_relationCreateArgs>(args: SelectSubset<T, user_patch_resource_like_relationCreateArgs<ExtArgs>>): Prisma__user_patch_resource_like_relationClient<$Result.GetResult<Prisma.$user_patch_resource_like_relationPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many User_patch_resource_like_relations.
     * @param {user_patch_resource_like_relationCreateManyArgs} args - Arguments to create many User_patch_resource_like_relations.
     * @example
     * // Create many User_patch_resource_like_relations
     * const user_patch_resource_like_relation = await prisma.user_patch_resource_like_relation.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends user_patch_resource_like_relationCreateManyArgs>(args?: SelectSubset<T, user_patch_resource_like_relationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many User_patch_resource_like_relations and returns the data saved in the database.
     * @param {user_patch_resource_like_relationCreateManyAndReturnArgs} args - Arguments to create many User_patch_resource_like_relations.
     * @example
     * // Create many User_patch_resource_like_relations
     * const user_patch_resource_like_relation = await prisma.user_patch_resource_like_relation.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many User_patch_resource_like_relations and only return the `id`
     * const user_patch_resource_like_relationWithIdOnly = await prisma.user_patch_resource_like_relation.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends user_patch_resource_like_relationCreateManyAndReturnArgs>(args?: SelectSubset<T, user_patch_resource_like_relationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_patch_resource_like_relationPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a User_patch_resource_like_relation.
     * @param {user_patch_resource_like_relationDeleteArgs} args - Arguments to delete one User_patch_resource_like_relation.
     * @example
     * // Delete one User_patch_resource_like_relation
     * const User_patch_resource_like_relation = await prisma.user_patch_resource_like_relation.delete({
     *   where: {
     *     // ... filter to delete one User_patch_resource_like_relation
     *   }
     * })
     * 
     */
    delete<T extends user_patch_resource_like_relationDeleteArgs>(args: SelectSubset<T, user_patch_resource_like_relationDeleteArgs<ExtArgs>>): Prisma__user_patch_resource_like_relationClient<$Result.GetResult<Prisma.$user_patch_resource_like_relationPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one User_patch_resource_like_relation.
     * @param {user_patch_resource_like_relationUpdateArgs} args - Arguments to update one User_patch_resource_like_relation.
     * @example
     * // Update one User_patch_resource_like_relation
     * const user_patch_resource_like_relation = await prisma.user_patch_resource_like_relation.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends user_patch_resource_like_relationUpdateArgs>(args: SelectSubset<T, user_patch_resource_like_relationUpdateArgs<ExtArgs>>): Prisma__user_patch_resource_like_relationClient<$Result.GetResult<Prisma.$user_patch_resource_like_relationPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more User_patch_resource_like_relations.
     * @param {user_patch_resource_like_relationDeleteManyArgs} args - Arguments to filter User_patch_resource_like_relations to delete.
     * @example
     * // Delete a few User_patch_resource_like_relations
     * const { count } = await prisma.user_patch_resource_like_relation.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends user_patch_resource_like_relationDeleteManyArgs>(args?: SelectSubset<T, user_patch_resource_like_relationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_patch_resource_like_relations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_patch_resource_like_relationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many User_patch_resource_like_relations
     * const user_patch_resource_like_relation = await prisma.user_patch_resource_like_relation.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends user_patch_resource_like_relationUpdateManyArgs>(args: SelectSubset<T, user_patch_resource_like_relationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_patch_resource_like_relations and returns the data updated in the database.
     * @param {user_patch_resource_like_relationUpdateManyAndReturnArgs} args - Arguments to update many User_patch_resource_like_relations.
     * @example
     * // Update many User_patch_resource_like_relations
     * const user_patch_resource_like_relation = await prisma.user_patch_resource_like_relation.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more User_patch_resource_like_relations and only return the `id`
     * const user_patch_resource_like_relationWithIdOnly = await prisma.user_patch_resource_like_relation.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends user_patch_resource_like_relationUpdateManyAndReturnArgs>(args: SelectSubset<T, user_patch_resource_like_relationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_patch_resource_like_relationPayload<ExtArgs>, T, "updateManyAndReturn", ClientOptions>>

    /**
     * Create or update one User_patch_resource_like_relation.
     * @param {user_patch_resource_like_relationUpsertArgs} args - Arguments to update or create a User_patch_resource_like_relation.
     * @example
     * // Update or create a User_patch_resource_like_relation
     * const user_patch_resource_like_relation = await prisma.user_patch_resource_like_relation.upsert({
     *   create: {
     *     // ... data to create a User_patch_resource_like_relation
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User_patch_resource_like_relation we want to update
     *   }
     * })
     */
    upsert<T extends user_patch_resource_like_relationUpsertArgs>(args: SelectSubset<T, user_patch_resource_like_relationUpsertArgs<ExtArgs>>): Prisma__user_patch_resource_like_relationClient<$Result.GetResult<Prisma.$user_patch_resource_like_relationPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of User_patch_resource_like_relations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_patch_resource_like_relationCountArgs} args - Arguments to filter User_patch_resource_like_relations to count.
     * @example
     * // Count the number of User_patch_resource_like_relations
     * const count = await prisma.user_patch_resource_like_relation.count({
     *   where: {
     *     // ... the filter for the User_patch_resource_like_relations we want to count
     *   }
     * })
    **/
    count<T extends user_patch_resource_like_relationCountArgs>(
      args?: Subset<T, user_patch_resource_like_relationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], User_patch_resource_like_relationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User_patch_resource_like_relation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_patch_resource_like_relationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends User_patch_resource_like_relationAggregateArgs>(args: Subset<T, User_patch_resource_like_relationAggregateArgs>): Prisma.PrismaPromise<GetUser_patch_resource_like_relationAggregateType<T>>

    /**
     * Group by User_patch_resource_like_relation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_patch_resource_like_relationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends user_patch_resource_like_relationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: user_patch_resource_like_relationGroupByArgs['orderBy'] }
        : { orderBy?: user_patch_resource_like_relationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, user_patch_resource_like_relationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUser_patch_resource_like_relationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the user_patch_resource_like_relation model
   */
  readonly fields: user_patch_resource_like_relationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for user_patch_resource_like_relation.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__user_patch_resource_like_relationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | Null, Null, ExtArgs, ClientOptions>
    resource<T extends patch_resourceDefaultArgs<ExtArgs> = {}>(args?: Subset<T, patch_resourceDefaultArgs<ExtArgs>>): Prisma__patch_resourceClient<$Result.GetResult<Prisma.$patch_resourcePayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | Null, Null, ExtArgs, ClientOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the user_patch_resource_like_relation model
   */ 
  interface user_patch_resource_like_relationFieldRefs {
    readonly id: FieldRef<"user_patch_resource_like_relation", 'Int'>
    readonly user_id: FieldRef<"user_patch_resource_like_relation", 'Int'>
    readonly resource_id: FieldRef<"user_patch_resource_like_relation", 'Int'>
    readonly created: FieldRef<"user_patch_resource_like_relation", 'DateTime'>
    readonly updated: FieldRef<"user_patch_resource_like_relation", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * user_patch_resource_like_relation findUnique
   */
  export type user_patch_resource_like_relationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_patch_resource_like_relation
     */
    select?: user_patch_resource_like_relationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_patch_resource_like_relation
     */
    omit?: user_patch_resource_like_relationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_patch_resource_like_relationInclude<ExtArgs> | null
    /**
     * Filter, which user_patch_resource_like_relation to fetch.
     */
    where: user_patch_resource_like_relationWhereUniqueInput
  }

  /**
   * user_patch_resource_like_relation findUniqueOrThrow
   */
  export type user_patch_resource_like_relationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_patch_resource_like_relation
     */
    select?: user_patch_resource_like_relationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_patch_resource_like_relation
     */
    omit?: user_patch_resource_like_relationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_patch_resource_like_relationInclude<ExtArgs> | null
    /**
     * Filter, which user_patch_resource_like_relation to fetch.
     */
    where: user_patch_resource_like_relationWhereUniqueInput
  }

  /**
   * user_patch_resource_like_relation findFirst
   */
  export type user_patch_resource_like_relationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_patch_resource_like_relation
     */
    select?: user_patch_resource_like_relationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_patch_resource_like_relation
     */
    omit?: user_patch_resource_like_relationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_patch_resource_like_relationInclude<ExtArgs> | null
    /**
     * Filter, which user_patch_resource_like_relation to fetch.
     */
    where?: user_patch_resource_like_relationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_patch_resource_like_relations to fetch.
     */
    orderBy?: user_patch_resource_like_relationOrderByWithRelationInput | user_patch_resource_like_relationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_patch_resource_like_relations.
     */
    cursor?: user_patch_resource_like_relationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_patch_resource_like_relations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_patch_resource_like_relations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_patch_resource_like_relations.
     */
    distinct?: User_patch_resource_like_relationScalarFieldEnum | User_patch_resource_like_relationScalarFieldEnum[]
  }

  /**
   * user_patch_resource_like_relation findFirstOrThrow
   */
  export type user_patch_resource_like_relationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_patch_resource_like_relation
     */
    select?: user_patch_resource_like_relationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_patch_resource_like_relation
     */
    omit?: user_patch_resource_like_relationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_patch_resource_like_relationInclude<ExtArgs> | null
    /**
     * Filter, which user_patch_resource_like_relation to fetch.
     */
    where?: user_patch_resource_like_relationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_patch_resource_like_relations to fetch.
     */
    orderBy?: user_patch_resource_like_relationOrderByWithRelationInput | user_patch_resource_like_relationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_patch_resource_like_relations.
     */
    cursor?: user_patch_resource_like_relationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_patch_resource_like_relations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_patch_resource_like_relations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_patch_resource_like_relations.
     */
    distinct?: User_patch_resource_like_relationScalarFieldEnum | User_patch_resource_like_relationScalarFieldEnum[]
  }

  /**
   * user_patch_resource_like_relation findMany
   */
  export type user_patch_resource_like_relationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_patch_resource_like_relation
     */
    select?: user_patch_resource_like_relationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_patch_resource_like_relation
     */
    omit?: user_patch_resource_like_relationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_patch_resource_like_relationInclude<ExtArgs> | null
    /**
     * Filter, which user_patch_resource_like_relations to fetch.
     */
    where?: user_patch_resource_like_relationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_patch_resource_like_relations to fetch.
     */
    orderBy?: user_patch_resource_like_relationOrderByWithRelationInput | user_patch_resource_like_relationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing user_patch_resource_like_relations.
     */
    cursor?: user_patch_resource_like_relationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_patch_resource_like_relations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_patch_resource_like_relations.
     */
    skip?: number
    distinct?: User_patch_resource_like_relationScalarFieldEnum | User_patch_resource_like_relationScalarFieldEnum[]
  }

  /**
   * user_patch_resource_like_relation create
   */
  export type user_patch_resource_like_relationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_patch_resource_like_relation
     */
    select?: user_patch_resource_like_relationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_patch_resource_like_relation
     */
    omit?: user_patch_resource_like_relationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_patch_resource_like_relationInclude<ExtArgs> | null
    /**
     * The data needed to create a user_patch_resource_like_relation.
     */
    data: XOR<user_patch_resource_like_relationCreateInput, user_patch_resource_like_relationUncheckedCreateInput>
  }

  /**
   * user_patch_resource_like_relation createMany
   */
  export type user_patch_resource_like_relationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many user_patch_resource_like_relations.
     */
    data: user_patch_resource_like_relationCreateManyInput | user_patch_resource_like_relationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * user_patch_resource_like_relation createManyAndReturn
   */
  export type user_patch_resource_like_relationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_patch_resource_like_relation
     */
    select?: user_patch_resource_like_relationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user_patch_resource_like_relation
     */
    omit?: user_patch_resource_like_relationOmit<ExtArgs> | null
    /**
     * The data used to create many user_patch_resource_like_relations.
     */
    data: user_patch_resource_like_relationCreateManyInput | user_patch_resource_like_relationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_patch_resource_like_relationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * user_patch_resource_like_relation update
   */
  export type user_patch_resource_like_relationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_patch_resource_like_relation
     */
    select?: user_patch_resource_like_relationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_patch_resource_like_relation
     */
    omit?: user_patch_resource_like_relationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_patch_resource_like_relationInclude<ExtArgs> | null
    /**
     * The data needed to update a user_patch_resource_like_relation.
     */
    data: XOR<user_patch_resource_like_relationUpdateInput, user_patch_resource_like_relationUncheckedUpdateInput>
    /**
     * Choose, which user_patch_resource_like_relation to update.
     */
    where: user_patch_resource_like_relationWhereUniqueInput
  }

  /**
   * user_patch_resource_like_relation updateMany
   */
  export type user_patch_resource_like_relationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update user_patch_resource_like_relations.
     */
    data: XOR<user_patch_resource_like_relationUpdateManyMutationInput, user_patch_resource_like_relationUncheckedUpdateManyInput>
    /**
     * Filter which user_patch_resource_like_relations to update
     */
    where?: user_patch_resource_like_relationWhereInput
  }

  /**
   * user_patch_resource_like_relation updateManyAndReturn
   */
  export type user_patch_resource_like_relationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_patch_resource_like_relation
     */
    select?: user_patch_resource_like_relationSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user_patch_resource_like_relation
     */
    omit?: user_patch_resource_like_relationOmit<ExtArgs> | null
    /**
     * The data used to update user_patch_resource_like_relations.
     */
    data: XOR<user_patch_resource_like_relationUpdateManyMutationInput, user_patch_resource_like_relationUncheckedUpdateManyInput>
    /**
     * Filter which user_patch_resource_like_relations to update
     */
    where?: user_patch_resource_like_relationWhereInput
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_patch_resource_like_relationIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * user_patch_resource_like_relation upsert
   */
  export type user_patch_resource_like_relationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_patch_resource_like_relation
     */
    select?: user_patch_resource_like_relationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_patch_resource_like_relation
     */
    omit?: user_patch_resource_like_relationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_patch_resource_like_relationInclude<ExtArgs> | null
    /**
     * The filter to search for the user_patch_resource_like_relation to update in case it exists.
     */
    where: user_patch_resource_like_relationWhereUniqueInput
    /**
     * In case the user_patch_resource_like_relation found by the `where` argument doesn't exist, create a new user_patch_resource_like_relation with this data.
     */
    create: XOR<user_patch_resource_like_relationCreateInput, user_patch_resource_like_relationUncheckedCreateInput>
    /**
     * In case the user_patch_resource_like_relation was found with the provided `where` argument, update it with this data.
     */
    update: XOR<user_patch_resource_like_relationUpdateInput, user_patch_resource_like_relationUncheckedUpdateInput>
  }

  /**
   * user_patch_resource_like_relation delete
   */
  export type user_patch_resource_like_relationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_patch_resource_like_relation
     */
    select?: user_patch_resource_like_relationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_patch_resource_like_relation
     */
    omit?: user_patch_resource_like_relationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_patch_resource_like_relationInclude<ExtArgs> | null
    /**
     * Filter which user_patch_resource_like_relation to delete.
     */
    where: user_patch_resource_like_relationWhereUniqueInput
  }

  /**
   * user_patch_resource_like_relation deleteMany
   */
  export type user_patch_resource_like_relationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_patch_resource_like_relations to delete
     */
    where?: user_patch_resource_like_relationWhereInput
  }

  /**
   * user_patch_resource_like_relation without action
   */
  export type user_patch_resource_like_relationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_patch_resource_like_relation
     */
    select?: user_patch_resource_like_relationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_patch_resource_like_relation
     */
    omit?: user_patch_resource_like_relationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_patch_resource_like_relationInclude<ExtArgs> | null
  }


  /**
   * Model patch
   */

  export type AggregatePatch = {
    _count: PatchCountAggregateOutputType | null
    _avg: PatchAvgAggregateOutputType | null
    _sum: PatchSumAggregateOutputType | null
    _min: PatchMinAggregateOutputType | null
    _max: PatchMaxAggregateOutputType | null
  }

  export type PatchAvgAggregateOutputType = {
    id: number | null
    status: number | null
    download: number | null
    view: number | null
    user_id: number | null
  }

  export type PatchSumAggregateOutputType = {
    id: number | null
    status: number | null
    download: number | null
    view: number | null
    user_id: number | null
  }

  export type PatchMinAggregateOutputType = {
    id: number | null
    unique_id: string | null
    name: string | null
    vndb_id: string | null
    banner: string | null
    introduction: string | null
    released: string | null
    content_limit: string | null
    status: number | null
    download: number | null
    view: number | null
    resource_update_time: Date | null
    user_id: number | null
    created: Date | null
    updated: Date | null
  }

  export type PatchMaxAggregateOutputType = {
    id: number | null
    unique_id: string | null
    name: string | null
    vndb_id: string | null
    banner: string | null
    introduction: string | null
    released: string | null
    content_limit: string | null
    status: number | null
    download: number | null
    view: number | null
    resource_update_time: Date | null
    user_id: number | null
    created: Date | null
    updated: Date | null
  }

  export type PatchCountAggregateOutputType = {
    id: number
    unique_id: number
    name: number
    vndb_id: number
    banner: number
    introduction: number
    released: number
    content_limit: number
    status: number
    download: number
    view: number
    resource_update_time: number
    type: number
    language: number
    engine: number
    platform: number
    user_id: number
    created: number
    updated: number
    _all: number
  }


  export type PatchAvgAggregateInputType = {
    id?: true
    status?: true
    download?: true
    view?: true
    user_id?: true
  }

  export type PatchSumAggregateInputType = {
    id?: true
    status?: true
    download?: true
    view?: true
    user_id?: true
  }

  export type PatchMinAggregateInputType = {
    id?: true
    unique_id?: true
    name?: true
    vndb_id?: true
    banner?: true
    introduction?: true
    released?: true
    content_limit?: true
    status?: true
    download?: true
    view?: true
    resource_update_time?: true
    user_id?: true
    created?: true
    updated?: true
  }

  export type PatchMaxAggregateInputType = {
    id?: true
    unique_id?: true
    name?: true
    vndb_id?: true
    banner?: true
    introduction?: true
    released?: true
    content_limit?: true
    status?: true
    download?: true
    view?: true
    resource_update_time?: true
    user_id?: true
    created?: true
    updated?: true
  }

  export type PatchCountAggregateInputType = {
    id?: true
    unique_id?: true
    name?: true
    vndb_id?: true
    banner?: true
    introduction?: true
    released?: true
    content_limit?: true
    status?: true
    download?: true
    view?: true
    resource_update_time?: true
    type?: true
    language?: true
    engine?: true
    platform?: true
    user_id?: true
    created?: true
    updated?: true
    _all?: true
  }

  export type PatchAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which patch to aggregate.
     */
    where?: patchWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of patches to fetch.
     */
    orderBy?: patchOrderByWithRelationInput | patchOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: patchWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` patches from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` patches.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned patches
    **/
    _count?: true | PatchCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PatchAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PatchSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PatchMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PatchMaxAggregateInputType
  }

  export type GetPatchAggregateType<T extends PatchAggregateArgs> = {
        [P in keyof T & keyof AggregatePatch]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePatch[P]>
      : GetScalarType<T[P], AggregatePatch[P]>
  }




  export type patchGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: patchWhereInput
    orderBy?: patchOrderByWithAggregationInput | patchOrderByWithAggregationInput[]
    by: PatchScalarFieldEnum[] | PatchScalarFieldEnum
    having?: patchScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PatchCountAggregateInputType | true
    _avg?: PatchAvgAggregateInputType
    _sum?: PatchSumAggregateInputType
    _min?: PatchMinAggregateInputType
    _max?: PatchMaxAggregateInputType
  }

  export type PatchGroupByOutputType = {
    id: number
    unique_id: string
    name: string
    vndb_id: string | null
    banner: string
    introduction: string
    released: string
    content_limit: string
    status: number
    download: number
    view: number
    resource_update_time: Date
    type: string[]
    language: string[]
    engine: string[]
    platform: string[]
    user_id: number
    created: Date
    updated: Date
    _count: PatchCountAggregateOutputType | null
    _avg: PatchAvgAggregateOutputType | null
    _sum: PatchSumAggregateOutputType | null
    _min: PatchMinAggregateOutputType | null
    _max: PatchMaxAggregateOutputType | null
  }

  type GetPatchGroupByPayload<T extends patchGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PatchGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PatchGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PatchGroupByOutputType[P]>
            : GetScalarType<T[P], PatchGroupByOutputType[P]>
        }
      >
    >


  export type patchSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    unique_id?: boolean
    name?: boolean
    vndb_id?: boolean
    banner?: boolean
    introduction?: boolean
    released?: boolean
    content_limit?: boolean
    status?: boolean
    download?: boolean
    view?: boolean
    resource_update_time?: boolean
    type?: boolean
    language?: boolean
    engine?: boolean
    platform?: boolean
    user_id?: boolean
    created?: boolean
    updated?: boolean
    user?: boolean | userDefaultArgs<ExtArgs>
    alias?: boolean | patch$aliasArgs<ExtArgs>
    tag?: boolean | patch$tagArgs<ExtArgs>
    favorite_folder?: boolean | patch$favorite_folderArgs<ExtArgs>
    resource?: boolean | patch$resourceArgs<ExtArgs>
    comment?: boolean | patch$commentArgs<ExtArgs>
    characters?: boolean | patch$charactersArgs<ExtArgs>
    _count?: boolean | PatchCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["patch"]>

  export type patchSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    unique_id?: boolean
    name?: boolean
    vndb_id?: boolean
    banner?: boolean
    introduction?: boolean
    released?: boolean
    content_limit?: boolean
    status?: boolean
    download?: boolean
    view?: boolean
    resource_update_time?: boolean
    type?: boolean
    language?: boolean
    engine?: boolean
    platform?: boolean
    user_id?: boolean
    created?: boolean
    updated?: boolean
    user?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["patch"]>

  export type patchSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    unique_id?: boolean
    name?: boolean
    vndb_id?: boolean
    banner?: boolean
    introduction?: boolean
    released?: boolean
    content_limit?: boolean
    status?: boolean
    download?: boolean
    view?: boolean
    resource_update_time?: boolean
    type?: boolean
    language?: boolean
    engine?: boolean
    platform?: boolean
    user_id?: boolean
    created?: boolean
    updated?: boolean
    user?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["patch"]>

  export type patchSelectScalar = {
    id?: boolean
    unique_id?: boolean
    name?: boolean
    vndb_id?: boolean
    banner?: boolean
    introduction?: boolean
    released?: boolean
    content_limit?: boolean
    status?: boolean
    download?: boolean
    view?: boolean
    resource_update_time?: boolean
    type?: boolean
    language?: boolean
    engine?: boolean
    platform?: boolean
    user_id?: boolean
    created?: boolean
    updated?: boolean
  }

  export type patchOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "unique_id" | "name" | "vndb_id" | "banner" | "introduction" | "released" | "content_limit" | "status" | "download" | "view" | "resource_update_time" | "type" | "language" | "engine" | "platform" | "user_id" | "created" | "updated", ExtArgs["result"]["patch"]>
  export type patchInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | userDefaultArgs<ExtArgs>
    alias?: boolean | patch$aliasArgs<ExtArgs>
    tag?: boolean | patch$tagArgs<ExtArgs>
    favorite_folder?: boolean | patch$favorite_folderArgs<ExtArgs>
    resource?: boolean | patch$resourceArgs<ExtArgs>
    comment?: boolean | patch$commentArgs<ExtArgs>
    characters?: boolean | patch$charactersArgs<ExtArgs>
    _count?: boolean | PatchCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type patchIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | userDefaultArgs<ExtArgs>
  }
  export type patchIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | userDefaultArgs<ExtArgs>
  }

  export type $patchPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "patch"
    objects: {
      user: Prisma.$userPayload<ExtArgs>
      alias: Prisma.$patch_aliasPayload<ExtArgs>[]
      tag: Prisma.$patch_tag_relationPayload<ExtArgs>[]
      favorite_folder: Prisma.$user_patch_favorite_folder_relationPayload<ExtArgs>[]
      resource: Prisma.$patch_resourcePayload<ExtArgs>[]
      comment: Prisma.$patch_commentPayload<ExtArgs>[]
      characters: Prisma.$patch_characterPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      unique_id: string
      name: string
      vndb_id: string | null
      banner: string
      introduction: string
      released: string
      content_limit: string
      status: number
      download: number
      view: number
      resource_update_time: Date
      type: string[]
      language: string[]
      engine: string[]
      platform: string[]
      user_id: number
      created: Date
      updated: Date
    }, ExtArgs["result"]["patch"]>
    composites: {}
  }

  type patchGetPayload<S extends boolean | null | undefined | patchDefaultArgs> = $Result.GetResult<Prisma.$patchPayload, S>

  type patchCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<patchFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PatchCountAggregateInputType | true
    }

  export interface patchDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['patch'], meta: { name: 'patch' } }
    /**
     * Find zero or one Patch that matches the filter.
     * @param {patchFindUniqueArgs} args - Arguments to find a Patch
     * @example
     * // Get one Patch
     * const patch = await prisma.patch.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends patchFindUniqueArgs>(args: SelectSubset<T, patchFindUniqueArgs<ExtArgs>>): Prisma__patchClient<$Result.GetResult<Prisma.$patchPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one Patch that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {patchFindUniqueOrThrowArgs} args - Arguments to find a Patch
     * @example
     * // Get one Patch
     * const patch = await prisma.patch.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends patchFindUniqueOrThrowArgs>(args: SelectSubset<T, patchFindUniqueOrThrowArgs<ExtArgs>>): Prisma__patchClient<$Result.GetResult<Prisma.$patchPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first Patch that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {patchFindFirstArgs} args - Arguments to find a Patch
     * @example
     * // Get one Patch
     * const patch = await prisma.patch.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends patchFindFirstArgs>(args?: SelectSubset<T, patchFindFirstArgs<ExtArgs>>): Prisma__patchClient<$Result.GetResult<Prisma.$patchPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first Patch that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {patchFindFirstOrThrowArgs} args - Arguments to find a Patch
     * @example
     * // Get one Patch
     * const patch = await prisma.patch.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends patchFindFirstOrThrowArgs>(args?: SelectSubset<T, patchFindFirstOrThrowArgs<ExtArgs>>): Prisma__patchClient<$Result.GetResult<Prisma.$patchPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more Patches that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {patchFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Patches
     * const patches = await prisma.patch.findMany()
     * 
     * // Get first 10 Patches
     * const patches = await prisma.patch.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const patchWithIdOnly = await prisma.patch.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends patchFindManyArgs>(args?: SelectSubset<T, patchFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$patchPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a Patch.
     * @param {patchCreateArgs} args - Arguments to create a Patch.
     * @example
     * // Create one Patch
     * const Patch = await prisma.patch.create({
     *   data: {
     *     // ... data to create a Patch
     *   }
     * })
     * 
     */
    create<T extends patchCreateArgs>(args: SelectSubset<T, patchCreateArgs<ExtArgs>>): Prisma__patchClient<$Result.GetResult<Prisma.$patchPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many Patches.
     * @param {patchCreateManyArgs} args - Arguments to create many Patches.
     * @example
     * // Create many Patches
     * const patch = await prisma.patch.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends patchCreateManyArgs>(args?: SelectSubset<T, patchCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Patches and returns the data saved in the database.
     * @param {patchCreateManyAndReturnArgs} args - Arguments to create many Patches.
     * @example
     * // Create many Patches
     * const patch = await prisma.patch.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Patches and only return the `id`
     * const patchWithIdOnly = await prisma.patch.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends patchCreateManyAndReturnArgs>(args?: SelectSubset<T, patchCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$patchPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a Patch.
     * @param {patchDeleteArgs} args - Arguments to delete one Patch.
     * @example
     * // Delete one Patch
     * const Patch = await prisma.patch.delete({
     *   where: {
     *     // ... filter to delete one Patch
     *   }
     * })
     * 
     */
    delete<T extends patchDeleteArgs>(args: SelectSubset<T, patchDeleteArgs<ExtArgs>>): Prisma__patchClient<$Result.GetResult<Prisma.$patchPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one Patch.
     * @param {patchUpdateArgs} args - Arguments to update one Patch.
     * @example
     * // Update one Patch
     * const patch = await prisma.patch.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends patchUpdateArgs>(args: SelectSubset<T, patchUpdateArgs<ExtArgs>>): Prisma__patchClient<$Result.GetResult<Prisma.$patchPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more Patches.
     * @param {patchDeleteManyArgs} args - Arguments to filter Patches to delete.
     * @example
     * // Delete a few Patches
     * const { count } = await prisma.patch.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends patchDeleteManyArgs>(args?: SelectSubset<T, patchDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Patches.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {patchUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Patches
     * const patch = await prisma.patch.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends patchUpdateManyArgs>(args: SelectSubset<T, patchUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Patches and returns the data updated in the database.
     * @param {patchUpdateManyAndReturnArgs} args - Arguments to update many Patches.
     * @example
     * // Update many Patches
     * const patch = await prisma.patch.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Patches and only return the `id`
     * const patchWithIdOnly = await prisma.patch.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends patchUpdateManyAndReturnArgs>(args: SelectSubset<T, patchUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$patchPayload<ExtArgs>, T, "updateManyAndReturn", ClientOptions>>

    /**
     * Create or update one Patch.
     * @param {patchUpsertArgs} args - Arguments to update or create a Patch.
     * @example
     * // Update or create a Patch
     * const patch = await prisma.patch.upsert({
     *   create: {
     *     // ... data to create a Patch
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Patch we want to update
     *   }
     * })
     */
    upsert<T extends patchUpsertArgs>(args: SelectSubset<T, patchUpsertArgs<ExtArgs>>): Prisma__patchClient<$Result.GetResult<Prisma.$patchPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of Patches.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {patchCountArgs} args - Arguments to filter Patches to count.
     * @example
     * // Count the number of Patches
     * const count = await prisma.patch.count({
     *   where: {
     *     // ... the filter for the Patches we want to count
     *   }
     * })
    **/
    count<T extends patchCountArgs>(
      args?: Subset<T, patchCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PatchCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Patch.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PatchAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PatchAggregateArgs>(args: Subset<T, PatchAggregateArgs>): Prisma.PrismaPromise<GetPatchAggregateType<T>>

    /**
     * Group by Patch.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {patchGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends patchGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: patchGroupByArgs['orderBy'] }
        : { orderBy?: patchGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, patchGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPatchGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the patch model
   */
  readonly fields: patchFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for patch.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__patchClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | Null, Null, ExtArgs, ClientOptions>
    alias<T extends patch$aliasArgs<ExtArgs> = {}>(args?: Subset<T, patch$aliasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$patch_aliasPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    tag<T extends patch$tagArgs<ExtArgs> = {}>(args?: Subset<T, patch$tagArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$patch_tag_relationPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    favorite_folder<T extends patch$favorite_folderArgs<ExtArgs> = {}>(args?: Subset<T, patch$favorite_folderArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_patch_favorite_folder_relationPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    resource<T extends patch$resourceArgs<ExtArgs> = {}>(args?: Subset<T, patch$resourceArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$patch_resourcePayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    comment<T extends patch$commentArgs<ExtArgs> = {}>(args?: Subset<T, patch$commentArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$patch_commentPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    characters<T extends patch$charactersArgs<ExtArgs> = {}>(args?: Subset<T, patch$charactersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$patch_characterPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the patch model
   */ 
  interface patchFieldRefs {
    readonly id: FieldRef<"patch", 'Int'>
    readonly unique_id: FieldRef<"patch", 'String'>
    readonly name: FieldRef<"patch", 'String'>
    readonly vndb_id: FieldRef<"patch", 'String'>
    readonly banner: FieldRef<"patch", 'String'>
    readonly introduction: FieldRef<"patch", 'String'>
    readonly released: FieldRef<"patch", 'String'>
    readonly content_limit: FieldRef<"patch", 'String'>
    readonly status: FieldRef<"patch", 'Int'>
    readonly download: FieldRef<"patch", 'Int'>
    readonly view: FieldRef<"patch", 'Int'>
    readonly resource_update_time: FieldRef<"patch", 'DateTime'>
    readonly type: FieldRef<"patch", 'String[]'>
    readonly language: FieldRef<"patch", 'String[]'>
    readonly engine: FieldRef<"patch", 'String[]'>
    readonly platform: FieldRef<"patch", 'String[]'>
    readonly user_id: FieldRef<"patch", 'Int'>
    readonly created: FieldRef<"patch", 'DateTime'>
    readonly updated: FieldRef<"patch", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * patch findUnique
   */
  export type patchFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch
     */
    select?: patchSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch
     */
    omit?: patchOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patchInclude<ExtArgs> | null
    /**
     * Filter, which patch to fetch.
     */
    where: patchWhereUniqueInput
  }

  /**
   * patch findUniqueOrThrow
   */
  export type patchFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch
     */
    select?: patchSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch
     */
    omit?: patchOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patchInclude<ExtArgs> | null
    /**
     * Filter, which patch to fetch.
     */
    where: patchWhereUniqueInput
  }

  /**
   * patch findFirst
   */
  export type patchFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch
     */
    select?: patchSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch
     */
    omit?: patchOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patchInclude<ExtArgs> | null
    /**
     * Filter, which patch to fetch.
     */
    where?: patchWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of patches to fetch.
     */
    orderBy?: patchOrderByWithRelationInput | patchOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for patches.
     */
    cursor?: patchWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` patches from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` patches.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of patches.
     */
    distinct?: PatchScalarFieldEnum | PatchScalarFieldEnum[]
  }

  /**
   * patch findFirstOrThrow
   */
  export type patchFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch
     */
    select?: patchSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch
     */
    omit?: patchOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patchInclude<ExtArgs> | null
    /**
     * Filter, which patch to fetch.
     */
    where?: patchWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of patches to fetch.
     */
    orderBy?: patchOrderByWithRelationInput | patchOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for patches.
     */
    cursor?: patchWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` patches from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` patches.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of patches.
     */
    distinct?: PatchScalarFieldEnum | PatchScalarFieldEnum[]
  }

  /**
   * patch findMany
   */
  export type patchFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch
     */
    select?: patchSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch
     */
    omit?: patchOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patchInclude<ExtArgs> | null
    /**
     * Filter, which patches to fetch.
     */
    where?: patchWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of patches to fetch.
     */
    orderBy?: patchOrderByWithRelationInput | patchOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing patches.
     */
    cursor?: patchWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` patches from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` patches.
     */
    skip?: number
    distinct?: PatchScalarFieldEnum | PatchScalarFieldEnum[]
  }

  /**
   * patch create
   */
  export type patchCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch
     */
    select?: patchSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch
     */
    omit?: patchOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patchInclude<ExtArgs> | null
    /**
     * The data needed to create a patch.
     */
    data: XOR<patchCreateInput, patchUncheckedCreateInput>
  }

  /**
   * patch createMany
   */
  export type patchCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many patches.
     */
    data: patchCreateManyInput | patchCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * patch createManyAndReturn
   */
  export type patchCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch
     */
    select?: patchSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the patch
     */
    omit?: patchOmit<ExtArgs> | null
    /**
     * The data used to create many patches.
     */
    data: patchCreateManyInput | patchCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patchIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * patch update
   */
  export type patchUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch
     */
    select?: patchSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch
     */
    omit?: patchOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patchInclude<ExtArgs> | null
    /**
     * The data needed to update a patch.
     */
    data: XOR<patchUpdateInput, patchUncheckedUpdateInput>
    /**
     * Choose, which patch to update.
     */
    where: patchWhereUniqueInput
  }

  /**
   * patch updateMany
   */
  export type patchUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update patches.
     */
    data: XOR<patchUpdateManyMutationInput, patchUncheckedUpdateManyInput>
    /**
     * Filter which patches to update
     */
    where?: patchWhereInput
  }

  /**
   * patch updateManyAndReturn
   */
  export type patchUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch
     */
    select?: patchSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the patch
     */
    omit?: patchOmit<ExtArgs> | null
    /**
     * The data used to update patches.
     */
    data: XOR<patchUpdateManyMutationInput, patchUncheckedUpdateManyInput>
    /**
     * Filter which patches to update
     */
    where?: patchWhereInput
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patchIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * patch upsert
   */
  export type patchUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch
     */
    select?: patchSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch
     */
    omit?: patchOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patchInclude<ExtArgs> | null
    /**
     * The filter to search for the patch to update in case it exists.
     */
    where: patchWhereUniqueInput
    /**
     * In case the patch found by the `where` argument doesn't exist, create a new patch with this data.
     */
    create: XOR<patchCreateInput, patchUncheckedCreateInput>
    /**
     * In case the patch was found with the provided `where` argument, update it with this data.
     */
    update: XOR<patchUpdateInput, patchUncheckedUpdateInput>
  }

  /**
   * patch delete
   */
  export type patchDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch
     */
    select?: patchSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch
     */
    omit?: patchOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patchInclude<ExtArgs> | null
    /**
     * Filter which patch to delete.
     */
    where: patchWhereUniqueInput
  }

  /**
   * patch deleteMany
   */
  export type patchDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which patches to delete
     */
    where?: patchWhereInput
  }

  /**
   * patch.alias
   */
  export type patch$aliasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_alias
     */
    select?: patch_aliasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch_alias
     */
    omit?: patch_aliasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_aliasInclude<ExtArgs> | null
    where?: patch_aliasWhereInput
    orderBy?: patch_aliasOrderByWithRelationInput | patch_aliasOrderByWithRelationInput[]
    cursor?: patch_aliasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Patch_aliasScalarFieldEnum | Patch_aliasScalarFieldEnum[]
  }

  /**
   * patch.tag
   */
  export type patch$tagArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_tag_relation
     */
    select?: patch_tag_relationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch_tag_relation
     */
    omit?: patch_tag_relationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_tag_relationInclude<ExtArgs> | null
    where?: patch_tag_relationWhereInput
    orderBy?: patch_tag_relationOrderByWithRelationInput | patch_tag_relationOrderByWithRelationInput[]
    cursor?: patch_tag_relationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Patch_tag_relationScalarFieldEnum | Patch_tag_relationScalarFieldEnum[]
  }

  /**
   * patch.favorite_folder
   */
  export type patch$favorite_folderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_patch_favorite_folder_relation
     */
    select?: user_patch_favorite_folder_relationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_patch_favorite_folder_relation
     */
    omit?: user_patch_favorite_folder_relationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_patch_favorite_folder_relationInclude<ExtArgs> | null
    where?: user_patch_favorite_folder_relationWhereInput
    orderBy?: user_patch_favorite_folder_relationOrderByWithRelationInput | user_patch_favorite_folder_relationOrderByWithRelationInput[]
    cursor?: user_patch_favorite_folder_relationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: User_patch_favorite_folder_relationScalarFieldEnum | User_patch_favorite_folder_relationScalarFieldEnum[]
  }

  /**
   * patch.resource
   */
  export type patch$resourceArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_resource
     */
    select?: patch_resourceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch_resource
     */
    omit?: patch_resourceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_resourceInclude<ExtArgs> | null
    where?: patch_resourceWhereInput
    orderBy?: patch_resourceOrderByWithRelationInput | patch_resourceOrderByWithRelationInput[]
    cursor?: patch_resourceWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Patch_resourceScalarFieldEnum | Patch_resourceScalarFieldEnum[]
  }

  /**
   * patch.comment
   */
  export type patch$commentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_comment
     */
    select?: patch_commentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch_comment
     */
    omit?: patch_commentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_commentInclude<ExtArgs> | null
    where?: patch_commentWhereInput
    orderBy?: patch_commentOrderByWithRelationInput | patch_commentOrderByWithRelationInput[]
    cursor?: patch_commentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Patch_commentScalarFieldEnum | Patch_commentScalarFieldEnum[]
  }

  /**
   * patch.characters
   */
  export type patch$charactersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_character
     */
    select?: patch_characterSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch_character
     */
    omit?: patch_characterOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_characterInclude<ExtArgs> | null
    where?: patch_characterWhereInput
    orderBy?: patch_characterOrderByWithRelationInput | patch_characterOrderByWithRelationInput[]
    cursor?: patch_characterWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Patch_characterScalarFieldEnum | Patch_characterScalarFieldEnum[]
  }

  /**
   * patch without action
   */
  export type patchDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch
     */
    select?: patchSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch
     */
    omit?: patchOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patchInclude<ExtArgs> | null
  }


  /**
   * Model patch_alias
   */

  export type AggregatePatch_alias = {
    _count: Patch_aliasCountAggregateOutputType | null
    _avg: Patch_aliasAvgAggregateOutputType | null
    _sum: Patch_aliasSumAggregateOutputType | null
    _min: Patch_aliasMinAggregateOutputType | null
    _max: Patch_aliasMaxAggregateOutputType | null
  }

  export type Patch_aliasAvgAggregateOutputType = {
    id: number | null
    patch_id: number | null
  }

  export type Patch_aliasSumAggregateOutputType = {
    id: number | null
    patch_id: number | null
  }

  export type Patch_aliasMinAggregateOutputType = {
    id: number | null
    name: string | null
    patch_id: number | null
    created: Date | null
    updated: Date | null
  }

  export type Patch_aliasMaxAggregateOutputType = {
    id: number | null
    name: string | null
    patch_id: number | null
    created: Date | null
    updated: Date | null
  }

  export type Patch_aliasCountAggregateOutputType = {
    id: number
    name: number
    patch_id: number
    created: number
    updated: number
    _all: number
  }


  export type Patch_aliasAvgAggregateInputType = {
    id?: true
    patch_id?: true
  }

  export type Patch_aliasSumAggregateInputType = {
    id?: true
    patch_id?: true
  }

  export type Patch_aliasMinAggregateInputType = {
    id?: true
    name?: true
    patch_id?: true
    created?: true
    updated?: true
  }

  export type Patch_aliasMaxAggregateInputType = {
    id?: true
    name?: true
    patch_id?: true
    created?: true
    updated?: true
  }

  export type Patch_aliasCountAggregateInputType = {
    id?: true
    name?: true
    patch_id?: true
    created?: true
    updated?: true
    _all?: true
  }

  export type Patch_aliasAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which patch_alias to aggregate.
     */
    where?: patch_aliasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of patch_aliases to fetch.
     */
    orderBy?: patch_aliasOrderByWithRelationInput | patch_aliasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: patch_aliasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` patch_aliases from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` patch_aliases.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned patch_aliases
    **/
    _count?: true | Patch_aliasCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Patch_aliasAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Patch_aliasSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Patch_aliasMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Patch_aliasMaxAggregateInputType
  }

  export type GetPatch_aliasAggregateType<T extends Patch_aliasAggregateArgs> = {
        [P in keyof T & keyof AggregatePatch_alias]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePatch_alias[P]>
      : GetScalarType<T[P], AggregatePatch_alias[P]>
  }




  export type patch_aliasGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: patch_aliasWhereInput
    orderBy?: patch_aliasOrderByWithAggregationInput | patch_aliasOrderByWithAggregationInput[]
    by: Patch_aliasScalarFieldEnum[] | Patch_aliasScalarFieldEnum
    having?: patch_aliasScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Patch_aliasCountAggregateInputType | true
    _avg?: Patch_aliasAvgAggregateInputType
    _sum?: Patch_aliasSumAggregateInputType
    _min?: Patch_aliasMinAggregateInputType
    _max?: Patch_aliasMaxAggregateInputType
  }

  export type Patch_aliasGroupByOutputType = {
    id: number
    name: string
    patch_id: number
    created: Date
    updated: Date
    _count: Patch_aliasCountAggregateOutputType | null
    _avg: Patch_aliasAvgAggregateOutputType | null
    _sum: Patch_aliasSumAggregateOutputType | null
    _min: Patch_aliasMinAggregateOutputType | null
    _max: Patch_aliasMaxAggregateOutputType | null
  }

  type GetPatch_aliasGroupByPayload<T extends patch_aliasGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Patch_aliasGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Patch_aliasGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Patch_aliasGroupByOutputType[P]>
            : GetScalarType<T[P], Patch_aliasGroupByOutputType[P]>
        }
      >
    >


  export type patch_aliasSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    patch_id?: boolean
    created?: boolean
    updated?: boolean
    patch?: boolean | patchDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["patch_alias"]>

  export type patch_aliasSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    patch_id?: boolean
    created?: boolean
    updated?: boolean
    patch?: boolean | patchDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["patch_alias"]>

  export type patch_aliasSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    patch_id?: boolean
    created?: boolean
    updated?: boolean
    patch?: boolean | patchDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["patch_alias"]>

  export type patch_aliasSelectScalar = {
    id?: boolean
    name?: boolean
    patch_id?: boolean
    created?: boolean
    updated?: boolean
  }

  export type patch_aliasOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "patch_id" | "created" | "updated", ExtArgs["result"]["patch_alias"]>
  export type patch_aliasInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    patch?: boolean | patchDefaultArgs<ExtArgs>
  }
  export type patch_aliasIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    patch?: boolean | patchDefaultArgs<ExtArgs>
  }
  export type patch_aliasIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    patch?: boolean | patchDefaultArgs<ExtArgs>
  }

  export type $patch_aliasPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "patch_alias"
    objects: {
      patch: Prisma.$patchPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      patch_id: number
      created: Date
      updated: Date
    }, ExtArgs["result"]["patch_alias"]>
    composites: {}
  }

  type patch_aliasGetPayload<S extends boolean | null | undefined | patch_aliasDefaultArgs> = $Result.GetResult<Prisma.$patch_aliasPayload, S>

  type patch_aliasCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<patch_aliasFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Patch_aliasCountAggregateInputType | true
    }

  export interface patch_aliasDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['patch_alias'], meta: { name: 'patch_alias' } }
    /**
     * Find zero or one Patch_alias that matches the filter.
     * @param {patch_aliasFindUniqueArgs} args - Arguments to find a Patch_alias
     * @example
     * // Get one Patch_alias
     * const patch_alias = await prisma.patch_alias.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends patch_aliasFindUniqueArgs>(args: SelectSubset<T, patch_aliasFindUniqueArgs<ExtArgs>>): Prisma__patch_aliasClient<$Result.GetResult<Prisma.$patch_aliasPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one Patch_alias that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {patch_aliasFindUniqueOrThrowArgs} args - Arguments to find a Patch_alias
     * @example
     * // Get one Patch_alias
     * const patch_alias = await prisma.patch_alias.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends patch_aliasFindUniqueOrThrowArgs>(args: SelectSubset<T, patch_aliasFindUniqueOrThrowArgs<ExtArgs>>): Prisma__patch_aliasClient<$Result.GetResult<Prisma.$patch_aliasPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first Patch_alias that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {patch_aliasFindFirstArgs} args - Arguments to find a Patch_alias
     * @example
     * // Get one Patch_alias
     * const patch_alias = await prisma.patch_alias.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends patch_aliasFindFirstArgs>(args?: SelectSubset<T, patch_aliasFindFirstArgs<ExtArgs>>): Prisma__patch_aliasClient<$Result.GetResult<Prisma.$patch_aliasPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first Patch_alias that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {patch_aliasFindFirstOrThrowArgs} args - Arguments to find a Patch_alias
     * @example
     * // Get one Patch_alias
     * const patch_alias = await prisma.patch_alias.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends patch_aliasFindFirstOrThrowArgs>(args?: SelectSubset<T, patch_aliasFindFirstOrThrowArgs<ExtArgs>>): Prisma__patch_aliasClient<$Result.GetResult<Prisma.$patch_aliasPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more Patch_aliases that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {patch_aliasFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Patch_aliases
     * const patch_aliases = await prisma.patch_alias.findMany()
     * 
     * // Get first 10 Patch_aliases
     * const patch_aliases = await prisma.patch_alias.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const patch_aliasWithIdOnly = await prisma.patch_alias.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends patch_aliasFindManyArgs>(args?: SelectSubset<T, patch_aliasFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$patch_aliasPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a Patch_alias.
     * @param {patch_aliasCreateArgs} args - Arguments to create a Patch_alias.
     * @example
     * // Create one Patch_alias
     * const Patch_alias = await prisma.patch_alias.create({
     *   data: {
     *     // ... data to create a Patch_alias
     *   }
     * })
     * 
     */
    create<T extends patch_aliasCreateArgs>(args: SelectSubset<T, patch_aliasCreateArgs<ExtArgs>>): Prisma__patch_aliasClient<$Result.GetResult<Prisma.$patch_aliasPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many Patch_aliases.
     * @param {patch_aliasCreateManyArgs} args - Arguments to create many Patch_aliases.
     * @example
     * // Create many Patch_aliases
     * const patch_alias = await prisma.patch_alias.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends patch_aliasCreateManyArgs>(args?: SelectSubset<T, patch_aliasCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Patch_aliases and returns the data saved in the database.
     * @param {patch_aliasCreateManyAndReturnArgs} args - Arguments to create many Patch_aliases.
     * @example
     * // Create many Patch_aliases
     * const patch_alias = await prisma.patch_alias.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Patch_aliases and only return the `id`
     * const patch_aliasWithIdOnly = await prisma.patch_alias.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends patch_aliasCreateManyAndReturnArgs>(args?: SelectSubset<T, patch_aliasCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$patch_aliasPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a Patch_alias.
     * @param {patch_aliasDeleteArgs} args - Arguments to delete one Patch_alias.
     * @example
     * // Delete one Patch_alias
     * const Patch_alias = await prisma.patch_alias.delete({
     *   where: {
     *     // ... filter to delete one Patch_alias
     *   }
     * })
     * 
     */
    delete<T extends patch_aliasDeleteArgs>(args: SelectSubset<T, patch_aliasDeleteArgs<ExtArgs>>): Prisma__patch_aliasClient<$Result.GetResult<Prisma.$patch_aliasPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one Patch_alias.
     * @param {patch_aliasUpdateArgs} args - Arguments to update one Patch_alias.
     * @example
     * // Update one Patch_alias
     * const patch_alias = await prisma.patch_alias.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends patch_aliasUpdateArgs>(args: SelectSubset<T, patch_aliasUpdateArgs<ExtArgs>>): Prisma__patch_aliasClient<$Result.GetResult<Prisma.$patch_aliasPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more Patch_aliases.
     * @param {patch_aliasDeleteManyArgs} args - Arguments to filter Patch_aliases to delete.
     * @example
     * // Delete a few Patch_aliases
     * const { count } = await prisma.patch_alias.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends patch_aliasDeleteManyArgs>(args?: SelectSubset<T, patch_aliasDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Patch_aliases.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {patch_aliasUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Patch_aliases
     * const patch_alias = await prisma.patch_alias.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends patch_aliasUpdateManyArgs>(args: SelectSubset<T, patch_aliasUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Patch_aliases and returns the data updated in the database.
     * @param {patch_aliasUpdateManyAndReturnArgs} args - Arguments to update many Patch_aliases.
     * @example
     * // Update many Patch_aliases
     * const patch_alias = await prisma.patch_alias.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Patch_aliases and only return the `id`
     * const patch_aliasWithIdOnly = await prisma.patch_alias.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends patch_aliasUpdateManyAndReturnArgs>(args: SelectSubset<T, patch_aliasUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$patch_aliasPayload<ExtArgs>, T, "updateManyAndReturn", ClientOptions>>

    /**
     * Create or update one Patch_alias.
     * @param {patch_aliasUpsertArgs} args - Arguments to update or create a Patch_alias.
     * @example
     * // Update or create a Patch_alias
     * const patch_alias = await prisma.patch_alias.upsert({
     *   create: {
     *     // ... data to create a Patch_alias
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Patch_alias we want to update
     *   }
     * })
     */
    upsert<T extends patch_aliasUpsertArgs>(args: SelectSubset<T, patch_aliasUpsertArgs<ExtArgs>>): Prisma__patch_aliasClient<$Result.GetResult<Prisma.$patch_aliasPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of Patch_aliases.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {patch_aliasCountArgs} args - Arguments to filter Patch_aliases to count.
     * @example
     * // Count the number of Patch_aliases
     * const count = await prisma.patch_alias.count({
     *   where: {
     *     // ... the filter for the Patch_aliases we want to count
     *   }
     * })
    **/
    count<T extends patch_aliasCountArgs>(
      args?: Subset<T, patch_aliasCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Patch_aliasCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Patch_alias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Patch_aliasAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Patch_aliasAggregateArgs>(args: Subset<T, Patch_aliasAggregateArgs>): Prisma.PrismaPromise<GetPatch_aliasAggregateType<T>>

    /**
     * Group by Patch_alias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {patch_aliasGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends patch_aliasGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: patch_aliasGroupByArgs['orderBy'] }
        : { orderBy?: patch_aliasGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, patch_aliasGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPatch_aliasGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the patch_alias model
   */
  readonly fields: patch_aliasFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for patch_alias.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__patch_aliasClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    patch<T extends patchDefaultArgs<ExtArgs> = {}>(args?: Subset<T, patchDefaultArgs<ExtArgs>>): Prisma__patchClient<$Result.GetResult<Prisma.$patchPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | Null, Null, ExtArgs, ClientOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the patch_alias model
   */ 
  interface patch_aliasFieldRefs {
    readonly id: FieldRef<"patch_alias", 'Int'>
    readonly name: FieldRef<"patch_alias", 'String'>
    readonly patch_id: FieldRef<"patch_alias", 'Int'>
    readonly created: FieldRef<"patch_alias", 'DateTime'>
    readonly updated: FieldRef<"patch_alias", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * patch_alias findUnique
   */
  export type patch_aliasFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_alias
     */
    select?: patch_aliasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch_alias
     */
    omit?: patch_aliasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_aliasInclude<ExtArgs> | null
    /**
     * Filter, which patch_alias to fetch.
     */
    where: patch_aliasWhereUniqueInput
  }

  /**
   * patch_alias findUniqueOrThrow
   */
  export type patch_aliasFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_alias
     */
    select?: patch_aliasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch_alias
     */
    omit?: patch_aliasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_aliasInclude<ExtArgs> | null
    /**
     * Filter, which patch_alias to fetch.
     */
    where: patch_aliasWhereUniqueInput
  }

  /**
   * patch_alias findFirst
   */
  export type patch_aliasFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_alias
     */
    select?: patch_aliasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch_alias
     */
    omit?: patch_aliasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_aliasInclude<ExtArgs> | null
    /**
     * Filter, which patch_alias to fetch.
     */
    where?: patch_aliasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of patch_aliases to fetch.
     */
    orderBy?: patch_aliasOrderByWithRelationInput | patch_aliasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for patch_aliases.
     */
    cursor?: patch_aliasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` patch_aliases from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` patch_aliases.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of patch_aliases.
     */
    distinct?: Patch_aliasScalarFieldEnum | Patch_aliasScalarFieldEnum[]
  }

  /**
   * patch_alias findFirstOrThrow
   */
  export type patch_aliasFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_alias
     */
    select?: patch_aliasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch_alias
     */
    omit?: patch_aliasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_aliasInclude<ExtArgs> | null
    /**
     * Filter, which patch_alias to fetch.
     */
    where?: patch_aliasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of patch_aliases to fetch.
     */
    orderBy?: patch_aliasOrderByWithRelationInput | patch_aliasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for patch_aliases.
     */
    cursor?: patch_aliasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` patch_aliases from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` patch_aliases.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of patch_aliases.
     */
    distinct?: Patch_aliasScalarFieldEnum | Patch_aliasScalarFieldEnum[]
  }

  /**
   * patch_alias findMany
   */
  export type patch_aliasFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_alias
     */
    select?: patch_aliasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch_alias
     */
    omit?: patch_aliasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_aliasInclude<ExtArgs> | null
    /**
     * Filter, which patch_aliases to fetch.
     */
    where?: patch_aliasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of patch_aliases to fetch.
     */
    orderBy?: patch_aliasOrderByWithRelationInput | patch_aliasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing patch_aliases.
     */
    cursor?: patch_aliasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` patch_aliases from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` patch_aliases.
     */
    skip?: number
    distinct?: Patch_aliasScalarFieldEnum | Patch_aliasScalarFieldEnum[]
  }

  /**
   * patch_alias create
   */
  export type patch_aliasCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_alias
     */
    select?: patch_aliasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch_alias
     */
    omit?: patch_aliasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_aliasInclude<ExtArgs> | null
    /**
     * The data needed to create a patch_alias.
     */
    data: XOR<patch_aliasCreateInput, patch_aliasUncheckedCreateInput>
  }

  /**
   * patch_alias createMany
   */
  export type patch_aliasCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many patch_aliases.
     */
    data: patch_aliasCreateManyInput | patch_aliasCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * patch_alias createManyAndReturn
   */
  export type patch_aliasCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_alias
     */
    select?: patch_aliasSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the patch_alias
     */
    omit?: patch_aliasOmit<ExtArgs> | null
    /**
     * The data used to create many patch_aliases.
     */
    data: patch_aliasCreateManyInput | patch_aliasCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_aliasIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * patch_alias update
   */
  export type patch_aliasUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_alias
     */
    select?: patch_aliasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch_alias
     */
    omit?: patch_aliasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_aliasInclude<ExtArgs> | null
    /**
     * The data needed to update a patch_alias.
     */
    data: XOR<patch_aliasUpdateInput, patch_aliasUncheckedUpdateInput>
    /**
     * Choose, which patch_alias to update.
     */
    where: patch_aliasWhereUniqueInput
  }

  /**
   * patch_alias updateMany
   */
  export type patch_aliasUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update patch_aliases.
     */
    data: XOR<patch_aliasUpdateManyMutationInput, patch_aliasUncheckedUpdateManyInput>
    /**
     * Filter which patch_aliases to update
     */
    where?: patch_aliasWhereInput
  }

  /**
   * patch_alias updateManyAndReturn
   */
  export type patch_aliasUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_alias
     */
    select?: patch_aliasSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the patch_alias
     */
    omit?: patch_aliasOmit<ExtArgs> | null
    /**
     * The data used to update patch_aliases.
     */
    data: XOR<patch_aliasUpdateManyMutationInput, patch_aliasUncheckedUpdateManyInput>
    /**
     * Filter which patch_aliases to update
     */
    where?: patch_aliasWhereInput
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_aliasIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * patch_alias upsert
   */
  export type patch_aliasUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_alias
     */
    select?: patch_aliasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch_alias
     */
    omit?: patch_aliasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_aliasInclude<ExtArgs> | null
    /**
     * The filter to search for the patch_alias to update in case it exists.
     */
    where: patch_aliasWhereUniqueInput
    /**
     * In case the patch_alias found by the `where` argument doesn't exist, create a new patch_alias with this data.
     */
    create: XOR<patch_aliasCreateInput, patch_aliasUncheckedCreateInput>
    /**
     * In case the patch_alias was found with the provided `where` argument, update it with this data.
     */
    update: XOR<patch_aliasUpdateInput, patch_aliasUncheckedUpdateInput>
  }

  /**
   * patch_alias delete
   */
  export type patch_aliasDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_alias
     */
    select?: patch_aliasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch_alias
     */
    omit?: patch_aliasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_aliasInclude<ExtArgs> | null
    /**
     * Filter which patch_alias to delete.
     */
    where: patch_aliasWhereUniqueInput
  }

  /**
   * patch_alias deleteMany
   */
  export type patch_aliasDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which patch_aliases to delete
     */
    where?: patch_aliasWhereInput
  }

  /**
   * patch_alias without action
   */
  export type patch_aliasDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_alias
     */
    select?: patch_aliasSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch_alias
     */
    omit?: patch_aliasOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_aliasInclude<ExtArgs> | null
  }


  /**
   * Model patch_tag
   */

  export type AggregatePatch_tag = {
    _count: Patch_tagCountAggregateOutputType | null
    _avg: Patch_tagAvgAggregateOutputType | null
    _sum: Patch_tagSumAggregateOutputType | null
    _min: Patch_tagMinAggregateOutputType | null
    _max: Patch_tagMaxAggregateOutputType | null
  }

  export type Patch_tagAvgAggregateOutputType = {
    id: number | null
    count: number | null
    user_id: number | null
  }

  export type Patch_tagSumAggregateOutputType = {
    id: number | null
    count: number | null
    user_id: number | null
  }

  export type Patch_tagMinAggregateOutputType = {
    id: number | null
    name: string | null
    introduction: string | null
    count: number | null
    user_id: number | null
    created: Date | null
    updated: Date | null
  }

  export type Patch_tagMaxAggregateOutputType = {
    id: number | null
    name: string | null
    introduction: string | null
    count: number | null
    user_id: number | null
    created: Date | null
    updated: Date | null
  }

  export type Patch_tagCountAggregateOutputType = {
    id: number
    name: number
    introduction: number
    count: number
    alias: number
    user_id: number
    created: number
    updated: number
    _all: number
  }


  export type Patch_tagAvgAggregateInputType = {
    id?: true
    count?: true
    user_id?: true
  }

  export type Patch_tagSumAggregateInputType = {
    id?: true
    count?: true
    user_id?: true
  }

  export type Patch_tagMinAggregateInputType = {
    id?: true
    name?: true
    introduction?: true
    count?: true
    user_id?: true
    created?: true
    updated?: true
  }

  export type Patch_tagMaxAggregateInputType = {
    id?: true
    name?: true
    introduction?: true
    count?: true
    user_id?: true
    created?: true
    updated?: true
  }

  export type Patch_tagCountAggregateInputType = {
    id?: true
    name?: true
    introduction?: true
    count?: true
    alias?: true
    user_id?: true
    created?: true
    updated?: true
    _all?: true
  }

  export type Patch_tagAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which patch_tag to aggregate.
     */
    where?: patch_tagWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of patch_tags to fetch.
     */
    orderBy?: patch_tagOrderByWithRelationInput | patch_tagOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: patch_tagWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` patch_tags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` patch_tags.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned patch_tags
    **/
    _count?: true | Patch_tagCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Patch_tagAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Patch_tagSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Patch_tagMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Patch_tagMaxAggregateInputType
  }

  export type GetPatch_tagAggregateType<T extends Patch_tagAggregateArgs> = {
        [P in keyof T & keyof AggregatePatch_tag]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePatch_tag[P]>
      : GetScalarType<T[P], AggregatePatch_tag[P]>
  }




  export type patch_tagGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: patch_tagWhereInput
    orderBy?: patch_tagOrderByWithAggregationInput | patch_tagOrderByWithAggregationInput[]
    by: Patch_tagScalarFieldEnum[] | Patch_tagScalarFieldEnum
    having?: patch_tagScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Patch_tagCountAggregateInputType | true
    _avg?: Patch_tagAvgAggregateInputType
    _sum?: Patch_tagSumAggregateInputType
    _min?: Patch_tagMinAggregateInputType
    _max?: Patch_tagMaxAggregateInputType
  }

  export type Patch_tagGroupByOutputType = {
    id: number
    name: string
    introduction: string
    count: number
    alias: string[]
    user_id: number
    created: Date
    updated: Date
    _count: Patch_tagCountAggregateOutputType | null
    _avg: Patch_tagAvgAggregateOutputType | null
    _sum: Patch_tagSumAggregateOutputType | null
    _min: Patch_tagMinAggregateOutputType | null
    _max: Patch_tagMaxAggregateOutputType | null
  }

  type GetPatch_tagGroupByPayload<T extends patch_tagGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Patch_tagGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Patch_tagGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Patch_tagGroupByOutputType[P]>
            : GetScalarType<T[P], Patch_tagGroupByOutputType[P]>
        }
      >
    >


  export type patch_tagSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    introduction?: boolean
    count?: boolean
    alias?: boolean
    user_id?: boolean
    created?: boolean
    updated?: boolean
    patch_relation?: boolean | patch_tag$patch_relationArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
    _count?: boolean | Patch_tagCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["patch_tag"]>

  export type patch_tagSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    introduction?: boolean
    count?: boolean
    alias?: boolean
    user_id?: boolean
    created?: boolean
    updated?: boolean
    user?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["patch_tag"]>

  export type patch_tagSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    introduction?: boolean
    count?: boolean
    alias?: boolean
    user_id?: boolean
    created?: boolean
    updated?: boolean
    user?: boolean | userDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["patch_tag"]>

  export type patch_tagSelectScalar = {
    id?: boolean
    name?: boolean
    introduction?: boolean
    count?: boolean
    alias?: boolean
    user_id?: boolean
    created?: boolean
    updated?: boolean
  }

  export type patch_tagOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "introduction" | "count" | "alias" | "user_id" | "created" | "updated", ExtArgs["result"]["patch_tag"]>
  export type patch_tagInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    patch_relation?: boolean | patch_tag$patch_relationArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
    _count?: boolean | Patch_tagCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type patch_tagIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | userDefaultArgs<ExtArgs>
  }
  export type patch_tagIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | userDefaultArgs<ExtArgs>
  }

  export type $patch_tagPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "patch_tag"
    objects: {
      patch_relation: Prisma.$patch_tag_relationPayload<ExtArgs>[]
      user: Prisma.$userPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      introduction: string
      count: number
      alias: string[]
      user_id: number
      created: Date
      updated: Date
    }, ExtArgs["result"]["patch_tag"]>
    composites: {}
  }

  type patch_tagGetPayload<S extends boolean | null | undefined | patch_tagDefaultArgs> = $Result.GetResult<Prisma.$patch_tagPayload, S>

  type patch_tagCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<patch_tagFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Patch_tagCountAggregateInputType | true
    }

  export interface patch_tagDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['patch_tag'], meta: { name: 'patch_tag' } }
    /**
     * Find zero or one Patch_tag that matches the filter.
     * @param {patch_tagFindUniqueArgs} args - Arguments to find a Patch_tag
     * @example
     * // Get one Patch_tag
     * const patch_tag = await prisma.patch_tag.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends patch_tagFindUniqueArgs>(args: SelectSubset<T, patch_tagFindUniqueArgs<ExtArgs>>): Prisma__patch_tagClient<$Result.GetResult<Prisma.$patch_tagPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one Patch_tag that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {patch_tagFindUniqueOrThrowArgs} args - Arguments to find a Patch_tag
     * @example
     * // Get one Patch_tag
     * const patch_tag = await prisma.patch_tag.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends patch_tagFindUniqueOrThrowArgs>(args: SelectSubset<T, patch_tagFindUniqueOrThrowArgs<ExtArgs>>): Prisma__patch_tagClient<$Result.GetResult<Prisma.$patch_tagPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first Patch_tag that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {patch_tagFindFirstArgs} args - Arguments to find a Patch_tag
     * @example
     * // Get one Patch_tag
     * const patch_tag = await prisma.patch_tag.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends patch_tagFindFirstArgs>(args?: SelectSubset<T, patch_tagFindFirstArgs<ExtArgs>>): Prisma__patch_tagClient<$Result.GetResult<Prisma.$patch_tagPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first Patch_tag that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {patch_tagFindFirstOrThrowArgs} args - Arguments to find a Patch_tag
     * @example
     * // Get one Patch_tag
     * const patch_tag = await prisma.patch_tag.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends patch_tagFindFirstOrThrowArgs>(args?: SelectSubset<T, patch_tagFindFirstOrThrowArgs<ExtArgs>>): Prisma__patch_tagClient<$Result.GetResult<Prisma.$patch_tagPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more Patch_tags that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {patch_tagFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Patch_tags
     * const patch_tags = await prisma.patch_tag.findMany()
     * 
     * // Get first 10 Patch_tags
     * const patch_tags = await prisma.patch_tag.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const patch_tagWithIdOnly = await prisma.patch_tag.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends patch_tagFindManyArgs>(args?: SelectSubset<T, patch_tagFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$patch_tagPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a Patch_tag.
     * @param {patch_tagCreateArgs} args - Arguments to create a Patch_tag.
     * @example
     * // Create one Patch_tag
     * const Patch_tag = await prisma.patch_tag.create({
     *   data: {
     *     // ... data to create a Patch_tag
     *   }
     * })
     * 
     */
    create<T extends patch_tagCreateArgs>(args: SelectSubset<T, patch_tagCreateArgs<ExtArgs>>): Prisma__patch_tagClient<$Result.GetResult<Prisma.$patch_tagPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many Patch_tags.
     * @param {patch_tagCreateManyArgs} args - Arguments to create many Patch_tags.
     * @example
     * // Create many Patch_tags
     * const patch_tag = await prisma.patch_tag.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends patch_tagCreateManyArgs>(args?: SelectSubset<T, patch_tagCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Patch_tags and returns the data saved in the database.
     * @param {patch_tagCreateManyAndReturnArgs} args - Arguments to create many Patch_tags.
     * @example
     * // Create many Patch_tags
     * const patch_tag = await prisma.patch_tag.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Patch_tags and only return the `id`
     * const patch_tagWithIdOnly = await prisma.patch_tag.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends patch_tagCreateManyAndReturnArgs>(args?: SelectSubset<T, patch_tagCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$patch_tagPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a Patch_tag.
     * @param {patch_tagDeleteArgs} args - Arguments to delete one Patch_tag.
     * @example
     * // Delete one Patch_tag
     * const Patch_tag = await prisma.patch_tag.delete({
     *   where: {
     *     // ... filter to delete one Patch_tag
     *   }
     * })
     * 
     */
    delete<T extends patch_tagDeleteArgs>(args: SelectSubset<T, patch_tagDeleteArgs<ExtArgs>>): Prisma__patch_tagClient<$Result.GetResult<Prisma.$patch_tagPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one Patch_tag.
     * @param {patch_tagUpdateArgs} args - Arguments to update one Patch_tag.
     * @example
     * // Update one Patch_tag
     * const patch_tag = await prisma.patch_tag.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends patch_tagUpdateArgs>(args: SelectSubset<T, patch_tagUpdateArgs<ExtArgs>>): Prisma__patch_tagClient<$Result.GetResult<Prisma.$patch_tagPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more Patch_tags.
     * @param {patch_tagDeleteManyArgs} args - Arguments to filter Patch_tags to delete.
     * @example
     * // Delete a few Patch_tags
     * const { count } = await prisma.patch_tag.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends patch_tagDeleteManyArgs>(args?: SelectSubset<T, patch_tagDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Patch_tags.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {patch_tagUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Patch_tags
     * const patch_tag = await prisma.patch_tag.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends patch_tagUpdateManyArgs>(args: SelectSubset<T, patch_tagUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Patch_tags and returns the data updated in the database.
     * @param {patch_tagUpdateManyAndReturnArgs} args - Arguments to update many Patch_tags.
     * @example
     * // Update many Patch_tags
     * const patch_tag = await prisma.patch_tag.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Patch_tags and only return the `id`
     * const patch_tagWithIdOnly = await prisma.patch_tag.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends patch_tagUpdateManyAndReturnArgs>(args: SelectSubset<T, patch_tagUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$patch_tagPayload<ExtArgs>, T, "updateManyAndReturn", ClientOptions>>

    /**
     * Create or update one Patch_tag.
     * @param {patch_tagUpsertArgs} args - Arguments to update or create a Patch_tag.
     * @example
     * // Update or create a Patch_tag
     * const patch_tag = await prisma.patch_tag.upsert({
     *   create: {
     *     // ... data to create a Patch_tag
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Patch_tag we want to update
     *   }
     * })
     */
    upsert<T extends patch_tagUpsertArgs>(args: SelectSubset<T, patch_tagUpsertArgs<ExtArgs>>): Prisma__patch_tagClient<$Result.GetResult<Prisma.$patch_tagPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of Patch_tags.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {patch_tagCountArgs} args - Arguments to filter Patch_tags to count.
     * @example
     * // Count the number of Patch_tags
     * const count = await prisma.patch_tag.count({
     *   where: {
     *     // ... the filter for the Patch_tags we want to count
     *   }
     * })
    **/
    count<T extends patch_tagCountArgs>(
      args?: Subset<T, patch_tagCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Patch_tagCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Patch_tag.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Patch_tagAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Patch_tagAggregateArgs>(args: Subset<T, Patch_tagAggregateArgs>): Prisma.PrismaPromise<GetPatch_tagAggregateType<T>>

    /**
     * Group by Patch_tag.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {patch_tagGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends patch_tagGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: patch_tagGroupByArgs['orderBy'] }
        : { orderBy?: patch_tagGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, patch_tagGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPatch_tagGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the patch_tag model
   */
  readonly fields: patch_tagFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for patch_tag.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__patch_tagClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    patch_relation<T extends patch_tag$patch_relationArgs<ExtArgs> = {}>(args?: Subset<T, patch_tag$patch_relationArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$patch_tag_relationPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    user<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | Null, Null, ExtArgs, ClientOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the patch_tag model
   */ 
  interface patch_tagFieldRefs {
    readonly id: FieldRef<"patch_tag", 'Int'>
    readonly name: FieldRef<"patch_tag", 'String'>
    readonly introduction: FieldRef<"patch_tag", 'String'>
    readonly count: FieldRef<"patch_tag", 'Int'>
    readonly alias: FieldRef<"patch_tag", 'String[]'>
    readonly user_id: FieldRef<"patch_tag", 'Int'>
    readonly created: FieldRef<"patch_tag", 'DateTime'>
    readonly updated: FieldRef<"patch_tag", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * patch_tag findUnique
   */
  export type patch_tagFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_tag
     */
    select?: patch_tagSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch_tag
     */
    omit?: patch_tagOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_tagInclude<ExtArgs> | null
    /**
     * Filter, which patch_tag to fetch.
     */
    where: patch_tagWhereUniqueInput
  }

  /**
   * patch_tag findUniqueOrThrow
   */
  export type patch_tagFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_tag
     */
    select?: patch_tagSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch_tag
     */
    omit?: patch_tagOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_tagInclude<ExtArgs> | null
    /**
     * Filter, which patch_tag to fetch.
     */
    where: patch_tagWhereUniqueInput
  }

  /**
   * patch_tag findFirst
   */
  export type patch_tagFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_tag
     */
    select?: patch_tagSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch_tag
     */
    omit?: patch_tagOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_tagInclude<ExtArgs> | null
    /**
     * Filter, which patch_tag to fetch.
     */
    where?: patch_tagWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of patch_tags to fetch.
     */
    orderBy?: patch_tagOrderByWithRelationInput | patch_tagOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for patch_tags.
     */
    cursor?: patch_tagWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` patch_tags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` patch_tags.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of patch_tags.
     */
    distinct?: Patch_tagScalarFieldEnum | Patch_tagScalarFieldEnum[]
  }

  /**
   * patch_tag findFirstOrThrow
   */
  export type patch_tagFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_tag
     */
    select?: patch_tagSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch_tag
     */
    omit?: patch_tagOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_tagInclude<ExtArgs> | null
    /**
     * Filter, which patch_tag to fetch.
     */
    where?: patch_tagWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of patch_tags to fetch.
     */
    orderBy?: patch_tagOrderByWithRelationInput | patch_tagOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for patch_tags.
     */
    cursor?: patch_tagWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` patch_tags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` patch_tags.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of patch_tags.
     */
    distinct?: Patch_tagScalarFieldEnum | Patch_tagScalarFieldEnum[]
  }

  /**
   * patch_tag findMany
   */
  export type patch_tagFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_tag
     */
    select?: patch_tagSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch_tag
     */
    omit?: patch_tagOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_tagInclude<ExtArgs> | null
    /**
     * Filter, which patch_tags to fetch.
     */
    where?: patch_tagWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of patch_tags to fetch.
     */
    orderBy?: patch_tagOrderByWithRelationInput | patch_tagOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing patch_tags.
     */
    cursor?: patch_tagWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` patch_tags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` patch_tags.
     */
    skip?: number
    distinct?: Patch_tagScalarFieldEnum | Patch_tagScalarFieldEnum[]
  }

  /**
   * patch_tag create
   */
  export type patch_tagCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_tag
     */
    select?: patch_tagSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch_tag
     */
    omit?: patch_tagOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_tagInclude<ExtArgs> | null
    /**
     * The data needed to create a patch_tag.
     */
    data: XOR<patch_tagCreateInput, patch_tagUncheckedCreateInput>
  }

  /**
   * patch_tag createMany
   */
  export type patch_tagCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many patch_tags.
     */
    data: patch_tagCreateManyInput | patch_tagCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * patch_tag createManyAndReturn
   */
  export type patch_tagCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_tag
     */
    select?: patch_tagSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the patch_tag
     */
    omit?: patch_tagOmit<ExtArgs> | null
    /**
     * The data used to create many patch_tags.
     */
    data: patch_tagCreateManyInput | patch_tagCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_tagIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * patch_tag update
   */
  export type patch_tagUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_tag
     */
    select?: patch_tagSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch_tag
     */
    omit?: patch_tagOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_tagInclude<ExtArgs> | null
    /**
     * The data needed to update a patch_tag.
     */
    data: XOR<patch_tagUpdateInput, patch_tagUncheckedUpdateInput>
    /**
     * Choose, which patch_tag to update.
     */
    where: patch_tagWhereUniqueInput
  }

  /**
   * patch_tag updateMany
   */
  export type patch_tagUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update patch_tags.
     */
    data: XOR<patch_tagUpdateManyMutationInput, patch_tagUncheckedUpdateManyInput>
    /**
     * Filter which patch_tags to update
     */
    where?: patch_tagWhereInput
  }

  /**
   * patch_tag updateManyAndReturn
   */
  export type patch_tagUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_tag
     */
    select?: patch_tagSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the patch_tag
     */
    omit?: patch_tagOmit<ExtArgs> | null
    /**
     * The data used to update patch_tags.
     */
    data: XOR<patch_tagUpdateManyMutationInput, patch_tagUncheckedUpdateManyInput>
    /**
     * Filter which patch_tags to update
     */
    where?: patch_tagWhereInput
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_tagIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * patch_tag upsert
   */
  export type patch_tagUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_tag
     */
    select?: patch_tagSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch_tag
     */
    omit?: patch_tagOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_tagInclude<ExtArgs> | null
    /**
     * The filter to search for the patch_tag to update in case it exists.
     */
    where: patch_tagWhereUniqueInput
    /**
     * In case the patch_tag found by the `where` argument doesn't exist, create a new patch_tag with this data.
     */
    create: XOR<patch_tagCreateInput, patch_tagUncheckedCreateInput>
    /**
     * In case the patch_tag was found with the provided `where` argument, update it with this data.
     */
    update: XOR<patch_tagUpdateInput, patch_tagUncheckedUpdateInput>
  }

  /**
   * patch_tag delete
   */
  export type patch_tagDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_tag
     */
    select?: patch_tagSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch_tag
     */
    omit?: patch_tagOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_tagInclude<ExtArgs> | null
    /**
     * Filter which patch_tag to delete.
     */
    where: patch_tagWhereUniqueInput
  }

  /**
   * patch_tag deleteMany
   */
  export type patch_tagDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which patch_tags to delete
     */
    where?: patch_tagWhereInput
  }

  /**
   * patch_tag.patch_relation
   */
  export type patch_tag$patch_relationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_tag_relation
     */
    select?: patch_tag_relationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch_tag_relation
     */
    omit?: patch_tag_relationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_tag_relationInclude<ExtArgs> | null
    where?: patch_tag_relationWhereInput
    orderBy?: patch_tag_relationOrderByWithRelationInput | patch_tag_relationOrderByWithRelationInput[]
    cursor?: patch_tag_relationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Patch_tag_relationScalarFieldEnum | Patch_tag_relationScalarFieldEnum[]
  }

  /**
   * patch_tag without action
   */
  export type patch_tagDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_tag
     */
    select?: patch_tagSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch_tag
     */
    omit?: patch_tagOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_tagInclude<ExtArgs> | null
  }


  /**
   * Model patch_tag_relation
   */

  export type AggregatePatch_tag_relation = {
    _count: Patch_tag_relationCountAggregateOutputType | null
    _avg: Patch_tag_relationAvgAggregateOutputType | null
    _sum: Patch_tag_relationSumAggregateOutputType | null
    _min: Patch_tag_relationMinAggregateOutputType | null
    _max: Patch_tag_relationMaxAggregateOutputType | null
  }

  export type Patch_tag_relationAvgAggregateOutputType = {
    id: number | null
    patch_id: number | null
    tag_id: number | null
  }

  export type Patch_tag_relationSumAggregateOutputType = {
    id: number | null
    patch_id: number | null
    tag_id: number | null
  }

  export type Patch_tag_relationMinAggregateOutputType = {
    id: number | null
    patch_id: number | null
    tag_id: number | null
    created: Date | null
    updated: Date | null
  }

  export type Patch_tag_relationMaxAggregateOutputType = {
    id: number | null
    patch_id: number | null
    tag_id: number | null
    created: Date | null
    updated: Date | null
  }

  export type Patch_tag_relationCountAggregateOutputType = {
    id: number
    patch_id: number
    tag_id: number
    created: number
    updated: number
    _all: number
  }


  export type Patch_tag_relationAvgAggregateInputType = {
    id?: true
    patch_id?: true
    tag_id?: true
  }

  export type Patch_tag_relationSumAggregateInputType = {
    id?: true
    patch_id?: true
    tag_id?: true
  }

  export type Patch_tag_relationMinAggregateInputType = {
    id?: true
    patch_id?: true
    tag_id?: true
    created?: true
    updated?: true
  }

  export type Patch_tag_relationMaxAggregateInputType = {
    id?: true
    patch_id?: true
    tag_id?: true
    created?: true
    updated?: true
  }

  export type Patch_tag_relationCountAggregateInputType = {
    id?: true
    patch_id?: true
    tag_id?: true
    created?: true
    updated?: true
    _all?: true
  }

  export type Patch_tag_relationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which patch_tag_relation to aggregate.
     */
    where?: patch_tag_relationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of patch_tag_relations to fetch.
     */
    orderBy?: patch_tag_relationOrderByWithRelationInput | patch_tag_relationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: patch_tag_relationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` patch_tag_relations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` patch_tag_relations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned patch_tag_relations
    **/
    _count?: true | Patch_tag_relationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Patch_tag_relationAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Patch_tag_relationSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Patch_tag_relationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Patch_tag_relationMaxAggregateInputType
  }

  export type GetPatch_tag_relationAggregateType<T extends Patch_tag_relationAggregateArgs> = {
        [P in keyof T & keyof AggregatePatch_tag_relation]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePatch_tag_relation[P]>
      : GetScalarType<T[P], AggregatePatch_tag_relation[P]>
  }




  export type patch_tag_relationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: patch_tag_relationWhereInput
    orderBy?: patch_tag_relationOrderByWithAggregationInput | patch_tag_relationOrderByWithAggregationInput[]
    by: Patch_tag_relationScalarFieldEnum[] | Patch_tag_relationScalarFieldEnum
    having?: patch_tag_relationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Patch_tag_relationCountAggregateInputType | true
    _avg?: Patch_tag_relationAvgAggregateInputType
    _sum?: Patch_tag_relationSumAggregateInputType
    _min?: Patch_tag_relationMinAggregateInputType
    _max?: Patch_tag_relationMaxAggregateInputType
  }

  export type Patch_tag_relationGroupByOutputType = {
    id: number
    patch_id: number
    tag_id: number
    created: Date
    updated: Date
    _count: Patch_tag_relationCountAggregateOutputType | null
    _avg: Patch_tag_relationAvgAggregateOutputType | null
    _sum: Patch_tag_relationSumAggregateOutputType | null
    _min: Patch_tag_relationMinAggregateOutputType | null
    _max: Patch_tag_relationMaxAggregateOutputType | null
  }

  type GetPatch_tag_relationGroupByPayload<T extends patch_tag_relationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Patch_tag_relationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Patch_tag_relationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Patch_tag_relationGroupByOutputType[P]>
            : GetScalarType<T[P], Patch_tag_relationGroupByOutputType[P]>
        }
      >
    >


  export type patch_tag_relationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    patch_id?: boolean
    tag_id?: boolean
    created?: boolean
    updated?: boolean
    patch?: boolean | patchDefaultArgs<ExtArgs>
    tag?: boolean | patch_tagDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["patch_tag_relation"]>

  export type patch_tag_relationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    patch_id?: boolean
    tag_id?: boolean
    created?: boolean
    updated?: boolean
    patch?: boolean | patchDefaultArgs<ExtArgs>
    tag?: boolean | patch_tagDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["patch_tag_relation"]>

  export type patch_tag_relationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    patch_id?: boolean
    tag_id?: boolean
    created?: boolean
    updated?: boolean
    patch?: boolean | patchDefaultArgs<ExtArgs>
    tag?: boolean | patch_tagDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["patch_tag_relation"]>

  export type patch_tag_relationSelectScalar = {
    id?: boolean
    patch_id?: boolean
    tag_id?: boolean
    created?: boolean
    updated?: boolean
  }

  export type patch_tag_relationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "patch_id" | "tag_id" | "created" | "updated", ExtArgs["result"]["patch_tag_relation"]>
  export type patch_tag_relationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    patch?: boolean | patchDefaultArgs<ExtArgs>
    tag?: boolean | patch_tagDefaultArgs<ExtArgs>
  }
  export type patch_tag_relationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    patch?: boolean | patchDefaultArgs<ExtArgs>
    tag?: boolean | patch_tagDefaultArgs<ExtArgs>
  }
  export type patch_tag_relationIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    patch?: boolean | patchDefaultArgs<ExtArgs>
    tag?: boolean | patch_tagDefaultArgs<ExtArgs>
  }

  export type $patch_tag_relationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "patch_tag_relation"
    objects: {
      patch: Prisma.$patchPayload<ExtArgs>
      tag: Prisma.$patch_tagPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      patch_id: number
      tag_id: number
      created: Date
      updated: Date
    }, ExtArgs["result"]["patch_tag_relation"]>
    composites: {}
  }

  type patch_tag_relationGetPayload<S extends boolean | null | undefined | patch_tag_relationDefaultArgs> = $Result.GetResult<Prisma.$patch_tag_relationPayload, S>

  type patch_tag_relationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<patch_tag_relationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Patch_tag_relationCountAggregateInputType | true
    }

  export interface patch_tag_relationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['patch_tag_relation'], meta: { name: 'patch_tag_relation' } }
    /**
     * Find zero or one Patch_tag_relation that matches the filter.
     * @param {patch_tag_relationFindUniqueArgs} args - Arguments to find a Patch_tag_relation
     * @example
     * // Get one Patch_tag_relation
     * const patch_tag_relation = await prisma.patch_tag_relation.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends patch_tag_relationFindUniqueArgs>(args: SelectSubset<T, patch_tag_relationFindUniqueArgs<ExtArgs>>): Prisma__patch_tag_relationClient<$Result.GetResult<Prisma.$patch_tag_relationPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one Patch_tag_relation that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {patch_tag_relationFindUniqueOrThrowArgs} args - Arguments to find a Patch_tag_relation
     * @example
     * // Get one Patch_tag_relation
     * const patch_tag_relation = await prisma.patch_tag_relation.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends patch_tag_relationFindUniqueOrThrowArgs>(args: SelectSubset<T, patch_tag_relationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__patch_tag_relationClient<$Result.GetResult<Prisma.$patch_tag_relationPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first Patch_tag_relation that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {patch_tag_relationFindFirstArgs} args - Arguments to find a Patch_tag_relation
     * @example
     * // Get one Patch_tag_relation
     * const patch_tag_relation = await prisma.patch_tag_relation.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends patch_tag_relationFindFirstArgs>(args?: SelectSubset<T, patch_tag_relationFindFirstArgs<ExtArgs>>): Prisma__patch_tag_relationClient<$Result.GetResult<Prisma.$patch_tag_relationPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first Patch_tag_relation that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {patch_tag_relationFindFirstOrThrowArgs} args - Arguments to find a Patch_tag_relation
     * @example
     * // Get one Patch_tag_relation
     * const patch_tag_relation = await prisma.patch_tag_relation.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends patch_tag_relationFindFirstOrThrowArgs>(args?: SelectSubset<T, patch_tag_relationFindFirstOrThrowArgs<ExtArgs>>): Prisma__patch_tag_relationClient<$Result.GetResult<Prisma.$patch_tag_relationPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more Patch_tag_relations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {patch_tag_relationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Patch_tag_relations
     * const patch_tag_relations = await prisma.patch_tag_relation.findMany()
     * 
     * // Get first 10 Patch_tag_relations
     * const patch_tag_relations = await prisma.patch_tag_relation.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const patch_tag_relationWithIdOnly = await prisma.patch_tag_relation.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends patch_tag_relationFindManyArgs>(args?: SelectSubset<T, patch_tag_relationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$patch_tag_relationPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a Patch_tag_relation.
     * @param {patch_tag_relationCreateArgs} args - Arguments to create a Patch_tag_relation.
     * @example
     * // Create one Patch_tag_relation
     * const Patch_tag_relation = await prisma.patch_tag_relation.create({
     *   data: {
     *     // ... data to create a Patch_tag_relation
     *   }
     * })
     * 
     */
    create<T extends patch_tag_relationCreateArgs>(args: SelectSubset<T, patch_tag_relationCreateArgs<ExtArgs>>): Prisma__patch_tag_relationClient<$Result.GetResult<Prisma.$patch_tag_relationPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many Patch_tag_relations.
     * @param {patch_tag_relationCreateManyArgs} args - Arguments to create many Patch_tag_relations.
     * @example
     * // Create many Patch_tag_relations
     * const patch_tag_relation = await prisma.patch_tag_relation.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends patch_tag_relationCreateManyArgs>(args?: SelectSubset<T, patch_tag_relationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Patch_tag_relations and returns the data saved in the database.
     * @param {patch_tag_relationCreateManyAndReturnArgs} args - Arguments to create many Patch_tag_relations.
     * @example
     * // Create many Patch_tag_relations
     * const patch_tag_relation = await prisma.patch_tag_relation.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Patch_tag_relations and only return the `id`
     * const patch_tag_relationWithIdOnly = await prisma.patch_tag_relation.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends patch_tag_relationCreateManyAndReturnArgs>(args?: SelectSubset<T, patch_tag_relationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$patch_tag_relationPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a Patch_tag_relation.
     * @param {patch_tag_relationDeleteArgs} args - Arguments to delete one Patch_tag_relation.
     * @example
     * // Delete one Patch_tag_relation
     * const Patch_tag_relation = await prisma.patch_tag_relation.delete({
     *   where: {
     *     // ... filter to delete one Patch_tag_relation
     *   }
     * })
     * 
     */
    delete<T extends patch_tag_relationDeleteArgs>(args: SelectSubset<T, patch_tag_relationDeleteArgs<ExtArgs>>): Prisma__patch_tag_relationClient<$Result.GetResult<Prisma.$patch_tag_relationPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one Patch_tag_relation.
     * @param {patch_tag_relationUpdateArgs} args - Arguments to update one Patch_tag_relation.
     * @example
     * // Update one Patch_tag_relation
     * const patch_tag_relation = await prisma.patch_tag_relation.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends patch_tag_relationUpdateArgs>(args: SelectSubset<T, patch_tag_relationUpdateArgs<ExtArgs>>): Prisma__patch_tag_relationClient<$Result.GetResult<Prisma.$patch_tag_relationPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more Patch_tag_relations.
     * @param {patch_tag_relationDeleteManyArgs} args - Arguments to filter Patch_tag_relations to delete.
     * @example
     * // Delete a few Patch_tag_relations
     * const { count } = await prisma.patch_tag_relation.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends patch_tag_relationDeleteManyArgs>(args?: SelectSubset<T, patch_tag_relationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Patch_tag_relations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {patch_tag_relationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Patch_tag_relations
     * const patch_tag_relation = await prisma.patch_tag_relation.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends patch_tag_relationUpdateManyArgs>(args: SelectSubset<T, patch_tag_relationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Patch_tag_relations and returns the data updated in the database.
     * @param {patch_tag_relationUpdateManyAndReturnArgs} args - Arguments to update many Patch_tag_relations.
     * @example
     * // Update many Patch_tag_relations
     * const patch_tag_relation = await prisma.patch_tag_relation.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Patch_tag_relations and only return the `id`
     * const patch_tag_relationWithIdOnly = await prisma.patch_tag_relation.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends patch_tag_relationUpdateManyAndReturnArgs>(args: SelectSubset<T, patch_tag_relationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$patch_tag_relationPayload<ExtArgs>, T, "updateManyAndReturn", ClientOptions>>

    /**
     * Create or update one Patch_tag_relation.
     * @param {patch_tag_relationUpsertArgs} args - Arguments to update or create a Patch_tag_relation.
     * @example
     * // Update or create a Patch_tag_relation
     * const patch_tag_relation = await prisma.patch_tag_relation.upsert({
     *   create: {
     *     // ... data to create a Patch_tag_relation
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Patch_tag_relation we want to update
     *   }
     * })
     */
    upsert<T extends patch_tag_relationUpsertArgs>(args: SelectSubset<T, patch_tag_relationUpsertArgs<ExtArgs>>): Prisma__patch_tag_relationClient<$Result.GetResult<Prisma.$patch_tag_relationPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of Patch_tag_relations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {patch_tag_relationCountArgs} args - Arguments to filter Patch_tag_relations to count.
     * @example
     * // Count the number of Patch_tag_relations
     * const count = await prisma.patch_tag_relation.count({
     *   where: {
     *     // ... the filter for the Patch_tag_relations we want to count
     *   }
     * })
    **/
    count<T extends patch_tag_relationCountArgs>(
      args?: Subset<T, patch_tag_relationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Patch_tag_relationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Patch_tag_relation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Patch_tag_relationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Patch_tag_relationAggregateArgs>(args: Subset<T, Patch_tag_relationAggregateArgs>): Prisma.PrismaPromise<GetPatch_tag_relationAggregateType<T>>

    /**
     * Group by Patch_tag_relation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {patch_tag_relationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends patch_tag_relationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: patch_tag_relationGroupByArgs['orderBy'] }
        : { orderBy?: patch_tag_relationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, patch_tag_relationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPatch_tag_relationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the patch_tag_relation model
   */
  readonly fields: patch_tag_relationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for patch_tag_relation.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__patch_tag_relationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    patch<T extends patchDefaultArgs<ExtArgs> = {}>(args?: Subset<T, patchDefaultArgs<ExtArgs>>): Prisma__patchClient<$Result.GetResult<Prisma.$patchPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | Null, Null, ExtArgs, ClientOptions>
    tag<T extends patch_tagDefaultArgs<ExtArgs> = {}>(args?: Subset<T, patch_tagDefaultArgs<ExtArgs>>): Prisma__patch_tagClient<$Result.GetResult<Prisma.$patch_tagPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | Null, Null, ExtArgs, ClientOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the patch_tag_relation model
   */ 
  interface patch_tag_relationFieldRefs {
    readonly id: FieldRef<"patch_tag_relation", 'Int'>
    readonly patch_id: FieldRef<"patch_tag_relation", 'Int'>
    readonly tag_id: FieldRef<"patch_tag_relation", 'Int'>
    readonly created: FieldRef<"patch_tag_relation", 'DateTime'>
    readonly updated: FieldRef<"patch_tag_relation", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * patch_tag_relation findUnique
   */
  export type patch_tag_relationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_tag_relation
     */
    select?: patch_tag_relationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch_tag_relation
     */
    omit?: patch_tag_relationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_tag_relationInclude<ExtArgs> | null
    /**
     * Filter, which patch_tag_relation to fetch.
     */
    where: patch_tag_relationWhereUniqueInput
  }

  /**
   * patch_tag_relation findUniqueOrThrow
   */
  export type patch_tag_relationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_tag_relation
     */
    select?: patch_tag_relationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch_tag_relation
     */
    omit?: patch_tag_relationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_tag_relationInclude<ExtArgs> | null
    /**
     * Filter, which patch_tag_relation to fetch.
     */
    where: patch_tag_relationWhereUniqueInput
  }

  /**
   * patch_tag_relation findFirst
   */
  export type patch_tag_relationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_tag_relation
     */
    select?: patch_tag_relationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch_tag_relation
     */
    omit?: patch_tag_relationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_tag_relationInclude<ExtArgs> | null
    /**
     * Filter, which patch_tag_relation to fetch.
     */
    where?: patch_tag_relationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of patch_tag_relations to fetch.
     */
    orderBy?: patch_tag_relationOrderByWithRelationInput | patch_tag_relationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for patch_tag_relations.
     */
    cursor?: patch_tag_relationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` patch_tag_relations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` patch_tag_relations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of patch_tag_relations.
     */
    distinct?: Patch_tag_relationScalarFieldEnum | Patch_tag_relationScalarFieldEnum[]
  }

  /**
   * patch_tag_relation findFirstOrThrow
   */
  export type patch_tag_relationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_tag_relation
     */
    select?: patch_tag_relationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch_tag_relation
     */
    omit?: patch_tag_relationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_tag_relationInclude<ExtArgs> | null
    /**
     * Filter, which patch_tag_relation to fetch.
     */
    where?: patch_tag_relationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of patch_tag_relations to fetch.
     */
    orderBy?: patch_tag_relationOrderByWithRelationInput | patch_tag_relationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for patch_tag_relations.
     */
    cursor?: patch_tag_relationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` patch_tag_relations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` patch_tag_relations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of patch_tag_relations.
     */
    distinct?: Patch_tag_relationScalarFieldEnum | Patch_tag_relationScalarFieldEnum[]
  }

  /**
   * patch_tag_relation findMany
   */
  export type patch_tag_relationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_tag_relation
     */
    select?: patch_tag_relationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch_tag_relation
     */
    omit?: patch_tag_relationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_tag_relationInclude<ExtArgs> | null
    /**
     * Filter, which patch_tag_relations to fetch.
     */
    where?: patch_tag_relationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of patch_tag_relations to fetch.
     */
    orderBy?: patch_tag_relationOrderByWithRelationInput | patch_tag_relationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing patch_tag_relations.
     */
    cursor?: patch_tag_relationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` patch_tag_relations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` patch_tag_relations.
     */
    skip?: number
    distinct?: Patch_tag_relationScalarFieldEnum | Patch_tag_relationScalarFieldEnum[]
  }

  /**
   * patch_tag_relation create
   */
  export type patch_tag_relationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_tag_relation
     */
    select?: patch_tag_relationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch_tag_relation
     */
    omit?: patch_tag_relationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_tag_relationInclude<ExtArgs> | null
    /**
     * The data needed to create a patch_tag_relation.
     */
    data: XOR<patch_tag_relationCreateInput, patch_tag_relationUncheckedCreateInput>
  }

  /**
   * patch_tag_relation createMany
   */
  export type patch_tag_relationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many patch_tag_relations.
     */
    data: patch_tag_relationCreateManyInput | patch_tag_relationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * patch_tag_relation createManyAndReturn
   */
  export type patch_tag_relationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_tag_relation
     */
    select?: patch_tag_relationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the patch_tag_relation
     */
    omit?: patch_tag_relationOmit<ExtArgs> | null
    /**
     * The data used to create many patch_tag_relations.
     */
    data: patch_tag_relationCreateManyInput | patch_tag_relationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_tag_relationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * patch_tag_relation update
   */
  export type patch_tag_relationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_tag_relation
     */
    select?: patch_tag_relationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch_tag_relation
     */
    omit?: patch_tag_relationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_tag_relationInclude<ExtArgs> | null
    /**
     * The data needed to update a patch_tag_relation.
     */
    data: XOR<patch_tag_relationUpdateInput, patch_tag_relationUncheckedUpdateInput>
    /**
     * Choose, which patch_tag_relation to update.
     */
    where: patch_tag_relationWhereUniqueInput
  }

  /**
   * patch_tag_relation updateMany
   */
  export type patch_tag_relationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update patch_tag_relations.
     */
    data: XOR<patch_tag_relationUpdateManyMutationInput, patch_tag_relationUncheckedUpdateManyInput>
    /**
     * Filter which patch_tag_relations to update
     */
    where?: patch_tag_relationWhereInput
  }

  /**
   * patch_tag_relation updateManyAndReturn
   */
  export type patch_tag_relationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_tag_relation
     */
    select?: patch_tag_relationSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the patch_tag_relation
     */
    omit?: patch_tag_relationOmit<ExtArgs> | null
    /**
     * The data used to update patch_tag_relations.
     */
    data: XOR<patch_tag_relationUpdateManyMutationInput, patch_tag_relationUncheckedUpdateManyInput>
    /**
     * Filter which patch_tag_relations to update
     */
    where?: patch_tag_relationWhereInput
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_tag_relationIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * patch_tag_relation upsert
   */
  export type patch_tag_relationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_tag_relation
     */
    select?: patch_tag_relationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch_tag_relation
     */
    omit?: patch_tag_relationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_tag_relationInclude<ExtArgs> | null
    /**
     * The filter to search for the patch_tag_relation to update in case it exists.
     */
    where: patch_tag_relationWhereUniqueInput
    /**
     * In case the patch_tag_relation found by the `where` argument doesn't exist, create a new patch_tag_relation with this data.
     */
    create: XOR<patch_tag_relationCreateInput, patch_tag_relationUncheckedCreateInput>
    /**
     * In case the patch_tag_relation was found with the provided `where` argument, update it with this data.
     */
    update: XOR<patch_tag_relationUpdateInput, patch_tag_relationUncheckedUpdateInput>
  }

  /**
   * patch_tag_relation delete
   */
  export type patch_tag_relationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_tag_relation
     */
    select?: patch_tag_relationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch_tag_relation
     */
    omit?: patch_tag_relationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_tag_relationInclude<ExtArgs> | null
    /**
     * Filter which patch_tag_relation to delete.
     */
    where: patch_tag_relationWhereUniqueInput
  }

  /**
   * patch_tag_relation deleteMany
   */
  export type patch_tag_relationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which patch_tag_relations to delete
     */
    where?: patch_tag_relationWhereInput
  }

  /**
   * patch_tag_relation without action
   */
  export type patch_tag_relationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_tag_relation
     */
    select?: patch_tag_relationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch_tag_relation
     */
    omit?: patch_tag_relationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_tag_relationInclude<ExtArgs> | null
  }


  /**
   * Model patch_resource
   */

  export type AggregatePatch_resource = {
    _count: Patch_resourceCountAggregateOutputType | null
    _avg: Patch_resourceAvgAggregateOutputType | null
    _sum: Patch_resourceSumAggregateOutputType | null
    _min: Patch_resourceMinAggregateOutputType | null
    _max: Patch_resourceMaxAggregateOutputType | null
  }

  export type Patch_resourceAvgAggregateOutputType = {
    id: number | null
    download: number | null
    status: number | null
    user_id: number | null
    patch_id: number | null
  }

  export type Patch_resourceSumAggregateOutputType = {
    id: number | null
    download: number | null
    status: number | null
    user_id: number | null
    patch_id: number | null
  }

  export type Patch_resourceMinAggregateOutputType = {
    id: number | null
    storage: string | null
    section: string | null
    name: string | null
    size: string | null
    code: string | null
    password: string | null
    note: string | null
    hash: string | null
    content: string | null
    download: number | null
    status: number | null
    user_id: number | null
    patch_id: number | null
    created: Date | null
    updated: Date | null
  }

  export type Patch_resourceMaxAggregateOutputType = {
    id: number | null
    storage: string | null
    section: string | null
    name: string | null
    size: string | null
    code: string | null
    password: string | null
    note: string | null
    hash: string | null
    content: string | null
    download: number | null
    status: number | null
    user_id: number | null
    patch_id: number | null
    created: Date | null
    updated: Date | null
  }

  export type Patch_resourceCountAggregateOutputType = {
    id: number
    storage: number
    section: number
    name: number
    size: number
    code: number
    password: number
    note: number
    hash: number
    content: number
    type: number
    language: number
    platform: number
    download: number
    status: number
    user_id: number
    patch_id: number
    created: number
    updated: number
    _all: number
  }


  export type Patch_resourceAvgAggregateInputType = {
    id?: true
    download?: true
    status?: true
    user_id?: true
    patch_id?: true
  }

  export type Patch_resourceSumAggregateInputType = {
    id?: true
    download?: true
    status?: true
    user_id?: true
    patch_id?: true
  }

  export type Patch_resourceMinAggregateInputType = {
    id?: true
    storage?: true
    section?: true
    name?: true
    size?: true
    code?: true
    password?: true
    note?: true
    hash?: true
    content?: true
    download?: true
    status?: true
    user_id?: true
    patch_id?: true
    created?: true
    updated?: true
  }

  export type Patch_resourceMaxAggregateInputType = {
    id?: true
    storage?: true
    section?: true
    name?: true
    size?: true
    code?: true
    password?: true
    note?: true
    hash?: true
    content?: true
    download?: true
    status?: true
    user_id?: true
    patch_id?: true
    created?: true
    updated?: true
  }

  export type Patch_resourceCountAggregateInputType = {
    id?: true
    storage?: true
    section?: true
    name?: true
    size?: true
    code?: true
    password?: true
    note?: true
    hash?: true
    content?: true
    type?: true
    language?: true
    platform?: true
    download?: true
    status?: true
    user_id?: true
    patch_id?: true
    created?: true
    updated?: true
    _all?: true
  }

  export type Patch_resourceAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which patch_resource to aggregate.
     */
    where?: patch_resourceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of patch_resources to fetch.
     */
    orderBy?: patch_resourceOrderByWithRelationInput | patch_resourceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: patch_resourceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` patch_resources from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` patch_resources.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned patch_resources
    **/
    _count?: true | Patch_resourceCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Patch_resourceAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Patch_resourceSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Patch_resourceMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Patch_resourceMaxAggregateInputType
  }

  export type GetPatch_resourceAggregateType<T extends Patch_resourceAggregateArgs> = {
        [P in keyof T & keyof AggregatePatch_resource]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePatch_resource[P]>
      : GetScalarType<T[P], AggregatePatch_resource[P]>
  }




  export type patch_resourceGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: patch_resourceWhereInput
    orderBy?: patch_resourceOrderByWithAggregationInput | patch_resourceOrderByWithAggregationInput[]
    by: Patch_resourceScalarFieldEnum[] | Patch_resourceScalarFieldEnum
    having?: patch_resourceScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Patch_resourceCountAggregateInputType | true
    _avg?: Patch_resourceAvgAggregateInputType
    _sum?: Patch_resourceSumAggregateInputType
    _min?: Patch_resourceMinAggregateInputType
    _max?: Patch_resourceMaxAggregateInputType
  }

  export type Patch_resourceGroupByOutputType = {
    id: number
    storage: string
    section: string
    name: string
    size: string
    code: string
    password: string
    note: string
    hash: string
    content: string
    type: string[]
    language: string[]
    platform: string[]
    download: number
    status: number
    user_id: number
    patch_id: number
    created: Date
    updated: Date
    _count: Patch_resourceCountAggregateOutputType | null
    _avg: Patch_resourceAvgAggregateOutputType | null
    _sum: Patch_resourceSumAggregateOutputType | null
    _min: Patch_resourceMinAggregateOutputType | null
    _max: Patch_resourceMaxAggregateOutputType | null
  }

  type GetPatch_resourceGroupByPayload<T extends patch_resourceGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Patch_resourceGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Patch_resourceGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Patch_resourceGroupByOutputType[P]>
            : GetScalarType<T[P], Patch_resourceGroupByOutputType[P]>
        }
      >
    >


  export type patch_resourceSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    storage?: boolean
    section?: boolean
    name?: boolean
    size?: boolean
    code?: boolean
    password?: boolean
    note?: boolean
    hash?: boolean
    content?: boolean
    type?: boolean
    language?: boolean
    platform?: boolean
    download?: boolean
    status?: boolean
    user_id?: boolean
    patch_id?: boolean
    created?: boolean
    updated?: boolean
    like_by?: boolean | patch_resource$like_byArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
    patch?: boolean | patchDefaultArgs<ExtArgs>
    _count?: boolean | Patch_resourceCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["patch_resource"]>

  export type patch_resourceSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    storage?: boolean
    section?: boolean
    name?: boolean
    size?: boolean
    code?: boolean
    password?: boolean
    note?: boolean
    hash?: boolean
    content?: boolean
    type?: boolean
    language?: boolean
    platform?: boolean
    download?: boolean
    status?: boolean
    user_id?: boolean
    patch_id?: boolean
    created?: boolean
    updated?: boolean
    user?: boolean | userDefaultArgs<ExtArgs>
    patch?: boolean | patchDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["patch_resource"]>

  export type patch_resourceSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    storage?: boolean
    section?: boolean
    name?: boolean
    size?: boolean
    code?: boolean
    password?: boolean
    note?: boolean
    hash?: boolean
    content?: boolean
    type?: boolean
    language?: boolean
    platform?: boolean
    download?: boolean
    status?: boolean
    user_id?: boolean
    patch_id?: boolean
    created?: boolean
    updated?: boolean
    user?: boolean | userDefaultArgs<ExtArgs>
    patch?: boolean | patchDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["patch_resource"]>

  export type patch_resourceSelectScalar = {
    id?: boolean
    storage?: boolean
    section?: boolean
    name?: boolean
    size?: boolean
    code?: boolean
    password?: boolean
    note?: boolean
    hash?: boolean
    content?: boolean
    type?: boolean
    language?: boolean
    platform?: boolean
    download?: boolean
    status?: boolean
    user_id?: boolean
    patch_id?: boolean
    created?: boolean
    updated?: boolean
  }

  export type patch_resourceOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "storage" | "section" | "name" | "size" | "code" | "password" | "note" | "hash" | "content" | "type" | "language" | "platform" | "download" | "status" | "user_id" | "patch_id" | "created" | "updated", ExtArgs["result"]["patch_resource"]>
  export type patch_resourceInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    like_by?: boolean | patch_resource$like_byArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
    patch?: boolean | patchDefaultArgs<ExtArgs>
    _count?: boolean | Patch_resourceCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type patch_resourceIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | userDefaultArgs<ExtArgs>
    patch?: boolean | patchDefaultArgs<ExtArgs>
  }
  export type patch_resourceIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | userDefaultArgs<ExtArgs>
    patch?: boolean | patchDefaultArgs<ExtArgs>
  }

  export type $patch_resourcePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "patch_resource"
    objects: {
      like_by: Prisma.$user_patch_resource_like_relationPayload<ExtArgs>[]
      user: Prisma.$userPayload<ExtArgs>
      patch: Prisma.$patchPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      storage: string
      section: string
      name: string
      size: string
      code: string
      password: string
      note: string
      hash: string
      content: string
      type: string[]
      language: string[]
      platform: string[]
      download: number
      status: number
      user_id: number
      patch_id: number
      created: Date
      updated: Date
    }, ExtArgs["result"]["patch_resource"]>
    composites: {}
  }

  type patch_resourceGetPayload<S extends boolean | null | undefined | patch_resourceDefaultArgs> = $Result.GetResult<Prisma.$patch_resourcePayload, S>

  type patch_resourceCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<patch_resourceFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Patch_resourceCountAggregateInputType | true
    }

  export interface patch_resourceDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['patch_resource'], meta: { name: 'patch_resource' } }
    /**
     * Find zero or one Patch_resource that matches the filter.
     * @param {patch_resourceFindUniqueArgs} args - Arguments to find a Patch_resource
     * @example
     * // Get one Patch_resource
     * const patch_resource = await prisma.patch_resource.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends patch_resourceFindUniqueArgs>(args: SelectSubset<T, patch_resourceFindUniqueArgs<ExtArgs>>): Prisma__patch_resourceClient<$Result.GetResult<Prisma.$patch_resourcePayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one Patch_resource that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {patch_resourceFindUniqueOrThrowArgs} args - Arguments to find a Patch_resource
     * @example
     * // Get one Patch_resource
     * const patch_resource = await prisma.patch_resource.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends patch_resourceFindUniqueOrThrowArgs>(args: SelectSubset<T, patch_resourceFindUniqueOrThrowArgs<ExtArgs>>): Prisma__patch_resourceClient<$Result.GetResult<Prisma.$patch_resourcePayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first Patch_resource that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {patch_resourceFindFirstArgs} args - Arguments to find a Patch_resource
     * @example
     * // Get one Patch_resource
     * const patch_resource = await prisma.patch_resource.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends patch_resourceFindFirstArgs>(args?: SelectSubset<T, patch_resourceFindFirstArgs<ExtArgs>>): Prisma__patch_resourceClient<$Result.GetResult<Prisma.$patch_resourcePayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first Patch_resource that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {patch_resourceFindFirstOrThrowArgs} args - Arguments to find a Patch_resource
     * @example
     * // Get one Patch_resource
     * const patch_resource = await prisma.patch_resource.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends patch_resourceFindFirstOrThrowArgs>(args?: SelectSubset<T, patch_resourceFindFirstOrThrowArgs<ExtArgs>>): Prisma__patch_resourceClient<$Result.GetResult<Prisma.$patch_resourcePayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more Patch_resources that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {patch_resourceFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Patch_resources
     * const patch_resources = await prisma.patch_resource.findMany()
     * 
     * // Get first 10 Patch_resources
     * const patch_resources = await prisma.patch_resource.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const patch_resourceWithIdOnly = await prisma.patch_resource.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends patch_resourceFindManyArgs>(args?: SelectSubset<T, patch_resourceFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$patch_resourcePayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a Patch_resource.
     * @param {patch_resourceCreateArgs} args - Arguments to create a Patch_resource.
     * @example
     * // Create one Patch_resource
     * const Patch_resource = await prisma.patch_resource.create({
     *   data: {
     *     // ... data to create a Patch_resource
     *   }
     * })
     * 
     */
    create<T extends patch_resourceCreateArgs>(args: SelectSubset<T, patch_resourceCreateArgs<ExtArgs>>): Prisma__patch_resourceClient<$Result.GetResult<Prisma.$patch_resourcePayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many Patch_resources.
     * @param {patch_resourceCreateManyArgs} args - Arguments to create many Patch_resources.
     * @example
     * // Create many Patch_resources
     * const patch_resource = await prisma.patch_resource.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends patch_resourceCreateManyArgs>(args?: SelectSubset<T, patch_resourceCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Patch_resources and returns the data saved in the database.
     * @param {patch_resourceCreateManyAndReturnArgs} args - Arguments to create many Patch_resources.
     * @example
     * // Create many Patch_resources
     * const patch_resource = await prisma.patch_resource.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Patch_resources and only return the `id`
     * const patch_resourceWithIdOnly = await prisma.patch_resource.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends patch_resourceCreateManyAndReturnArgs>(args?: SelectSubset<T, patch_resourceCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$patch_resourcePayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a Patch_resource.
     * @param {patch_resourceDeleteArgs} args - Arguments to delete one Patch_resource.
     * @example
     * // Delete one Patch_resource
     * const Patch_resource = await prisma.patch_resource.delete({
     *   where: {
     *     // ... filter to delete one Patch_resource
     *   }
     * })
     * 
     */
    delete<T extends patch_resourceDeleteArgs>(args: SelectSubset<T, patch_resourceDeleteArgs<ExtArgs>>): Prisma__patch_resourceClient<$Result.GetResult<Prisma.$patch_resourcePayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one Patch_resource.
     * @param {patch_resourceUpdateArgs} args - Arguments to update one Patch_resource.
     * @example
     * // Update one Patch_resource
     * const patch_resource = await prisma.patch_resource.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends patch_resourceUpdateArgs>(args: SelectSubset<T, patch_resourceUpdateArgs<ExtArgs>>): Prisma__patch_resourceClient<$Result.GetResult<Prisma.$patch_resourcePayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more Patch_resources.
     * @param {patch_resourceDeleteManyArgs} args - Arguments to filter Patch_resources to delete.
     * @example
     * // Delete a few Patch_resources
     * const { count } = await prisma.patch_resource.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends patch_resourceDeleteManyArgs>(args?: SelectSubset<T, patch_resourceDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Patch_resources.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {patch_resourceUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Patch_resources
     * const patch_resource = await prisma.patch_resource.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends patch_resourceUpdateManyArgs>(args: SelectSubset<T, patch_resourceUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Patch_resources and returns the data updated in the database.
     * @param {patch_resourceUpdateManyAndReturnArgs} args - Arguments to update many Patch_resources.
     * @example
     * // Update many Patch_resources
     * const patch_resource = await prisma.patch_resource.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Patch_resources and only return the `id`
     * const patch_resourceWithIdOnly = await prisma.patch_resource.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends patch_resourceUpdateManyAndReturnArgs>(args: SelectSubset<T, patch_resourceUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$patch_resourcePayload<ExtArgs>, T, "updateManyAndReturn", ClientOptions>>

    /**
     * Create or update one Patch_resource.
     * @param {patch_resourceUpsertArgs} args - Arguments to update or create a Patch_resource.
     * @example
     * // Update or create a Patch_resource
     * const patch_resource = await prisma.patch_resource.upsert({
     *   create: {
     *     // ... data to create a Patch_resource
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Patch_resource we want to update
     *   }
     * })
     */
    upsert<T extends patch_resourceUpsertArgs>(args: SelectSubset<T, patch_resourceUpsertArgs<ExtArgs>>): Prisma__patch_resourceClient<$Result.GetResult<Prisma.$patch_resourcePayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of Patch_resources.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {patch_resourceCountArgs} args - Arguments to filter Patch_resources to count.
     * @example
     * // Count the number of Patch_resources
     * const count = await prisma.patch_resource.count({
     *   where: {
     *     // ... the filter for the Patch_resources we want to count
     *   }
     * })
    **/
    count<T extends patch_resourceCountArgs>(
      args?: Subset<T, patch_resourceCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Patch_resourceCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Patch_resource.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Patch_resourceAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Patch_resourceAggregateArgs>(args: Subset<T, Patch_resourceAggregateArgs>): Prisma.PrismaPromise<GetPatch_resourceAggregateType<T>>

    /**
     * Group by Patch_resource.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {patch_resourceGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends patch_resourceGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: patch_resourceGroupByArgs['orderBy'] }
        : { orderBy?: patch_resourceGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, patch_resourceGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPatch_resourceGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the patch_resource model
   */
  readonly fields: patch_resourceFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for patch_resource.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__patch_resourceClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    like_by<T extends patch_resource$like_byArgs<ExtArgs> = {}>(args?: Subset<T, patch_resource$like_byArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_patch_resource_like_relationPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    user<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | Null, Null, ExtArgs, ClientOptions>
    patch<T extends patchDefaultArgs<ExtArgs> = {}>(args?: Subset<T, patchDefaultArgs<ExtArgs>>): Prisma__patchClient<$Result.GetResult<Prisma.$patchPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | Null, Null, ExtArgs, ClientOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the patch_resource model
   */ 
  interface patch_resourceFieldRefs {
    readonly id: FieldRef<"patch_resource", 'Int'>
    readonly storage: FieldRef<"patch_resource", 'String'>
    readonly section: FieldRef<"patch_resource", 'String'>
    readonly name: FieldRef<"patch_resource", 'String'>
    readonly size: FieldRef<"patch_resource", 'String'>
    readonly code: FieldRef<"patch_resource", 'String'>
    readonly password: FieldRef<"patch_resource", 'String'>
    readonly note: FieldRef<"patch_resource", 'String'>
    readonly hash: FieldRef<"patch_resource", 'String'>
    readonly content: FieldRef<"patch_resource", 'String'>
    readonly type: FieldRef<"patch_resource", 'String[]'>
    readonly language: FieldRef<"patch_resource", 'String[]'>
    readonly platform: FieldRef<"patch_resource", 'String[]'>
    readonly download: FieldRef<"patch_resource", 'Int'>
    readonly status: FieldRef<"patch_resource", 'Int'>
    readonly user_id: FieldRef<"patch_resource", 'Int'>
    readonly patch_id: FieldRef<"patch_resource", 'Int'>
    readonly created: FieldRef<"patch_resource", 'DateTime'>
    readonly updated: FieldRef<"patch_resource", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * patch_resource findUnique
   */
  export type patch_resourceFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_resource
     */
    select?: patch_resourceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch_resource
     */
    omit?: patch_resourceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_resourceInclude<ExtArgs> | null
    /**
     * Filter, which patch_resource to fetch.
     */
    where: patch_resourceWhereUniqueInput
  }

  /**
   * patch_resource findUniqueOrThrow
   */
  export type patch_resourceFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_resource
     */
    select?: patch_resourceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch_resource
     */
    omit?: patch_resourceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_resourceInclude<ExtArgs> | null
    /**
     * Filter, which patch_resource to fetch.
     */
    where: patch_resourceWhereUniqueInput
  }

  /**
   * patch_resource findFirst
   */
  export type patch_resourceFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_resource
     */
    select?: patch_resourceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch_resource
     */
    omit?: patch_resourceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_resourceInclude<ExtArgs> | null
    /**
     * Filter, which patch_resource to fetch.
     */
    where?: patch_resourceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of patch_resources to fetch.
     */
    orderBy?: patch_resourceOrderByWithRelationInput | patch_resourceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for patch_resources.
     */
    cursor?: patch_resourceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` patch_resources from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` patch_resources.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of patch_resources.
     */
    distinct?: Patch_resourceScalarFieldEnum | Patch_resourceScalarFieldEnum[]
  }

  /**
   * patch_resource findFirstOrThrow
   */
  export type patch_resourceFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_resource
     */
    select?: patch_resourceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch_resource
     */
    omit?: patch_resourceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_resourceInclude<ExtArgs> | null
    /**
     * Filter, which patch_resource to fetch.
     */
    where?: patch_resourceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of patch_resources to fetch.
     */
    orderBy?: patch_resourceOrderByWithRelationInput | patch_resourceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for patch_resources.
     */
    cursor?: patch_resourceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` patch_resources from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` patch_resources.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of patch_resources.
     */
    distinct?: Patch_resourceScalarFieldEnum | Patch_resourceScalarFieldEnum[]
  }

  /**
   * patch_resource findMany
   */
  export type patch_resourceFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_resource
     */
    select?: patch_resourceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch_resource
     */
    omit?: patch_resourceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_resourceInclude<ExtArgs> | null
    /**
     * Filter, which patch_resources to fetch.
     */
    where?: patch_resourceWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of patch_resources to fetch.
     */
    orderBy?: patch_resourceOrderByWithRelationInput | patch_resourceOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing patch_resources.
     */
    cursor?: patch_resourceWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` patch_resources from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` patch_resources.
     */
    skip?: number
    distinct?: Patch_resourceScalarFieldEnum | Patch_resourceScalarFieldEnum[]
  }

  /**
   * patch_resource create
   */
  export type patch_resourceCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_resource
     */
    select?: patch_resourceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch_resource
     */
    omit?: patch_resourceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_resourceInclude<ExtArgs> | null
    /**
     * The data needed to create a patch_resource.
     */
    data: XOR<patch_resourceCreateInput, patch_resourceUncheckedCreateInput>
  }

  /**
   * patch_resource createMany
   */
  export type patch_resourceCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many patch_resources.
     */
    data: patch_resourceCreateManyInput | patch_resourceCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * patch_resource createManyAndReturn
   */
  export type patch_resourceCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_resource
     */
    select?: patch_resourceSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the patch_resource
     */
    omit?: patch_resourceOmit<ExtArgs> | null
    /**
     * The data used to create many patch_resources.
     */
    data: patch_resourceCreateManyInput | patch_resourceCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_resourceIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * patch_resource update
   */
  export type patch_resourceUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_resource
     */
    select?: patch_resourceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch_resource
     */
    omit?: patch_resourceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_resourceInclude<ExtArgs> | null
    /**
     * The data needed to update a patch_resource.
     */
    data: XOR<patch_resourceUpdateInput, patch_resourceUncheckedUpdateInput>
    /**
     * Choose, which patch_resource to update.
     */
    where: patch_resourceWhereUniqueInput
  }

  /**
   * patch_resource updateMany
   */
  export type patch_resourceUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update patch_resources.
     */
    data: XOR<patch_resourceUpdateManyMutationInput, patch_resourceUncheckedUpdateManyInput>
    /**
     * Filter which patch_resources to update
     */
    where?: patch_resourceWhereInput
  }

  /**
   * patch_resource updateManyAndReturn
   */
  export type patch_resourceUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_resource
     */
    select?: patch_resourceSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the patch_resource
     */
    omit?: patch_resourceOmit<ExtArgs> | null
    /**
     * The data used to update patch_resources.
     */
    data: XOR<patch_resourceUpdateManyMutationInput, patch_resourceUncheckedUpdateManyInput>
    /**
     * Filter which patch_resources to update
     */
    where?: patch_resourceWhereInput
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_resourceIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * patch_resource upsert
   */
  export type patch_resourceUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_resource
     */
    select?: patch_resourceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch_resource
     */
    omit?: patch_resourceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_resourceInclude<ExtArgs> | null
    /**
     * The filter to search for the patch_resource to update in case it exists.
     */
    where: patch_resourceWhereUniqueInput
    /**
     * In case the patch_resource found by the `where` argument doesn't exist, create a new patch_resource with this data.
     */
    create: XOR<patch_resourceCreateInput, patch_resourceUncheckedCreateInput>
    /**
     * In case the patch_resource was found with the provided `where` argument, update it with this data.
     */
    update: XOR<patch_resourceUpdateInput, patch_resourceUncheckedUpdateInput>
  }

  /**
   * patch_resource delete
   */
  export type patch_resourceDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_resource
     */
    select?: patch_resourceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch_resource
     */
    omit?: patch_resourceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_resourceInclude<ExtArgs> | null
    /**
     * Filter which patch_resource to delete.
     */
    where: patch_resourceWhereUniqueInput
  }

  /**
   * patch_resource deleteMany
   */
  export type patch_resourceDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which patch_resources to delete
     */
    where?: patch_resourceWhereInput
  }

  /**
   * patch_resource.like_by
   */
  export type patch_resource$like_byArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_patch_resource_like_relation
     */
    select?: user_patch_resource_like_relationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_patch_resource_like_relation
     */
    omit?: user_patch_resource_like_relationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_patch_resource_like_relationInclude<ExtArgs> | null
    where?: user_patch_resource_like_relationWhereInput
    orderBy?: user_patch_resource_like_relationOrderByWithRelationInput | user_patch_resource_like_relationOrderByWithRelationInput[]
    cursor?: user_patch_resource_like_relationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: User_patch_resource_like_relationScalarFieldEnum | User_patch_resource_like_relationScalarFieldEnum[]
  }

  /**
   * patch_resource without action
   */
  export type patch_resourceDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_resource
     */
    select?: patch_resourceSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch_resource
     */
    omit?: patch_resourceOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_resourceInclude<ExtArgs> | null
  }


  /**
   * Model patch_comment
   */

  export type AggregatePatch_comment = {
    _count: Patch_commentCountAggregateOutputType | null
    _avg: Patch_commentAvgAggregateOutputType | null
    _sum: Patch_commentSumAggregateOutputType | null
    _min: Patch_commentMinAggregateOutputType | null
    _max: Patch_commentMaxAggregateOutputType | null
  }

  export type Patch_commentAvgAggregateOutputType = {
    id: number | null
    parent_id: number | null
    user_id: number | null
    patch_id: number | null
  }

  export type Patch_commentSumAggregateOutputType = {
    id: number | null
    parent_id: number | null
    user_id: number | null
    patch_id: number | null
  }

  export type Patch_commentMinAggregateOutputType = {
    id: number | null
    content: string | null
    edit: string | null
    parent_id: number | null
    user_id: number | null
    patch_id: number | null
    created: Date | null
    updated: Date | null
  }

  export type Patch_commentMaxAggregateOutputType = {
    id: number | null
    content: string | null
    edit: string | null
    parent_id: number | null
    user_id: number | null
    patch_id: number | null
    created: Date | null
    updated: Date | null
  }

  export type Patch_commentCountAggregateOutputType = {
    id: number
    content: number
    edit: number
    parent_id: number
    user_id: number
    patch_id: number
    created: number
    updated: number
    _all: number
  }


  export type Patch_commentAvgAggregateInputType = {
    id?: true
    parent_id?: true
    user_id?: true
    patch_id?: true
  }

  export type Patch_commentSumAggregateInputType = {
    id?: true
    parent_id?: true
    user_id?: true
    patch_id?: true
  }

  export type Patch_commentMinAggregateInputType = {
    id?: true
    content?: true
    edit?: true
    parent_id?: true
    user_id?: true
    patch_id?: true
    created?: true
    updated?: true
  }

  export type Patch_commentMaxAggregateInputType = {
    id?: true
    content?: true
    edit?: true
    parent_id?: true
    user_id?: true
    patch_id?: true
    created?: true
    updated?: true
  }

  export type Patch_commentCountAggregateInputType = {
    id?: true
    content?: true
    edit?: true
    parent_id?: true
    user_id?: true
    patch_id?: true
    created?: true
    updated?: true
    _all?: true
  }

  export type Patch_commentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which patch_comment to aggregate.
     */
    where?: patch_commentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of patch_comments to fetch.
     */
    orderBy?: patch_commentOrderByWithRelationInput | patch_commentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: patch_commentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` patch_comments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` patch_comments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned patch_comments
    **/
    _count?: true | Patch_commentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Patch_commentAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Patch_commentSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Patch_commentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Patch_commentMaxAggregateInputType
  }

  export type GetPatch_commentAggregateType<T extends Patch_commentAggregateArgs> = {
        [P in keyof T & keyof AggregatePatch_comment]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePatch_comment[P]>
      : GetScalarType<T[P], AggregatePatch_comment[P]>
  }




  export type patch_commentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: patch_commentWhereInput
    orderBy?: patch_commentOrderByWithAggregationInput | patch_commentOrderByWithAggregationInput[]
    by: Patch_commentScalarFieldEnum[] | Patch_commentScalarFieldEnum
    having?: patch_commentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Patch_commentCountAggregateInputType | true
    _avg?: Patch_commentAvgAggregateInputType
    _sum?: Patch_commentSumAggregateInputType
    _min?: Patch_commentMinAggregateInputType
    _max?: Patch_commentMaxAggregateInputType
  }

  export type Patch_commentGroupByOutputType = {
    id: number
    content: string
    edit: string
    parent_id: number | null
    user_id: number
    patch_id: number
    created: Date
    updated: Date
    _count: Patch_commentCountAggregateOutputType | null
    _avg: Patch_commentAvgAggregateOutputType | null
    _sum: Patch_commentSumAggregateOutputType | null
    _min: Patch_commentMinAggregateOutputType | null
    _max: Patch_commentMaxAggregateOutputType | null
  }

  type GetPatch_commentGroupByPayload<T extends patch_commentGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Patch_commentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Patch_commentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Patch_commentGroupByOutputType[P]>
            : GetScalarType<T[P], Patch_commentGroupByOutputType[P]>
        }
      >
    >


  export type patch_commentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    content?: boolean
    edit?: boolean
    parent_id?: boolean
    user_id?: boolean
    patch_id?: boolean
    created?: boolean
    updated?: boolean
    like_by?: boolean | patch_comment$like_byArgs<ExtArgs>
    reply?: boolean | patch_comment$replyArgs<ExtArgs>
    parent?: boolean | patch_comment$parentArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
    patch?: boolean | patchDefaultArgs<ExtArgs>
    _count?: boolean | Patch_commentCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["patch_comment"]>

  export type patch_commentSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    content?: boolean
    edit?: boolean
    parent_id?: boolean
    user_id?: boolean
    patch_id?: boolean
    created?: boolean
    updated?: boolean
    parent?: boolean | patch_comment$parentArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
    patch?: boolean | patchDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["patch_comment"]>

  export type patch_commentSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    content?: boolean
    edit?: boolean
    parent_id?: boolean
    user_id?: boolean
    patch_id?: boolean
    created?: boolean
    updated?: boolean
    parent?: boolean | patch_comment$parentArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
    patch?: boolean | patchDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["patch_comment"]>

  export type patch_commentSelectScalar = {
    id?: boolean
    content?: boolean
    edit?: boolean
    parent_id?: boolean
    user_id?: boolean
    patch_id?: boolean
    created?: boolean
    updated?: boolean
  }

  export type patch_commentOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "content" | "edit" | "parent_id" | "user_id" | "patch_id" | "created" | "updated", ExtArgs["result"]["patch_comment"]>
  export type patch_commentInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    like_by?: boolean | patch_comment$like_byArgs<ExtArgs>
    reply?: boolean | patch_comment$replyArgs<ExtArgs>
    parent?: boolean | patch_comment$parentArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
    patch?: boolean | patchDefaultArgs<ExtArgs>
    _count?: boolean | Patch_commentCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type patch_commentIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    parent?: boolean | patch_comment$parentArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
    patch?: boolean | patchDefaultArgs<ExtArgs>
  }
  export type patch_commentIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    parent?: boolean | patch_comment$parentArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
    patch?: boolean | patchDefaultArgs<ExtArgs>
  }

  export type $patch_commentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "patch_comment"
    objects: {
      like_by: Prisma.$user_patch_comment_like_relationPayload<ExtArgs>[]
      reply: Prisma.$patch_commentPayload<ExtArgs>[]
      parent: Prisma.$patch_commentPayload<ExtArgs> | null
      user: Prisma.$userPayload<ExtArgs>
      patch: Prisma.$patchPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      content: string
      edit: string
      parent_id: number | null
      user_id: number
      patch_id: number
      created: Date
      updated: Date
    }, ExtArgs["result"]["patch_comment"]>
    composites: {}
  }

  type patch_commentGetPayload<S extends boolean | null | undefined | patch_commentDefaultArgs> = $Result.GetResult<Prisma.$patch_commentPayload, S>

  type patch_commentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<patch_commentFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Patch_commentCountAggregateInputType | true
    }

  export interface patch_commentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['patch_comment'], meta: { name: 'patch_comment' } }
    /**
     * Find zero or one Patch_comment that matches the filter.
     * @param {patch_commentFindUniqueArgs} args - Arguments to find a Patch_comment
     * @example
     * // Get one Patch_comment
     * const patch_comment = await prisma.patch_comment.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends patch_commentFindUniqueArgs>(args: SelectSubset<T, patch_commentFindUniqueArgs<ExtArgs>>): Prisma__patch_commentClient<$Result.GetResult<Prisma.$patch_commentPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one Patch_comment that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {patch_commentFindUniqueOrThrowArgs} args - Arguments to find a Patch_comment
     * @example
     * // Get one Patch_comment
     * const patch_comment = await prisma.patch_comment.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends patch_commentFindUniqueOrThrowArgs>(args: SelectSubset<T, patch_commentFindUniqueOrThrowArgs<ExtArgs>>): Prisma__patch_commentClient<$Result.GetResult<Prisma.$patch_commentPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first Patch_comment that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {patch_commentFindFirstArgs} args - Arguments to find a Patch_comment
     * @example
     * // Get one Patch_comment
     * const patch_comment = await prisma.patch_comment.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends patch_commentFindFirstArgs>(args?: SelectSubset<T, patch_commentFindFirstArgs<ExtArgs>>): Prisma__patch_commentClient<$Result.GetResult<Prisma.$patch_commentPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first Patch_comment that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {patch_commentFindFirstOrThrowArgs} args - Arguments to find a Patch_comment
     * @example
     * // Get one Patch_comment
     * const patch_comment = await prisma.patch_comment.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends patch_commentFindFirstOrThrowArgs>(args?: SelectSubset<T, patch_commentFindFirstOrThrowArgs<ExtArgs>>): Prisma__patch_commentClient<$Result.GetResult<Prisma.$patch_commentPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more Patch_comments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {patch_commentFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Patch_comments
     * const patch_comments = await prisma.patch_comment.findMany()
     * 
     * // Get first 10 Patch_comments
     * const patch_comments = await prisma.patch_comment.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const patch_commentWithIdOnly = await prisma.patch_comment.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends patch_commentFindManyArgs>(args?: SelectSubset<T, patch_commentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$patch_commentPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a Patch_comment.
     * @param {patch_commentCreateArgs} args - Arguments to create a Patch_comment.
     * @example
     * // Create one Patch_comment
     * const Patch_comment = await prisma.patch_comment.create({
     *   data: {
     *     // ... data to create a Patch_comment
     *   }
     * })
     * 
     */
    create<T extends patch_commentCreateArgs>(args: SelectSubset<T, patch_commentCreateArgs<ExtArgs>>): Prisma__patch_commentClient<$Result.GetResult<Prisma.$patch_commentPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many Patch_comments.
     * @param {patch_commentCreateManyArgs} args - Arguments to create many Patch_comments.
     * @example
     * // Create many Patch_comments
     * const patch_comment = await prisma.patch_comment.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends patch_commentCreateManyArgs>(args?: SelectSubset<T, patch_commentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Patch_comments and returns the data saved in the database.
     * @param {patch_commentCreateManyAndReturnArgs} args - Arguments to create many Patch_comments.
     * @example
     * // Create many Patch_comments
     * const patch_comment = await prisma.patch_comment.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Patch_comments and only return the `id`
     * const patch_commentWithIdOnly = await prisma.patch_comment.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends patch_commentCreateManyAndReturnArgs>(args?: SelectSubset<T, patch_commentCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$patch_commentPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a Patch_comment.
     * @param {patch_commentDeleteArgs} args - Arguments to delete one Patch_comment.
     * @example
     * // Delete one Patch_comment
     * const Patch_comment = await prisma.patch_comment.delete({
     *   where: {
     *     // ... filter to delete one Patch_comment
     *   }
     * })
     * 
     */
    delete<T extends patch_commentDeleteArgs>(args: SelectSubset<T, patch_commentDeleteArgs<ExtArgs>>): Prisma__patch_commentClient<$Result.GetResult<Prisma.$patch_commentPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one Patch_comment.
     * @param {patch_commentUpdateArgs} args - Arguments to update one Patch_comment.
     * @example
     * // Update one Patch_comment
     * const patch_comment = await prisma.patch_comment.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends patch_commentUpdateArgs>(args: SelectSubset<T, patch_commentUpdateArgs<ExtArgs>>): Prisma__patch_commentClient<$Result.GetResult<Prisma.$patch_commentPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more Patch_comments.
     * @param {patch_commentDeleteManyArgs} args - Arguments to filter Patch_comments to delete.
     * @example
     * // Delete a few Patch_comments
     * const { count } = await prisma.patch_comment.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends patch_commentDeleteManyArgs>(args?: SelectSubset<T, patch_commentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Patch_comments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {patch_commentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Patch_comments
     * const patch_comment = await prisma.patch_comment.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends patch_commentUpdateManyArgs>(args: SelectSubset<T, patch_commentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Patch_comments and returns the data updated in the database.
     * @param {patch_commentUpdateManyAndReturnArgs} args - Arguments to update many Patch_comments.
     * @example
     * // Update many Patch_comments
     * const patch_comment = await prisma.patch_comment.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Patch_comments and only return the `id`
     * const patch_commentWithIdOnly = await prisma.patch_comment.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends patch_commentUpdateManyAndReturnArgs>(args: SelectSubset<T, patch_commentUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$patch_commentPayload<ExtArgs>, T, "updateManyAndReturn", ClientOptions>>

    /**
     * Create or update one Patch_comment.
     * @param {patch_commentUpsertArgs} args - Arguments to update or create a Patch_comment.
     * @example
     * // Update or create a Patch_comment
     * const patch_comment = await prisma.patch_comment.upsert({
     *   create: {
     *     // ... data to create a Patch_comment
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Patch_comment we want to update
     *   }
     * })
     */
    upsert<T extends patch_commentUpsertArgs>(args: SelectSubset<T, patch_commentUpsertArgs<ExtArgs>>): Prisma__patch_commentClient<$Result.GetResult<Prisma.$patch_commentPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of Patch_comments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {patch_commentCountArgs} args - Arguments to filter Patch_comments to count.
     * @example
     * // Count the number of Patch_comments
     * const count = await prisma.patch_comment.count({
     *   where: {
     *     // ... the filter for the Patch_comments we want to count
     *   }
     * })
    **/
    count<T extends patch_commentCountArgs>(
      args?: Subset<T, patch_commentCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Patch_commentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Patch_comment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Patch_commentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Patch_commentAggregateArgs>(args: Subset<T, Patch_commentAggregateArgs>): Prisma.PrismaPromise<GetPatch_commentAggregateType<T>>

    /**
     * Group by Patch_comment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {patch_commentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends patch_commentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: patch_commentGroupByArgs['orderBy'] }
        : { orderBy?: patch_commentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, patch_commentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPatch_commentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the patch_comment model
   */
  readonly fields: patch_commentFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for patch_comment.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__patch_commentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    like_by<T extends patch_comment$like_byArgs<ExtArgs> = {}>(args?: Subset<T, patch_comment$like_byArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_patch_comment_like_relationPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    reply<T extends patch_comment$replyArgs<ExtArgs> = {}>(args?: Subset<T, patch_comment$replyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$patch_commentPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    parent<T extends patch_comment$parentArgs<ExtArgs> = {}>(args?: Subset<T, patch_comment$parentArgs<ExtArgs>>): Prisma__patch_commentClient<$Result.GetResult<Prisma.$patch_commentPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | null, null, ExtArgs, ClientOptions>
    user<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | Null, Null, ExtArgs, ClientOptions>
    patch<T extends patchDefaultArgs<ExtArgs> = {}>(args?: Subset<T, patchDefaultArgs<ExtArgs>>): Prisma__patchClient<$Result.GetResult<Prisma.$patchPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | Null, Null, ExtArgs, ClientOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the patch_comment model
   */ 
  interface patch_commentFieldRefs {
    readonly id: FieldRef<"patch_comment", 'Int'>
    readonly content: FieldRef<"patch_comment", 'String'>
    readonly edit: FieldRef<"patch_comment", 'String'>
    readonly parent_id: FieldRef<"patch_comment", 'Int'>
    readonly user_id: FieldRef<"patch_comment", 'Int'>
    readonly patch_id: FieldRef<"patch_comment", 'Int'>
    readonly created: FieldRef<"patch_comment", 'DateTime'>
    readonly updated: FieldRef<"patch_comment", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * patch_comment findUnique
   */
  export type patch_commentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_comment
     */
    select?: patch_commentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch_comment
     */
    omit?: patch_commentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_commentInclude<ExtArgs> | null
    /**
     * Filter, which patch_comment to fetch.
     */
    where: patch_commentWhereUniqueInput
  }

  /**
   * patch_comment findUniqueOrThrow
   */
  export type patch_commentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_comment
     */
    select?: patch_commentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch_comment
     */
    omit?: patch_commentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_commentInclude<ExtArgs> | null
    /**
     * Filter, which patch_comment to fetch.
     */
    where: patch_commentWhereUniqueInput
  }

  /**
   * patch_comment findFirst
   */
  export type patch_commentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_comment
     */
    select?: patch_commentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch_comment
     */
    omit?: patch_commentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_commentInclude<ExtArgs> | null
    /**
     * Filter, which patch_comment to fetch.
     */
    where?: patch_commentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of patch_comments to fetch.
     */
    orderBy?: patch_commentOrderByWithRelationInput | patch_commentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for patch_comments.
     */
    cursor?: patch_commentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` patch_comments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` patch_comments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of patch_comments.
     */
    distinct?: Patch_commentScalarFieldEnum | Patch_commentScalarFieldEnum[]
  }

  /**
   * patch_comment findFirstOrThrow
   */
  export type patch_commentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_comment
     */
    select?: patch_commentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch_comment
     */
    omit?: patch_commentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_commentInclude<ExtArgs> | null
    /**
     * Filter, which patch_comment to fetch.
     */
    where?: patch_commentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of patch_comments to fetch.
     */
    orderBy?: patch_commentOrderByWithRelationInput | patch_commentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for patch_comments.
     */
    cursor?: patch_commentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` patch_comments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` patch_comments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of patch_comments.
     */
    distinct?: Patch_commentScalarFieldEnum | Patch_commentScalarFieldEnum[]
  }

  /**
   * patch_comment findMany
   */
  export type patch_commentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_comment
     */
    select?: patch_commentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch_comment
     */
    omit?: patch_commentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_commentInclude<ExtArgs> | null
    /**
     * Filter, which patch_comments to fetch.
     */
    where?: patch_commentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of patch_comments to fetch.
     */
    orderBy?: patch_commentOrderByWithRelationInput | patch_commentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing patch_comments.
     */
    cursor?: patch_commentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` patch_comments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` patch_comments.
     */
    skip?: number
    distinct?: Patch_commentScalarFieldEnum | Patch_commentScalarFieldEnum[]
  }

  /**
   * patch_comment create
   */
  export type patch_commentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_comment
     */
    select?: patch_commentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch_comment
     */
    omit?: patch_commentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_commentInclude<ExtArgs> | null
    /**
     * The data needed to create a patch_comment.
     */
    data: XOR<patch_commentCreateInput, patch_commentUncheckedCreateInput>
  }

  /**
   * patch_comment createMany
   */
  export type patch_commentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many patch_comments.
     */
    data: patch_commentCreateManyInput | patch_commentCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * patch_comment createManyAndReturn
   */
  export type patch_commentCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_comment
     */
    select?: patch_commentSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the patch_comment
     */
    omit?: patch_commentOmit<ExtArgs> | null
    /**
     * The data used to create many patch_comments.
     */
    data: patch_commentCreateManyInput | patch_commentCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_commentIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * patch_comment update
   */
  export type patch_commentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_comment
     */
    select?: patch_commentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch_comment
     */
    omit?: patch_commentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_commentInclude<ExtArgs> | null
    /**
     * The data needed to update a patch_comment.
     */
    data: XOR<patch_commentUpdateInput, patch_commentUncheckedUpdateInput>
    /**
     * Choose, which patch_comment to update.
     */
    where: patch_commentWhereUniqueInput
  }

  /**
   * patch_comment updateMany
   */
  export type patch_commentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update patch_comments.
     */
    data: XOR<patch_commentUpdateManyMutationInput, patch_commentUncheckedUpdateManyInput>
    /**
     * Filter which patch_comments to update
     */
    where?: patch_commentWhereInput
  }

  /**
   * patch_comment updateManyAndReturn
   */
  export type patch_commentUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_comment
     */
    select?: patch_commentSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the patch_comment
     */
    omit?: patch_commentOmit<ExtArgs> | null
    /**
     * The data used to update patch_comments.
     */
    data: XOR<patch_commentUpdateManyMutationInput, patch_commentUncheckedUpdateManyInput>
    /**
     * Filter which patch_comments to update
     */
    where?: patch_commentWhereInput
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_commentIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * patch_comment upsert
   */
  export type patch_commentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_comment
     */
    select?: patch_commentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch_comment
     */
    omit?: patch_commentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_commentInclude<ExtArgs> | null
    /**
     * The filter to search for the patch_comment to update in case it exists.
     */
    where: patch_commentWhereUniqueInput
    /**
     * In case the patch_comment found by the `where` argument doesn't exist, create a new patch_comment with this data.
     */
    create: XOR<patch_commentCreateInput, patch_commentUncheckedCreateInput>
    /**
     * In case the patch_comment was found with the provided `where` argument, update it with this data.
     */
    update: XOR<patch_commentUpdateInput, patch_commentUncheckedUpdateInput>
  }

  /**
   * patch_comment delete
   */
  export type patch_commentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_comment
     */
    select?: patch_commentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch_comment
     */
    omit?: patch_commentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_commentInclude<ExtArgs> | null
    /**
     * Filter which patch_comment to delete.
     */
    where: patch_commentWhereUniqueInput
  }

  /**
   * patch_comment deleteMany
   */
  export type patch_commentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which patch_comments to delete
     */
    where?: patch_commentWhereInput
  }

  /**
   * patch_comment.like_by
   */
  export type patch_comment$like_byArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_patch_comment_like_relation
     */
    select?: user_patch_comment_like_relationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_patch_comment_like_relation
     */
    omit?: user_patch_comment_like_relationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_patch_comment_like_relationInclude<ExtArgs> | null
    where?: user_patch_comment_like_relationWhereInput
    orderBy?: user_patch_comment_like_relationOrderByWithRelationInput | user_patch_comment_like_relationOrderByWithRelationInput[]
    cursor?: user_patch_comment_like_relationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: User_patch_comment_like_relationScalarFieldEnum | User_patch_comment_like_relationScalarFieldEnum[]
  }

  /**
   * patch_comment.reply
   */
  export type patch_comment$replyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_comment
     */
    select?: patch_commentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch_comment
     */
    omit?: patch_commentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_commentInclude<ExtArgs> | null
    where?: patch_commentWhereInput
    orderBy?: patch_commentOrderByWithRelationInput | patch_commentOrderByWithRelationInput[]
    cursor?: patch_commentWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Patch_commentScalarFieldEnum | Patch_commentScalarFieldEnum[]
  }

  /**
   * patch_comment.parent
   */
  export type patch_comment$parentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_comment
     */
    select?: patch_commentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch_comment
     */
    omit?: patch_commentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_commentInclude<ExtArgs> | null
    where?: patch_commentWhereInput
  }

  /**
   * patch_comment without action
   */
  export type patch_commentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_comment
     */
    select?: patch_commentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch_comment
     */
    omit?: patch_commentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_commentInclude<ExtArgs> | null
  }


  /**
   * Model patch_character
   */

  export type AggregatePatch_character = {
    _count: Patch_characterCountAggregateOutputType | null
    _avg: Patch_characterAvgAggregateOutputType | null
    _sum: Patch_characterSumAggregateOutputType | null
    _min: Patch_characterMinAggregateOutputType | null
    _max: Patch_characterMaxAggregateOutputType | null
  }

  export type Patch_characterAvgAggregateOutputType = {
    id: number | null
    status: number | null
    original_id: number | null
    user_id: number | null
    patch_id: number | null
  }

  export type Patch_characterSumAggregateOutputType = {
    id: number | null
    status: number | null
    original_id: number | null
    user_id: number | null
    patch_id: number | null
  }

  export type Patch_characterMinAggregateOutputType = {
    id: number | null
    name: string | null
    image: string | null
    description: string | null
    status: number | null
    voice_actor: string | null
    age: string | null
    height: string | null
    birthday: string | null
    blood_type: string | null
    three_sizes: string | null
    role_type: string | null
    relationship: string | null
    is_latest: boolean | null
    original_id: number | null
    user_id: number | null
    patch_id: number | null
    created: Date | null
    updated: Date | null
  }

  export type Patch_characterMaxAggregateOutputType = {
    id: number | null
    name: string | null
    image: string | null
    description: string | null
    status: number | null
    voice_actor: string | null
    age: string | null
    height: string | null
    birthday: string | null
    blood_type: string | null
    three_sizes: string | null
    role_type: string | null
    relationship: string | null
    is_latest: boolean | null
    original_id: number | null
    user_id: number | null
    patch_id: number | null
    created: Date | null
    updated: Date | null
  }

  export type Patch_characterCountAggregateOutputType = {
    id: number
    name: number
    image: number
    description: number
    status: number
    traits: number
    voice_actor: number
    alias: number
    age: number
    height: number
    birthday: number
    blood_type: number
    three_sizes: number
    hobby: number
    favorite: number
    role_type: number
    personality: number
    relationship: number
    is_latest: number
    original_id: number
    user_id: number
    patch_id: number
    created: number
    updated: number
    _all: number
  }


  export type Patch_characterAvgAggregateInputType = {
    id?: true
    status?: true
    original_id?: true
    user_id?: true
    patch_id?: true
  }

  export type Patch_characterSumAggregateInputType = {
    id?: true
    status?: true
    original_id?: true
    user_id?: true
    patch_id?: true
  }

  export type Patch_characterMinAggregateInputType = {
    id?: true
    name?: true
    image?: true
    description?: true
    status?: true
    voice_actor?: true
    age?: true
    height?: true
    birthday?: true
    blood_type?: true
    three_sizes?: true
    role_type?: true
    relationship?: true
    is_latest?: true
    original_id?: true
    user_id?: true
    patch_id?: true
    created?: true
    updated?: true
  }

  export type Patch_characterMaxAggregateInputType = {
    id?: true
    name?: true
    image?: true
    description?: true
    status?: true
    voice_actor?: true
    age?: true
    height?: true
    birthday?: true
    blood_type?: true
    three_sizes?: true
    role_type?: true
    relationship?: true
    is_latest?: true
    original_id?: true
    user_id?: true
    patch_id?: true
    created?: true
    updated?: true
  }

  export type Patch_characterCountAggregateInputType = {
    id?: true
    name?: true
    image?: true
    description?: true
    status?: true
    traits?: true
    voice_actor?: true
    alias?: true
    age?: true
    height?: true
    birthday?: true
    blood_type?: true
    three_sizes?: true
    hobby?: true
    favorite?: true
    role_type?: true
    personality?: true
    relationship?: true
    is_latest?: true
    original_id?: true
    user_id?: true
    patch_id?: true
    created?: true
    updated?: true
    _all?: true
  }

  export type Patch_characterAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which patch_character to aggregate.
     */
    where?: patch_characterWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of patch_characters to fetch.
     */
    orderBy?: patch_characterOrderByWithRelationInput | patch_characterOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: patch_characterWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` patch_characters from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` patch_characters.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned patch_characters
    **/
    _count?: true | Patch_characterCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Patch_characterAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Patch_characterSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Patch_characterMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Patch_characterMaxAggregateInputType
  }

  export type GetPatch_characterAggregateType<T extends Patch_characterAggregateArgs> = {
        [P in keyof T & keyof AggregatePatch_character]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePatch_character[P]>
      : GetScalarType<T[P], AggregatePatch_character[P]>
  }




  export type patch_characterGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: patch_characterWhereInput
    orderBy?: patch_characterOrderByWithAggregationInput | patch_characterOrderByWithAggregationInput[]
    by: Patch_characterScalarFieldEnum[] | Patch_characterScalarFieldEnum
    having?: patch_characterScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Patch_characterCountAggregateInputType | true
    _avg?: Patch_characterAvgAggregateInputType
    _sum?: Patch_characterSumAggregateInputType
    _min?: Patch_characterMinAggregateInputType
    _max?: Patch_characterMaxAggregateInputType
  }

  export type Patch_characterGroupByOutputType = {
    id: number
    name: string
    image: string
    description: string
    status: number
    traits: string[]
    voice_actor: string
    alias: string[]
    age: string
    height: string
    birthday: string
    blood_type: string
    three_sizes: string
    hobby: string[]
    favorite: string[]
    role_type: string
    personality: string[]
    relationship: string
    is_latest: boolean
    original_id: number | null
    user_id: number
    patch_id: number
    created: Date
    updated: Date
    _count: Patch_characterCountAggregateOutputType | null
    _avg: Patch_characterAvgAggregateOutputType | null
    _sum: Patch_characterSumAggregateOutputType | null
    _min: Patch_characterMinAggregateOutputType | null
    _max: Patch_characterMaxAggregateOutputType | null
  }

  type GetPatch_characterGroupByPayload<T extends patch_characterGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Patch_characterGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Patch_characterGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Patch_characterGroupByOutputType[P]>
            : GetScalarType<T[P], Patch_characterGroupByOutputType[P]>
        }
      >
    >


  export type patch_characterSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    image?: boolean
    description?: boolean
    status?: boolean
    traits?: boolean
    voice_actor?: boolean
    alias?: boolean
    age?: boolean
    height?: boolean
    birthday?: boolean
    blood_type?: boolean
    three_sizes?: boolean
    hobby?: boolean
    favorite?: boolean
    role_type?: boolean
    personality?: boolean
    relationship?: boolean
    is_latest?: boolean
    original_id?: boolean
    user_id?: boolean
    patch_id?: boolean
    created?: boolean
    updated?: boolean
    original?: boolean | patch_character$originalArgs<ExtArgs>
    new_versions?: boolean | patch_character$new_versionsArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
    patch?: boolean | patchDefaultArgs<ExtArgs>
    _count?: boolean | Patch_characterCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["patch_character"]>

  export type patch_characterSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    image?: boolean
    description?: boolean
    status?: boolean
    traits?: boolean
    voice_actor?: boolean
    alias?: boolean
    age?: boolean
    height?: boolean
    birthday?: boolean
    blood_type?: boolean
    three_sizes?: boolean
    hobby?: boolean
    favorite?: boolean
    role_type?: boolean
    personality?: boolean
    relationship?: boolean
    is_latest?: boolean
    original_id?: boolean
    user_id?: boolean
    patch_id?: boolean
    created?: boolean
    updated?: boolean
    original?: boolean | patch_character$originalArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
    patch?: boolean | patchDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["patch_character"]>

  export type patch_characterSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    image?: boolean
    description?: boolean
    status?: boolean
    traits?: boolean
    voice_actor?: boolean
    alias?: boolean
    age?: boolean
    height?: boolean
    birthday?: boolean
    blood_type?: boolean
    three_sizes?: boolean
    hobby?: boolean
    favorite?: boolean
    role_type?: boolean
    personality?: boolean
    relationship?: boolean
    is_latest?: boolean
    original_id?: boolean
    user_id?: boolean
    patch_id?: boolean
    created?: boolean
    updated?: boolean
    original?: boolean | patch_character$originalArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
    patch?: boolean | patchDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["patch_character"]>

  export type patch_characterSelectScalar = {
    id?: boolean
    name?: boolean
    image?: boolean
    description?: boolean
    status?: boolean
    traits?: boolean
    voice_actor?: boolean
    alias?: boolean
    age?: boolean
    height?: boolean
    birthday?: boolean
    blood_type?: boolean
    three_sizes?: boolean
    hobby?: boolean
    favorite?: boolean
    role_type?: boolean
    personality?: boolean
    relationship?: boolean
    is_latest?: boolean
    original_id?: boolean
    user_id?: boolean
    patch_id?: boolean
    created?: boolean
    updated?: boolean
  }

  export type patch_characterOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "image" | "description" | "status" | "traits" | "voice_actor" | "alias" | "age" | "height" | "birthday" | "blood_type" | "three_sizes" | "hobby" | "favorite" | "role_type" | "personality" | "relationship" | "is_latest" | "original_id" | "user_id" | "patch_id" | "created" | "updated", ExtArgs["result"]["patch_character"]>
  export type patch_characterInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    original?: boolean | patch_character$originalArgs<ExtArgs>
    new_versions?: boolean | patch_character$new_versionsArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
    patch?: boolean | patchDefaultArgs<ExtArgs>
    _count?: boolean | Patch_characterCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type patch_characterIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    original?: boolean | patch_character$originalArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
    patch?: boolean | patchDefaultArgs<ExtArgs>
  }
  export type patch_characterIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    original?: boolean | patch_character$originalArgs<ExtArgs>
    user?: boolean | userDefaultArgs<ExtArgs>
    patch?: boolean | patchDefaultArgs<ExtArgs>
  }

  export type $patch_characterPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "patch_character"
    objects: {
      original: Prisma.$patch_characterPayload<ExtArgs> | null
      new_versions: Prisma.$patch_characterPayload<ExtArgs>[]
      user: Prisma.$userPayload<ExtArgs>
      patch: Prisma.$patchPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      image: string
      description: string
      status: number
      traits: string[]
      voice_actor: string
      alias: string[]
      age: string
      height: string
      birthday: string
      blood_type: string
      three_sizes: string
      hobby: string[]
      favorite: string[]
      role_type: string
      personality: string[]
      relationship: string
      is_latest: boolean
      original_id: number | null
      user_id: number
      patch_id: number
      created: Date
      updated: Date
    }, ExtArgs["result"]["patch_character"]>
    composites: {}
  }

  type patch_characterGetPayload<S extends boolean | null | undefined | patch_characterDefaultArgs> = $Result.GetResult<Prisma.$patch_characterPayload, S>

  type patch_characterCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<patch_characterFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Patch_characterCountAggregateInputType | true
    }

  export interface patch_characterDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['patch_character'], meta: { name: 'patch_character' } }
    /**
     * Find zero or one Patch_character that matches the filter.
     * @param {patch_characterFindUniqueArgs} args - Arguments to find a Patch_character
     * @example
     * // Get one Patch_character
     * const patch_character = await prisma.patch_character.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends patch_characterFindUniqueArgs>(args: SelectSubset<T, patch_characterFindUniqueArgs<ExtArgs>>): Prisma__patch_characterClient<$Result.GetResult<Prisma.$patch_characterPayload<ExtArgs>, T, "findUnique", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find one Patch_character that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {patch_characterFindUniqueOrThrowArgs} args - Arguments to find a Patch_character
     * @example
     * // Get one Patch_character
     * const patch_character = await prisma.patch_character.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends patch_characterFindUniqueOrThrowArgs>(args: SelectSubset<T, patch_characterFindUniqueOrThrowArgs<ExtArgs>>): Prisma__patch_characterClient<$Result.GetResult<Prisma.$patch_characterPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find the first Patch_character that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {patch_characterFindFirstArgs} args - Arguments to find a Patch_character
     * @example
     * // Get one Patch_character
     * const patch_character = await prisma.patch_character.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends patch_characterFindFirstArgs>(args?: SelectSubset<T, patch_characterFindFirstArgs<ExtArgs>>): Prisma__patch_characterClient<$Result.GetResult<Prisma.$patch_characterPayload<ExtArgs>, T, "findFirst", ClientOptions> | null, null, ExtArgs, ClientOptions>

    /**
     * Find the first Patch_character that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {patch_characterFindFirstOrThrowArgs} args - Arguments to find a Patch_character
     * @example
     * // Get one Patch_character
     * const patch_character = await prisma.patch_character.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends patch_characterFindFirstOrThrowArgs>(args?: SelectSubset<T, patch_characterFindFirstOrThrowArgs<ExtArgs>>): Prisma__patch_characterClient<$Result.GetResult<Prisma.$patch_characterPayload<ExtArgs>, T, "findFirstOrThrow", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Find zero or more Patch_characters that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {patch_characterFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Patch_characters
     * const patch_characters = await prisma.patch_character.findMany()
     * 
     * // Get first 10 Patch_characters
     * const patch_characters = await prisma.patch_character.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const patch_characterWithIdOnly = await prisma.patch_character.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends patch_characterFindManyArgs>(args?: SelectSubset<T, patch_characterFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$patch_characterPayload<ExtArgs>, T, "findMany", ClientOptions>>

    /**
     * Create a Patch_character.
     * @param {patch_characterCreateArgs} args - Arguments to create a Patch_character.
     * @example
     * // Create one Patch_character
     * const Patch_character = await prisma.patch_character.create({
     *   data: {
     *     // ... data to create a Patch_character
     *   }
     * })
     * 
     */
    create<T extends patch_characterCreateArgs>(args: SelectSubset<T, patch_characterCreateArgs<ExtArgs>>): Prisma__patch_characterClient<$Result.GetResult<Prisma.$patch_characterPayload<ExtArgs>, T, "create", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Create many Patch_characters.
     * @param {patch_characterCreateManyArgs} args - Arguments to create many Patch_characters.
     * @example
     * // Create many Patch_characters
     * const patch_character = await prisma.patch_character.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends patch_characterCreateManyArgs>(args?: SelectSubset<T, patch_characterCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Patch_characters and returns the data saved in the database.
     * @param {patch_characterCreateManyAndReturnArgs} args - Arguments to create many Patch_characters.
     * @example
     * // Create many Patch_characters
     * const patch_character = await prisma.patch_character.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Patch_characters and only return the `id`
     * const patch_characterWithIdOnly = await prisma.patch_character.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends patch_characterCreateManyAndReturnArgs>(args?: SelectSubset<T, patch_characterCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$patch_characterPayload<ExtArgs>, T, "createManyAndReturn", ClientOptions>>

    /**
     * Delete a Patch_character.
     * @param {patch_characterDeleteArgs} args - Arguments to delete one Patch_character.
     * @example
     * // Delete one Patch_character
     * const Patch_character = await prisma.patch_character.delete({
     *   where: {
     *     // ... filter to delete one Patch_character
     *   }
     * })
     * 
     */
    delete<T extends patch_characterDeleteArgs>(args: SelectSubset<T, patch_characterDeleteArgs<ExtArgs>>): Prisma__patch_characterClient<$Result.GetResult<Prisma.$patch_characterPayload<ExtArgs>, T, "delete", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Update one Patch_character.
     * @param {patch_characterUpdateArgs} args - Arguments to update one Patch_character.
     * @example
     * // Update one Patch_character
     * const patch_character = await prisma.patch_character.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends patch_characterUpdateArgs>(args: SelectSubset<T, patch_characterUpdateArgs<ExtArgs>>): Prisma__patch_characterClient<$Result.GetResult<Prisma.$patch_characterPayload<ExtArgs>, T, "update", ClientOptions>, never, ExtArgs, ClientOptions>

    /**
     * Delete zero or more Patch_characters.
     * @param {patch_characterDeleteManyArgs} args - Arguments to filter Patch_characters to delete.
     * @example
     * // Delete a few Patch_characters
     * const { count } = await prisma.patch_character.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends patch_characterDeleteManyArgs>(args?: SelectSubset<T, patch_characterDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Patch_characters.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {patch_characterUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Patch_characters
     * const patch_character = await prisma.patch_character.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends patch_characterUpdateManyArgs>(args: SelectSubset<T, patch_characterUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Patch_characters and returns the data updated in the database.
     * @param {patch_characterUpdateManyAndReturnArgs} args - Arguments to update many Patch_characters.
     * @example
     * // Update many Patch_characters
     * const patch_character = await prisma.patch_character.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Patch_characters and only return the `id`
     * const patch_characterWithIdOnly = await prisma.patch_character.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends patch_characterUpdateManyAndReturnArgs>(args: SelectSubset<T, patch_characterUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$patch_characterPayload<ExtArgs>, T, "updateManyAndReturn", ClientOptions>>

    /**
     * Create or update one Patch_character.
     * @param {patch_characterUpsertArgs} args - Arguments to update or create a Patch_character.
     * @example
     * // Update or create a Patch_character
     * const patch_character = await prisma.patch_character.upsert({
     *   create: {
     *     // ... data to create a Patch_character
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Patch_character we want to update
     *   }
     * })
     */
    upsert<T extends patch_characterUpsertArgs>(args: SelectSubset<T, patch_characterUpsertArgs<ExtArgs>>): Prisma__patch_characterClient<$Result.GetResult<Prisma.$patch_characterPayload<ExtArgs>, T, "upsert", ClientOptions>, never, ExtArgs, ClientOptions>


    /**
     * Count the number of Patch_characters.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {patch_characterCountArgs} args - Arguments to filter Patch_characters to count.
     * @example
     * // Count the number of Patch_characters
     * const count = await prisma.patch_character.count({
     *   where: {
     *     // ... the filter for the Patch_characters we want to count
     *   }
     * })
    **/
    count<T extends patch_characterCountArgs>(
      args?: Subset<T, patch_characterCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Patch_characterCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Patch_character.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Patch_characterAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Patch_characterAggregateArgs>(args: Subset<T, Patch_characterAggregateArgs>): Prisma.PrismaPromise<GetPatch_characterAggregateType<T>>

    /**
     * Group by Patch_character.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {patch_characterGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends patch_characterGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: patch_characterGroupByArgs['orderBy'] }
        : { orderBy?: patch_characterGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, patch_characterGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPatch_characterGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the patch_character model
   */
  readonly fields: patch_characterFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for patch_character.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__patch_characterClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    original<T extends patch_character$originalArgs<ExtArgs> = {}>(args?: Subset<T, patch_character$originalArgs<ExtArgs>>): Prisma__patch_characterClient<$Result.GetResult<Prisma.$patch_characterPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | null, null, ExtArgs, ClientOptions>
    new_versions<T extends patch_character$new_versionsArgs<ExtArgs> = {}>(args?: Subset<T, patch_character$new_versionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$patch_characterPayload<ExtArgs>, T, "findMany", ClientOptions> | Null>
    user<T extends userDefaultArgs<ExtArgs> = {}>(args?: Subset<T, userDefaultArgs<ExtArgs>>): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | Null, Null, ExtArgs, ClientOptions>
    patch<T extends patchDefaultArgs<ExtArgs> = {}>(args?: Subset<T, patchDefaultArgs<ExtArgs>>): Prisma__patchClient<$Result.GetResult<Prisma.$patchPayload<ExtArgs>, T, "findUniqueOrThrow", ClientOptions> | Null, Null, ExtArgs, ClientOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the patch_character model
   */ 
  interface patch_characterFieldRefs {
    readonly id: FieldRef<"patch_character", 'Int'>
    readonly name: FieldRef<"patch_character", 'String'>
    readonly image: FieldRef<"patch_character", 'String'>
    readonly description: FieldRef<"patch_character", 'String'>
    readonly status: FieldRef<"patch_character", 'Int'>
    readonly traits: FieldRef<"patch_character", 'String[]'>
    readonly voice_actor: FieldRef<"patch_character", 'String'>
    readonly alias: FieldRef<"patch_character", 'String[]'>
    readonly age: FieldRef<"patch_character", 'String'>
    readonly height: FieldRef<"patch_character", 'String'>
    readonly birthday: FieldRef<"patch_character", 'String'>
    readonly blood_type: FieldRef<"patch_character", 'String'>
    readonly three_sizes: FieldRef<"patch_character", 'String'>
    readonly hobby: FieldRef<"patch_character", 'String[]'>
    readonly favorite: FieldRef<"patch_character", 'String[]'>
    readonly role_type: FieldRef<"patch_character", 'String'>
    readonly personality: FieldRef<"patch_character", 'String[]'>
    readonly relationship: FieldRef<"patch_character", 'String'>
    readonly is_latest: FieldRef<"patch_character", 'Boolean'>
    readonly original_id: FieldRef<"patch_character", 'Int'>
    readonly user_id: FieldRef<"patch_character", 'Int'>
    readonly patch_id: FieldRef<"patch_character", 'Int'>
    readonly created: FieldRef<"patch_character", 'DateTime'>
    readonly updated: FieldRef<"patch_character", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * patch_character findUnique
   */
  export type patch_characterFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_character
     */
    select?: patch_characterSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch_character
     */
    omit?: patch_characterOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_characterInclude<ExtArgs> | null
    /**
     * Filter, which patch_character to fetch.
     */
    where: patch_characterWhereUniqueInput
  }

  /**
   * patch_character findUniqueOrThrow
   */
  export type patch_characterFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_character
     */
    select?: patch_characterSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch_character
     */
    omit?: patch_characterOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_characterInclude<ExtArgs> | null
    /**
     * Filter, which patch_character to fetch.
     */
    where: patch_characterWhereUniqueInput
  }

  /**
   * patch_character findFirst
   */
  export type patch_characterFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_character
     */
    select?: patch_characterSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch_character
     */
    omit?: patch_characterOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_characterInclude<ExtArgs> | null
    /**
     * Filter, which patch_character to fetch.
     */
    where?: patch_characterWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of patch_characters to fetch.
     */
    orderBy?: patch_characterOrderByWithRelationInput | patch_characterOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for patch_characters.
     */
    cursor?: patch_characterWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` patch_characters from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` patch_characters.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of patch_characters.
     */
    distinct?: Patch_characterScalarFieldEnum | Patch_characterScalarFieldEnum[]
  }

  /**
   * patch_character findFirstOrThrow
   */
  export type patch_characterFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_character
     */
    select?: patch_characterSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch_character
     */
    omit?: patch_characterOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_characterInclude<ExtArgs> | null
    /**
     * Filter, which patch_character to fetch.
     */
    where?: patch_characterWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of patch_characters to fetch.
     */
    orderBy?: patch_characterOrderByWithRelationInput | patch_characterOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for patch_characters.
     */
    cursor?: patch_characterWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` patch_characters from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` patch_characters.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of patch_characters.
     */
    distinct?: Patch_characterScalarFieldEnum | Patch_characterScalarFieldEnum[]
  }

  /**
   * patch_character findMany
   */
  export type patch_characterFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_character
     */
    select?: patch_characterSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch_character
     */
    omit?: patch_characterOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_characterInclude<ExtArgs> | null
    /**
     * Filter, which patch_characters to fetch.
     */
    where?: patch_characterWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of patch_characters to fetch.
     */
    orderBy?: patch_characterOrderByWithRelationInput | patch_characterOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing patch_characters.
     */
    cursor?: patch_characterWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` patch_characters from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` patch_characters.
     */
    skip?: number
    distinct?: Patch_characterScalarFieldEnum | Patch_characterScalarFieldEnum[]
  }

  /**
   * patch_character create
   */
  export type patch_characterCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_character
     */
    select?: patch_characterSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch_character
     */
    omit?: patch_characterOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_characterInclude<ExtArgs> | null
    /**
     * The data needed to create a patch_character.
     */
    data: XOR<patch_characterCreateInput, patch_characterUncheckedCreateInput>
  }

  /**
   * patch_character createMany
   */
  export type patch_characterCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many patch_characters.
     */
    data: patch_characterCreateManyInput | patch_characterCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * patch_character createManyAndReturn
   */
  export type patch_characterCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_character
     */
    select?: patch_characterSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the patch_character
     */
    omit?: patch_characterOmit<ExtArgs> | null
    /**
     * The data used to create many patch_characters.
     */
    data: patch_characterCreateManyInput | patch_characterCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_characterIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * patch_character update
   */
  export type patch_characterUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_character
     */
    select?: patch_characterSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch_character
     */
    omit?: patch_characterOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_characterInclude<ExtArgs> | null
    /**
     * The data needed to update a patch_character.
     */
    data: XOR<patch_characterUpdateInput, patch_characterUncheckedUpdateInput>
    /**
     * Choose, which patch_character to update.
     */
    where: patch_characterWhereUniqueInput
  }

  /**
   * patch_character updateMany
   */
  export type patch_characterUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update patch_characters.
     */
    data: XOR<patch_characterUpdateManyMutationInput, patch_characterUncheckedUpdateManyInput>
    /**
     * Filter which patch_characters to update
     */
    where?: patch_characterWhereInput
  }

  /**
   * patch_character updateManyAndReturn
   */
  export type patch_characterUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_character
     */
    select?: patch_characterSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the patch_character
     */
    omit?: patch_characterOmit<ExtArgs> | null
    /**
     * The data used to update patch_characters.
     */
    data: XOR<patch_characterUpdateManyMutationInput, patch_characterUncheckedUpdateManyInput>
    /**
     * Filter which patch_characters to update
     */
    where?: patch_characterWhereInput
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_characterIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * patch_character upsert
   */
  export type patch_characterUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_character
     */
    select?: patch_characterSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch_character
     */
    omit?: patch_characterOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_characterInclude<ExtArgs> | null
    /**
     * The filter to search for the patch_character to update in case it exists.
     */
    where: patch_characterWhereUniqueInput
    /**
     * In case the patch_character found by the `where` argument doesn't exist, create a new patch_character with this data.
     */
    create: XOR<patch_characterCreateInput, patch_characterUncheckedCreateInput>
    /**
     * In case the patch_character was found with the provided `where` argument, update it with this data.
     */
    update: XOR<patch_characterUpdateInput, patch_characterUncheckedUpdateInput>
  }

  /**
   * patch_character delete
   */
  export type patch_characterDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_character
     */
    select?: patch_characterSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch_character
     */
    omit?: patch_characterOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_characterInclude<ExtArgs> | null
    /**
     * Filter which patch_character to delete.
     */
    where: patch_characterWhereUniqueInput
  }

  /**
   * patch_character deleteMany
   */
  export type patch_characterDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which patch_characters to delete
     */
    where?: patch_characterWhereInput
  }

  /**
   * patch_character.original
   */
  export type patch_character$originalArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_character
     */
    select?: patch_characterSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch_character
     */
    omit?: patch_characterOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_characterInclude<ExtArgs> | null
    where?: patch_characterWhereInput
  }

  /**
   * patch_character.new_versions
   */
  export type patch_character$new_versionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_character
     */
    select?: patch_characterSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch_character
     */
    omit?: patch_characterOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_characterInclude<ExtArgs> | null
    where?: patch_characterWhereInput
    orderBy?: patch_characterOrderByWithRelationInput | patch_characterOrderByWithRelationInput[]
    cursor?: patch_characterWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Patch_characterScalarFieldEnum | Patch_characterScalarFieldEnum[]
  }

  /**
   * patch_character without action
   */
  export type patch_characterDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the patch_character
     */
    select?: patch_characterSelect<ExtArgs> | null
    /**
     * Omit specific fields from the patch_character
     */
    omit?: patch_characterOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: patch_characterInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const UserScalarFieldEnum: {
    id: 'id',
    name: 'name',
    email: 'email',
    password: 'password',
    ip: 'ip',
    avatar: 'avatar',
    role: 'role',
    status: 'status',
    register_time: 'register_time',
    moemoepoint: 'moemoepoint',
    bio: 'bio',
    claimed_tasks: 'claimed_tasks',
    enable_email_notice: 'enable_email_notice',
    daily_image_count: 'daily_image_count',
    daily_check_in: 'daily_check_in',
    daily_upload_size: 'daily_upload_size',
    last_login_time: 'last_login_time',
    created: 'created',
    updated: 'updated'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const Admin_logScalarFieldEnum: {
    id: 'id',
    type: 'type',
    content: 'content',
    status: 'status',
    user_id: 'user_id',
    created: 'created',
    updated: 'updated'
  };

  export type Admin_logScalarFieldEnum = (typeof Admin_logScalarFieldEnum)[keyof typeof Admin_logScalarFieldEnum]


  export const User_follow_relationScalarFieldEnum: {
    id: 'id',
    follower_id: 'follower_id',
    following_id: 'following_id'
  };

  export type User_follow_relationScalarFieldEnum = (typeof User_follow_relationScalarFieldEnum)[keyof typeof User_follow_relationScalarFieldEnum]


  export const User_messageScalarFieldEnum: {
    id: 'id',
    type: 'type',
    content: 'content',
    status: 'status',
    link: 'link',
    sender_id: 'sender_id',
    recipient_id: 'recipient_id',
    created: 'created',
    updated: 'updated'
  };

  export type User_messageScalarFieldEnum = (typeof User_messageScalarFieldEnum)[keyof typeof User_messageScalarFieldEnum]


  export const User_patch_favorite_folderScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    is_public: 'is_public',
    user_id: 'user_id',
    created: 'created',
    updated: 'updated'
  };

  export type User_patch_favorite_folderScalarFieldEnum = (typeof User_patch_favorite_folderScalarFieldEnum)[keyof typeof User_patch_favorite_folderScalarFieldEnum]


  export const User_patch_favorite_folder_relationScalarFieldEnum: {
    id: 'id',
    folder_id: 'folder_id',
    patch_id: 'patch_id',
    created: 'created',
    updated: 'updated'
  };

  export type User_patch_favorite_folder_relationScalarFieldEnum = (typeof User_patch_favorite_folder_relationScalarFieldEnum)[keyof typeof User_patch_favorite_folder_relationScalarFieldEnum]


  export const User_patch_comment_like_relationScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    comment_id: 'comment_id',
    created: 'created',
    updated: 'updated'
  };

  export type User_patch_comment_like_relationScalarFieldEnum = (typeof User_patch_comment_like_relationScalarFieldEnum)[keyof typeof User_patch_comment_like_relationScalarFieldEnum]


  export const User_patch_resource_like_relationScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    resource_id: 'resource_id',
    created: 'created',
    updated: 'updated'
  };

  export type User_patch_resource_like_relationScalarFieldEnum = (typeof User_patch_resource_like_relationScalarFieldEnum)[keyof typeof User_patch_resource_like_relationScalarFieldEnum]


  export const PatchScalarFieldEnum: {
    id: 'id',
    unique_id: 'unique_id',
    name: 'name',
    vndb_id: 'vndb_id',
    banner: 'banner',
    introduction: 'introduction',
    released: 'released',
    content_limit: 'content_limit',
    status: 'status',
    download: 'download',
    view: 'view',
    resource_update_time: 'resource_update_time',
    type: 'type',
    language: 'language',
    engine: 'engine',
    platform: 'platform',
    user_id: 'user_id',
    created: 'created',
    updated: 'updated'
  };

  export type PatchScalarFieldEnum = (typeof PatchScalarFieldEnum)[keyof typeof PatchScalarFieldEnum]


  export const Patch_aliasScalarFieldEnum: {
    id: 'id',
    name: 'name',
    patch_id: 'patch_id',
    created: 'created',
    updated: 'updated'
  };

  export type Patch_aliasScalarFieldEnum = (typeof Patch_aliasScalarFieldEnum)[keyof typeof Patch_aliasScalarFieldEnum]


  export const Patch_tagScalarFieldEnum: {
    id: 'id',
    name: 'name',
    introduction: 'introduction',
    count: 'count',
    alias: 'alias',
    user_id: 'user_id',
    created: 'created',
    updated: 'updated'
  };

  export type Patch_tagScalarFieldEnum = (typeof Patch_tagScalarFieldEnum)[keyof typeof Patch_tagScalarFieldEnum]


  export const Patch_tag_relationScalarFieldEnum: {
    id: 'id',
    patch_id: 'patch_id',
    tag_id: 'tag_id',
    created: 'created',
    updated: 'updated'
  };

  export type Patch_tag_relationScalarFieldEnum = (typeof Patch_tag_relationScalarFieldEnum)[keyof typeof Patch_tag_relationScalarFieldEnum]


  export const Patch_resourceScalarFieldEnum: {
    id: 'id',
    storage: 'storage',
    section: 'section',
    name: 'name',
    size: 'size',
    code: 'code',
    password: 'password',
    note: 'note',
    hash: 'hash',
    content: 'content',
    type: 'type',
    language: 'language',
    platform: 'platform',
    download: 'download',
    status: 'status',
    user_id: 'user_id',
    patch_id: 'patch_id',
    created: 'created',
    updated: 'updated'
  };

  export type Patch_resourceScalarFieldEnum = (typeof Patch_resourceScalarFieldEnum)[keyof typeof Patch_resourceScalarFieldEnum]


  export const Patch_commentScalarFieldEnum: {
    id: 'id',
    content: 'content',
    edit: 'edit',
    parent_id: 'parent_id',
    user_id: 'user_id',
    patch_id: 'patch_id',
    created: 'created',
    updated: 'updated'
  };

  export type Patch_commentScalarFieldEnum = (typeof Patch_commentScalarFieldEnum)[keyof typeof Patch_commentScalarFieldEnum]


  export const Patch_characterScalarFieldEnum: {
    id: 'id',
    name: 'name',
    image: 'image',
    description: 'description',
    status: 'status',
    traits: 'traits',
    voice_actor: 'voice_actor',
    alias: 'alias',
    age: 'age',
    height: 'height',
    birthday: 'birthday',
    blood_type: 'blood_type',
    three_sizes: 'three_sizes',
    hobby: 'hobby',
    favorite: 'favorite',
    role_type: 'role_type',
    personality: 'personality',
    relationship: 'relationship',
    is_latest: 'is_latest',
    original_id: 'original_id',
    user_id: 'user_id',
    patch_id: 'patch_id',
    created: 'created',
    updated: 'updated'
  };

  export type Patch_characterScalarFieldEnum = (typeof Patch_characterScalarFieldEnum)[keyof typeof Patch_characterScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type userWhereInput = {
    AND?: userWhereInput | userWhereInput[]
    OR?: userWhereInput[]
    NOT?: userWhereInput | userWhereInput[]
    id?: IntFilter<"user"> | number
    name?: StringFilter<"user"> | string
    email?: StringFilter<"user"> | string
    password?: StringFilter<"user"> | string
    ip?: StringFilter<"user"> | string
    avatar?: StringFilter<"user"> | string
    role?: IntFilter<"user"> | number
    status?: IntFilter<"user"> | number
    register_time?: DateTimeFilter<"user"> | Date | string
    moemoepoint?: IntFilter<"user"> | number
    bio?: StringFilter<"user"> | string
    claimed_tasks?: StringNullableListFilter<"user">
    enable_email_notice?: BoolFilter<"user"> | boolean
    daily_image_count?: IntFilter<"user"> | number
    daily_check_in?: IntFilter<"user"> | number
    daily_upload_size?: FloatFilter<"user"> | number
    last_login_time?: StringFilter<"user"> | string
    created?: DateTimeFilter<"user"> | Date | string
    updated?: DateTimeFilter<"user"> | Date | string
    admin_log?: Admin_logListRelationFilter
    patch_tag?: Patch_tagListRelationFilter
    patch_comment_like?: User_patch_comment_like_relationListRelationFilter
    patch_resource_like?: User_patch_resource_like_relationListRelationFilter
    patch_favorite_folder?: User_patch_favorite_folderListRelationFilter
    following?: User_follow_relationListRelationFilter
    follower?: User_follow_relationListRelationFilter
    patch?: PatchListRelationFilter
    patch_comment?: Patch_commentListRelationFilter
    patch_resource?: Patch_resourceListRelationFilter
    patch_character?: Patch_characterListRelationFilter
    send_message?: User_messageListRelationFilter
    receive_message?: User_messageListRelationFilter
  }

  export type userOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
    ip?: SortOrder
    avatar?: SortOrder
    role?: SortOrder
    status?: SortOrder
    register_time?: SortOrder
    moemoepoint?: SortOrder
    bio?: SortOrder
    claimed_tasks?: SortOrder
    enable_email_notice?: SortOrder
    daily_image_count?: SortOrder
    daily_check_in?: SortOrder
    daily_upload_size?: SortOrder
    last_login_time?: SortOrder
    created?: SortOrder
    updated?: SortOrder
    admin_log?: admin_logOrderByRelationAggregateInput
    patch_tag?: patch_tagOrderByRelationAggregateInput
    patch_comment_like?: user_patch_comment_like_relationOrderByRelationAggregateInput
    patch_resource_like?: user_patch_resource_like_relationOrderByRelationAggregateInput
    patch_favorite_folder?: user_patch_favorite_folderOrderByRelationAggregateInput
    following?: user_follow_relationOrderByRelationAggregateInput
    follower?: user_follow_relationOrderByRelationAggregateInput
    patch?: patchOrderByRelationAggregateInput
    patch_comment?: patch_commentOrderByRelationAggregateInput
    patch_resource?: patch_resourceOrderByRelationAggregateInput
    patch_character?: patch_characterOrderByRelationAggregateInput
    send_message?: user_messageOrderByRelationAggregateInput
    receive_message?: user_messageOrderByRelationAggregateInput
  }

  export type userWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    name?: string
    email?: string
    AND?: userWhereInput | userWhereInput[]
    OR?: userWhereInput[]
    NOT?: userWhereInput | userWhereInput[]
    password?: StringFilter<"user"> | string
    ip?: StringFilter<"user"> | string
    avatar?: StringFilter<"user"> | string
    role?: IntFilter<"user"> | number
    status?: IntFilter<"user"> | number
    register_time?: DateTimeFilter<"user"> | Date | string
    moemoepoint?: IntFilter<"user"> | number
    bio?: StringFilter<"user"> | string
    claimed_tasks?: StringNullableListFilter<"user">
    enable_email_notice?: BoolFilter<"user"> | boolean
    daily_image_count?: IntFilter<"user"> | number
    daily_check_in?: IntFilter<"user"> | number
    daily_upload_size?: FloatFilter<"user"> | number
    last_login_time?: StringFilter<"user"> | string
    created?: DateTimeFilter<"user"> | Date | string
    updated?: DateTimeFilter<"user"> | Date | string
    admin_log?: Admin_logListRelationFilter
    patch_tag?: Patch_tagListRelationFilter
    patch_comment_like?: User_patch_comment_like_relationListRelationFilter
    patch_resource_like?: User_patch_resource_like_relationListRelationFilter
    patch_favorite_folder?: User_patch_favorite_folderListRelationFilter
    following?: User_follow_relationListRelationFilter
    follower?: User_follow_relationListRelationFilter
    patch?: PatchListRelationFilter
    patch_comment?: Patch_commentListRelationFilter
    patch_resource?: Patch_resourceListRelationFilter
    patch_character?: Patch_characterListRelationFilter
    send_message?: User_messageListRelationFilter
    receive_message?: User_messageListRelationFilter
  }, "id" | "name" | "email">

  export type userOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
    ip?: SortOrder
    avatar?: SortOrder
    role?: SortOrder
    status?: SortOrder
    register_time?: SortOrder
    moemoepoint?: SortOrder
    bio?: SortOrder
    claimed_tasks?: SortOrder
    enable_email_notice?: SortOrder
    daily_image_count?: SortOrder
    daily_check_in?: SortOrder
    daily_upload_size?: SortOrder
    last_login_time?: SortOrder
    created?: SortOrder
    updated?: SortOrder
    _count?: userCountOrderByAggregateInput
    _avg?: userAvgOrderByAggregateInput
    _max?: userMaxOrderByAggregateInput
    _min?: userMinOrderByAggregateInput
    _sum?: userSumOrderByAggregateInput
  }

  export type userScalarWhereWithAggregatesInput = {
    AND?: userScalarWhereWithAggregatesInput | userScalarWhereWithAggregatesInput[]
    OR?: userScalarWhereWithAggregatesInput[]
    NOT?: userScalarWhereWithAggregatesInput | userScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"user"> | number
    name?: StringWithAggregatesFilter<"user"> | string
    email?: StringWithAggregatesFilter<"user"> | string
    password?: StringWithAggregatesFilter<"user"> | string
    ip?: StringWithAggregatesFilter<"user"> | string
    avatar?: StringWithAggregatesFilter<"user"> | string
    role?: IntWithAggregatesFilter<"user"> | number
    status?: IntWithAggregatesFilter<"user"> | number
    register_time?: DateTimeWithAggregatesFilter<"user"> | Date | string
    moemoepoint?: IntWithAggregatesFilter<"user"> | number
    bio?: StringWithAggregatesFilter<"user"> | string
    claimed_tasks?: StringNullableListFilter<"user">
    enable_email_notice?: BoolWithAggregatesFilter<"user"> | boolean
    daily_image_count?: IntWithAggregatesFilter<"user"> | number
    daily_check_in?: IntWithAggregatesFilter<"user"> | number
    daily_upload_size?: FloatWithAggregatesFilter<"user"> | number
    last_login_time?: StringWithAggregatesFilter<"user"> | string
    created?: DateTimeWithAggregatesFilter<"user"> | Date | string
    updated?: DateTimeWithAggregatesFilter<"user"> | Date | string
  }

  export type admin_logWhereInput = {
    AND?: admin_logWhereInput | admin_logWhereInput[]
    OR?: admin_logWhereInput[]
    NOT?: admin_logWhereInput | admin_logWhereInput[]
    id?: IntFilter<"admin_log"> | number
    type?: StringFilter<"admin_log"> | string
    content?: StringFilter<"admin_log"> | string
    status?: IntFilter<"admin_log"> | number
    user_id?: IntFilter<"admin_log"> | number
    created?: DateTimeFilter<"admin_log"> | Date | string
    updated?: DateTimeFilter<"admin_log"> | Date | string
    user?: XOR<UserScalarRelationFilter, userWhereInput>
  }

  export type admin_logOrderByWithRelationInput = {
    id?: SortOrder
    type?: SortOrder
    content?: SortOrder
    status?: SortOrder
    user_id?: SortOrder
    created?: SortOrder
    updated?: SortOrder
    user?: userOrderByWithRelationInput
  }

  export type admin_logWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: admin_logWhereInput | admin_logWhereInput[]
    OR?: admin_logWhereInput[]
    NOT?: admin_logWhereInput | admin_logWhereInput[]
    type?: StringFilter<"admin_log"> | string
    content?: StringFilter<"admin_log"> | string
    status?: IntFilter<"admin_log"> | number
    user_id?: IntFilter<"admin_log"> | number
    created?: DateTimeFilter<"admin_log"> | Date | string
    updated?: DateTimeFilter<"admin_log"> | Date | string
    user?: XOR<UserScalarRelationFilter, userWhereInput>
  }, "id">

  export type admin_logOrderByWithAggregationInput = {
    id?: SortOrder
    type?: SortOrder
    content?: SortOrder
    status?: SortOrder
    user_id?: SortOrder
    created?: SortOrder
    updated?: SortOrder
    _count?: admin_logCountOrderByAggregateInput
    _avg?: admin_logAvgOrderByAggregateInput
    _max?: admin_logMaxOrderByAggregateInput
    _min?: admin_logMinOrderByAggregateInput
    _sum?: admin_logSumOrderByAggregateInput
  }

  export type admin_logScalarWhereWithAggregatesInput = {
    AND?: admin_logScalarWhereWithAggregatesInput | admin_logScalarWhereWithAggregatesInput[]
    OR?: admin_logScalarWhereWithAggregatesInput[]
    NOT?: admin_logScalarWhereWithAggregatesInput | admin_logScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"admin_log"> | number
    type?: StringWithAggregatesFilter<"admin_log"> | string
    content?: StringWithAggregatesFilter<"admin_log"> | string
    status?: IntWithAggregatesFilter<"admin_log"> | number
    user_id?: IntWithAggregatesFilter<"admin_log"> | number
    created?: DateTimeWithAggregatesFilter<"admin_log"> | Date | string
    updated?: DateTimeWithAggregatesFilter<"admin_log"> | Date | string
  }

  export type user_follow_relationWhereInput = {
    AND?: user_follow_relationWhereInput | user_follow_relationWhereInput[]
    OR?: user_follow_relationWhereInput[]
    NOT?: user_follow_relationWhereInput | user_follow_relationWhereInput[]
    id?: IntFilter<"user_follow_relation"> | number
    follower_id?: IntFilter<"user_follow_relation"> | number
    following_id?: IntFilter<"user_follow_relation"> | number
    follower?: XOR<UserScalarRelationFilter, userWhereInput>
    following?: XOR<UserScalarRelationFilter, userWhereInput>
  }

  export type user_follow_relationOrderByWithRelationInput = {
    id?: SortOrder
    follower_id?: SortOrder
    following_id?: SortOrder
    follower?: userOrderByWithRelationInput
    following?: userOrderByWithRelationInput
  }

  export type user_follow_relationWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    follower_id_following_id?: user_follow_relationFollower_idFollowing_idCompoundUniqueInput
    AND?: user_follow_relationWhereInput | user_follow_relationWhereInput[]
    OR?: user_follow_relationWhereInput[]
    NOT?: user_follow_relationWhereInput | user_follow_relationWhereInput[]
    follower_id?: IntFilter<"user_follow_relation"> | number
    following_id?: IntFilter<"user_follow_relation"> | number
    follower?: XOR<UserScalarRelationFilter, userWhereInput>
    following?: XOR<UserScalarRelationFilter, userWhereInput>
  }, "id" | "follower_id_following_id">

  export type user_follow_relationOrderByWithAggregationInput = {
    id?: SortOrder
    follower_id?: SortOrder
    following_id?: SortOrder
    _count?: user_follow_relationCountOrderByAggregateInput
    _avg?: user_follow_relationAvgOrderByAggregateInput
    _max?: user_follow_relationMaxOrderByAggregateInput
    _min?: user_follow_relationMinOrderByAggregateInput
    _sum?: user_follow_relationSumOrderByAggregateInput
  }

  export type user_follow_relationScalarWhereWithAggregatesInput = {
    AND?: user_follow_relationScalarWhereWithAggregatesInput | user_follow_relationScalarWhereWithAggregatesInput[]
    OR?: user_follow_relationScalarWhereWithAggregatesInput[]
    NOT?: user_follow_relationScalarWhereWithAggregatesInput | user_follow_relationScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"user_follow_relation"> | number
    follower_id?: IntWithAggregatesFilter<"user_follow_relation"> | number
    following_id?: IntWithAggregatesFilter<"user_follow_relation"> | number
  }

  export type user_messageWhereInput = {
    AND?: user_messageWhereInput | user_messageWhereInput[]
    OR?: user_messageWhereInput[]
    NOT?: user_messageWhereInput | user_messageWhereInput[]
    id?: IntFilter<"user_message"> | number
    type?: StringFilter<"user_message"> | string
    content?: StringFilter<"user_message"> | string
    status?: IntFilter<"user_message"> | number
    link?: StringFilter<"user_message"> | string
    sender_id?: IntNullableFilter<"user_message"> | number | null
    recipient_id?: IntNullableFilter<"user_message"> | number | null
    created?: DateTimeFilter<"user_message"> | Date | string
    updated?: DateTimeFilter<"user_message"> | Date | string
    sender?: XOR<UserNullableScalarRelationFilter, userWhereInput> | null
    recipient?: XOR<UserNullableScalarRelationFilter, userWhereInput> | null
  }

  export type user_messageOrderByWithRelationInput = {
    id?: SortOrder
    type?: SortOrder
    content?: SortOrder
    status?: SortOrder
    link?: SortOrder
    sender_id?: SortOrderInput | SortOrder
    recipient_id?: SortOrderInput | SortOrder
    created?: SortOrder
    updated?: SortOrder
    sender?: userOrderByWithRelationInput
    recipient?: userOrderByWithRelationInput
  }

  export type user_messageWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: user_messageWhereInput | user_messageWhereInput[]
    OR?: user_messageWhereInput[]
    NOT?: user_messageWhereInput | user_messageWhereInput[]
    type?: StringFilter<"user_message"> | string
    content?: StringFilter<"user_message"> | string
    status?: IntFilter<"user_message"> | number
    link?: StringFilter<"user_message"> | string
    sender_id?: IntNullableFilter<"user_message"> | number | null
    recipient_id?: IntNullableFilter<"user_message"> | number | null
    created?: DateTimeFilter<"user_message"> | Date | string
    updated?: DateTimeFilter<"user_message"> | Date | string
    sender?: XOR<UserNullableScalarRelationFilter, userWhereInput> | null
    recipient?: XOR<UserNullableScalarRelationFilter, userWhereInput> | null
  }, "id">

  export type user_messageOrderByWithAggregationInput = {
    id?: SortOrder
    type?: SortOrder
    content?: SortOrder
    status?: SortOrder
    link?: SortOrder
    sender_id?: SortOrderInput | SortOrder
    recipient_id?: SortOrderInput | SortOrder
    created?: SortOrder
    updated?: SortOrder
    _count?: user_messageCountOrderByAggregateInput
    _avg?: user_messageAvgOrderByAggregateInput
    _max?: user_messageMaxOrderByAggregateInput
    _min?: user_messageMinOrderByAggregateInput
    _sum?: user_messageSumOrderByAggregateInput
  }

  export type user_messageScalarWhereWithAggregatesInput = {
    AND?: user_messageScalarWhereWithAggregatesInput | user_messageScalarWhereWithAggregatesInput[]
    OR?: user_messageScalarWhereWithAggregatesInput[]
    NOT?: user_messageScalarWhereWithAggregatesInput | user_messageScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"user_message"> | number
    type?: StringWithAggregatesFilter<"user_message"> | string
    content?: StringWithAggregatesFilter<"user_message"> | string
    status?: IntWithAggregatesFilter<"user_message"> | number
    link?: StringWithAggregatesFilter<"user_message"> | string
    sender_id?: IntNullableWithAggregatesFilter<"user_message"> | number | null
    recipient_id?: IntNullableWithAggregatesFilter<"user_message"> | number | null
    created?: DateTimeWithAggregatesFilter<"user_message"> | Date | string
    updated?: DateTimeWithAggregatesFilter<"user_message"> | Date | string
  }

  export type user_patch_favorite_folderWhereInput = {
    AND?: user_patch_favorite_folderWhereInput | user_patch_favorite_folderWhereInput[]
    OR?: user_patch_favorite_folderWhereInput[]
    NOT?: user_patch_favorite_folderWhereInput | user_patch_favorite_folderWhereInput[]
    id?: IntFilter<"user_patch_favorite_folder"> | number
    name?: StringFilter<"user_patch_favorite_folder"> | string
    description?: StringFilter<"user_patch_favorite_folder"> | string
    is_public?: BoolFilter<"user_patch_favorite_folder"> | boolean
    user_id?: IntFilter<"user_patch_favorite_folder"> | number
    created?: DateTimeFilter<"user_patch_favorite_folder"> | Date | string
    updated?: DateTimeFilter<"user_patch_favorite_folder"> | Date | string
    user?: XOR<UserScalarRelationFilter, userWhereInput>
    patch?: User_patch_favorite_folder_relationListRelationFilter
  }

  export type user_patch_favorite_folderOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    is_public?: SortOrder
    user_id?: SortOrder
    created?: SortOrder
    updated?: SortOrder
    user?: userOrderByWithRelationInput
    patch?: user_patch_favorite_folder_relationOrderByRelationAggregateInput
  }

  export type user_patch_favorite_folderWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    user_id_name?: user_patch_favorite_folderUser_idNameCompoundUniqueInput
    AND?: user_patch_favorite_folderWhereInput | user_patch_favorite_folderWhereInput[]
    OR?: user_patch_favorite_folderWhereInput[]
    NOT?: user_patch_favorite_folderWhereInput | user_patch_favorite_folderWhereInput[]
    name?: StringFilter<"user_patch_favorite_folder"> | string
    description?: StringFilter<"user_patch_favorite_folder"> | string
    is_public?: BoolFilter<"user_patch_favorite_folder"> | boolean
    user_id?: IntFilter<"user_patch_favorite_folder"> | number
    created?: DateTimeFilter<"user_patch_favorite_folder"> | Date | string
    updated?: DateTimeFilter<"user_patch_favorite_folder"> | Date | string
    user?: XOR<UserScalarRelationFilter, userWhereInput>
    patch?: User_patch_favorite_folder_relationListRelationFilter
  }, "id" | "user_id_name">

  export type user_patch_favorite_folderOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    is_public?: SortOrder
    user_id?: SortOrder
    created?: SortOrder
    updated?: SortOrder
    _count?: user_patch_favorite_folderCountOrderByAggregateInput
    _avg?: user_patch_favorite_folderAvgOrderByAggregateInput
    _max?: user_patch_favorite_folderMaxOrderByAggregateInput
    _min?: user_patch_favorite_folderMinOrderByAggregateInput
    _sum?: user_patch_favorite_folderSumOrderByAggregateInput
  }

  export type user_patch_favorite_folderScalarWhereWithAggregatesInput = {
    AND?: user_patch_favorite_folderScalarWhereWithAggregatesInput | user_patch_favorite_folderScalarWhereWithAggregatesInput[]
    OR?: user_patch_favorite_folderScalarWhereWithAggregatesInput[]
    NOT?: user_patch_favorite_folderScalarWhereWithAggregatesInput | user_patch_favorite_folderScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"user_patch_favorite_folder"> | number
    name?: StringWithAggregatesFilter<"user_patch_favorite_folder"> | string
    description?: StringWithAggregatesFilter<"user_patch_favorite_folder"> | string
    is_public?: BoolWithAggregatesFilter<"user_patch_favorite_folder"> | boolean
    user_id?: IntWithAggregatesFilter<"user_patch_favorite_folder"> | number
    created?: DateTimeWithAggregatesFilter<"user_patch_favorite_folder"> | Date | string
    updated?: DateTimeWithAggregatesFilter<"user_patch_favorite_folder"> | Date | string
  }

  export type user_patch_favorite_folder_relationWhereInput = {
    AND?: user_patch_favorite_folder_relationWhereInput | user_patch_favorite_folder_relationWhereInput[]
    OR?: user_patch_favorite_folder_relationWhereInput[]
    NOT?: user_patch_favorite_folder_relationWhereInput | user_patch_favorite_folder_relationWhereInput[]
    id?: IntFilter<"user_patch_favorite_folder_relation"> | number
    folder_id?: IntFilter<"user_patch_favorite_folder_relation"> | number
    patch_id?: IntFilter<"user_patch_favorite_folder_relation"> | number
    created?: DateTimeFilter<"user_patch_favorite_folder_relation"> | Date | string
    updated?: DateTimeFilter<"user_patch_favorite_folder_relation"> | Date | string
    folder?: XOR<User_patch_favorite_folderScalarRelationFilter, user_patch_favorite_folderWhereInput>
    patch?: XOR<PatchScalarRelationFilter, patchWhereInput>
  }

  export type user_patch_favorite_folder_relationOrderByWithRelationInput = {
    id?: SortOrder
    folder_id?: SortOrder
    patch_id?: SortOrder
    created?: SortOrder
    updated?: SortOrder
    folder?: user_patch_favorite_folderOrderByWithRelationInput
    patch?: patchOrderByWithRelationInput
  }

  export type user_patch_favorite_folder_relationWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    folder_id_patch_id?: user_patch_favorite_folder_relationFolder_idPatch_idCompoundUniqueInput
    AND?: user_patch_favorite_folder_relationWhereInput | user_patch_favorite_folder_relationWhereInput[]
    OR?: user_patch_favorite_folder_relationWhereInput[]
    NOT?: user_patch_favorite_folder_relationWhereInput | user_patch_favorite_folder_relationWhereInput[]
    folder_id?: IntFilter<"user_patch_favorite_folder_relation"> | number
    patch_id?: IntFilter<"user_patch_favorite_folder_relation"> | number
    created?: DateTimeFilter<"user_patch_favorite_folder_relation"> | Date | string
    updated?: DateTimeFilter<"user_patch_favorite_folder_relation"> | Date | string
    folder?: XOR<User_patch_favorite_folderScalarRelationFilter, user_patch_favorite_folderWhereInput>
    patch?: XOR<PatchScalarRelationFilter, patchWhereInput>
  }, "id" | "folder_id_patch_id">

  export type user_patch_favorite_folder_relationOrderByWithAggregationInput = {
    id?: SortOrder
    folder_id?: SortOrder
    patch_id?: SortOrder
    created?: SortOrder
    updated?: SortOrder
    _count?: user_patch_favorite_folder_relationCountOrderByAggregateInput
    _avg?: user_patch_favorite_folder_relationAvgOrderByAggregateInput
    _max?: user_patch_favorite_folder_relationMaxOrderByAggregateInput
    _min?: user_patch_favorite_folder_relationMinOrderByAggregateInput
    _sum?: user_patch_favorite_folder_relationSumOrderByAggregateInput
  }

  export type user_patch_favorite_folder_relationScalarWhereWithAggregatesInput = {
    AND?: user_patch_favorite_folder_relationScalarWhereWithAggregatesInput | user_patch_favorite_folder_relationScalarWhereWithAggregatesInput[]
    OR?: user_patch_favorite_folder_relationScalarWhereWithAggregatesInput[]
    NOT?: user_patch_favorite_folder_relationScalarWhereWithAggregatesInput | user_patch_favorite_folder_relationScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"user_patch_favorite_folder_relation"> | number
    folder_id?: IntWithAggregatesFilter<"user_patch_favorite_folder_relation"> | number
    patch_id?: IntWithAggregatesFilter<"user_patch_favorite_folder_relation"> | number
    created?: DateTimeWithAggregatesFilter<"user_patch_favorite_folder_relation"> | Date | string
    updated?: DateTimeWithAggregatesFilter<"user_patch_favorite_folder_relation"> | Date | string
  }

  export type user_patch_comment_like_relationWhereInput = {
    AND?: user_patch_comment_like_relationWhereInput | user_patch_comment_like_relationWhereInput[]
    OR?: user_patch_comment_like_relationWhereInput[]
    NOT?: user_patch_comment_like_relationWhereInput | user_patch_comment_like_relationWhereInput[]
    id?: IntFilter<"user_patch_comment_like_relation"> | number
    user_id?: IntFilter<"user_patch_comment_like_relation"> | number
    comment_id?: IntFilter<"user_patch_comment_like_relation"> | number
    created?: DateTimeFilter<"user_patch_comment_like_relation"> | Date | string
    updated?: DateTimeFilter<"user_patch_comment_like_relation"> | Date | string
    user?: XOR<UserScalarRelationFilter, userWhereInput>
    comment?: XOR<Patch_commentScalarRelationFilter, patch_commentWhereInput>
  }

  export type user_patch_comment_like_relationOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    comment_id?: SortOrder
    created?: SortOrder
    updated?: SortOrder
    user?: userOrderByWithRelationInput
    comment?: patch_commentOrderByWithRelationInput
  }

  export type user_patch_comment_like_relationWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    user_id_comment_id?: user_patch_comment_like_relationUser_idComment_idCompoundUniqueInput
    AND?: user_patch_comment_like_relationWhereInput | user_patch_comment_like_relationWhereInput[]
    OR?: user_patch_comment_like_relationWhereInput[]
    NOT?: user_patch_comment_like_relationWhereInput | user_patch_comment_like_relationWhereInput[]
    user_id?: IntFilter<"user_patch_comment_like_relation"> | number
    comment_id?: IntFilter<"user_patch_comment_like_relation"> | number
    created?: DateTimeFilter<"user_patch_comment_like_relation"> | Date | string
    updated?: DateTimeFilter<"user_patch_comment_like_relation"> | Date | string
    user?: XOR<UserScalarRelationFilter, userWhereInput>
    comment?: XOR<Patch_commentScalarRelationFilter, patch_commentWhereInput>
  }, "id" | "user_id_comment_id">

  export type user_patch_comment_like_relationOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    comment_id?: SortOrder
    created?: SortOrder
    updated?: SortOrder
    _count?: user_patch_comment_like_relationCountOrderByAggregateInput
    _avg?: user_patch_comment_like_relationAvgOrderByAggregateInput
    _max?: user_patch_comment_like_relationMaxOrderByAggregateInput
    _min?: user_patch_comment_like_relationMinOrderByAggregateInput
    _sum?: user_patch_comment_like_relationSumOrderByAggregateInput
  }

  export type user_patch_comment_like_relationScalarWhereWithAggregatesInput = {
    AND?: user_patch_comment_like_relationScalarWhereWithAggregatesInput | user_patch_comment_like_relationScalarWhereWithAggregatesInput[]
    OR?: user_patch_comment_like_relationScalarWhereWithAggregatesInput[]
    NOT?: user_patch_comment_like_relationScalarWhereWithAggregatesInput | user_patch_comment_like_relationScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"user_patch_comment_like_relation"> | number
    user_id?: IntWithAggregatesFilter<"user_patch_comment_like_relation"> | number
    comment_id?: IntWithAggregatesFilter<"user_patch_comment_like_relation"> | number
    created?: DateTimeWithAggregatesFilter<"user_patch_comment_like_relation"> | Date | string
    updated?: DateTimeWithAggregatesFilter<"user_patch_comment_like_relation"> | Date | string
  }

  export type user_patch_resource_like_relationWhereInput = {
    AND?: user_patch_resource_like_relationWhereInput | user_patch_resource_like_relationWhereInput[]
    OR?: user_patch_resource_like_relationWhereInput[]
    NOT?: user_patch_resource_like_relationWhereInput | user_patch_resource_like_relationWhereInput[]
    id?: IntFilter<"user_patch_resource_like_relation"> | number
    user_id?: IntFilter<"user_patch_resource_like_relation"> | number
    resource_id?: IntFilter<"user_patch_resource_like_relation"> | number
    created?: DateTimeFilter<"user_patch_resource_like_relation"> | Date | string
    updated?: DateTimeFilter<"user_patch_resource_like_relation"> | Date | string
    user?: XOR<UserScalarRelationFilter, userWhereInput>
    resource?: XOR<Patch_resourceScalarRelationFilter, patch_resourceWhereInput>
  }

  export type user_patch_resource_like_relationOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    resource_id?: SortOrder
    created?: SortOrder
    updated?: SortOrder
    user?: userOrderByWithRelationInput
    resource?: patch_resourceOrderByWithRelationInput
  }

  export type user_patch_resource_like_relationWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    user_id_resource_id?: user_patch_resource_like_relationUser_idResource_idCompoundUniqueInput
    AND?: user_patch_resource_like_relationWhereInput | user_patch_resource_like_relationWhereInput[]
    OR?: user_patch_resource_like_relationWhereInput[]
    NOT?: user_patch_resource_like_relationWhereInput | user_patch_resource_like_relationWhereInput[]
    user_id?: IntFilter<"user_patch_resource_like_relation"> | number
    resource_id?: IntFilter<"user_patch_resource_like_relation"> | number
    created?: DateTimeFilter<"user_patch_resource_like_relation"> | Date | string
    updated?: DateTimeFilter<"user_patch_resource_like_relation"> | Date | string
    user?: XOR<UserScalarRelationFilter, userWhereInput>
    resource?: XOR<Patch_resourceScalarRelationFilter, patch_resourceWhereInput>
  }, "id" | "user_id_resource_id">

  export type user_patch_resource_like_relationOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    resource_id?: SortOrder
    created?: SortOrder
    updated?: SortOrder
    _count?: user_patch_resource_like_relationCountOrderByAggregateInput
    _avg?: user_patch_resource_like_relationAvgOrderByAggregateInput
    _max?: user_patch_resource_like_relationMaxOrderByAggregateInput
    _min?: user_patch_resource_like_relationMinOrderByAggregateInput
    _sum?: user_patch_resource_like_relationSumOrderByAggregateInput
  }

  export type user_patch_resource_like_relationScalarWhereWithAggregatesInput = {
    AND?: user_patch_resource_like_relationScalarWhereWithAggregatesInput | user_patch_resource_like_relationScalarWhereWithAggregatesInput[]
    OR?: user_patch_resource_like_relationScalarWhereWithAggregatesInput[]
    NOT?: user_patch_resource_like_relationScalarWhereWithAggregatesInput | user_patch_resource_like_relationScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"user_patch_resource_like_relation"> | number
    user_id?: IntWithAggregatesFilter<"user_patch_resource_like_relation"> | number
    resource_id?: IntWithAggregatesFilter<"user_patch_resource_like_relation"> | number
    created?: DateTimeWithAggregatesFilter<"user_patch_resource_like_relation"> | Date | string
    updated?: DateTimeWithAggregatesFilter<"user_patch_resource_like_relation"> | Date | string
  }

  export type patchWhereInput = {
    AND?: patchWhereInput | patchWhereInput[]
    OR?: patchWhereInput[]
    NOT?: patchWhereInput | patchWhereInput[]
    id?: IntFilter<"patch"> | number
    unique_id?: StringFilter<"patch"> | string
    name?: StringFilter<"patch"> | string
    vndb_id?: StringNullableFilter<"patch"> | string | null
    banner?: StringFilter<"patch"> | string
    introduction?: StringFilter<"patch"> | string
    released?: StringFilter<"patch"> | string
    content_limit?: StringFilter<"patch"> | string
    status?: IntFilter<"patch"> | number
    download?: IntFilter<"patch"> | number
    view?: IntFilter<"patch"> | number
    resource_update_time?: DateTimeFilter<"patch"> | Date | string
    type?: StringNullableListFilter<"patch">
    language?: StringNullableListFilter<"patch">
    engine?: StringNullableListFilter<"patch">
    platform?: StringNullableListFilter<"patch">
    user_id?: IntFilter<"patch"> | number
    created?: DateTimeFilter<"patch"> | Date | string
    updated?: DateTimeFilter<"patch"> | Date | string
    user?: XOR<UserScalarRelationFilter, userWhereInput>
    alias?: Patch_aliasListRelationFilter
    tag?: Patch_tag_relationListRelationFilter
    favorite_folder?: User_patch_favorite_folder_relationListRelationFilter
    resource?: Patch_resourceListRelationFilter
    comment?: Patch_commentListRelationFilter
    characters?: Patch_characterListRelationFilter
  }

  export type patchOrderByWithRelationInput = {
    id?: SortOrder
    unique_id?: SortOrder
    name?: SortOrder
    vndb_id?: SortOrderInput | SortOrder
    banner?: SortOrder
    introduction?: SortOrder
    released?: SortOrder
    content_limit?: SortOrder
    status?: SortOrder
    download?: SortOrder
    view?: SortOrder
    resource_update_time?: SortOrder
    type?: SortOrder
    language?: SortOrder
    engine?: SortOrder
    platform?: SortOrder
    user_id?: SortOrder
    created?: SortOrder
    updated?: SortOrder
    user?: userOrderByWithRelationInput
    alias?: patch_aliasOrderByRelationAggregateInput
    tag?: patch_tag_relationOrderByRelationAggregateInput
    favorite_folder?: user_patch_favorite_folder_relationOrderByRelationAggregateInput
    resource?: patch_resourceOrderByRelationAggregateInput
    comment?: patch_commentOrderByRelationAggregateInput
    characters?: patch_characterOrderByRelationAggregateInput
  }

  export type patchWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    unique_id?: string
    vndb_id?: string
    AND?: patchWhereInput | patchWhereInput[]
    OR?: patchWhereInput[]
    NOT?: patchWhereInput | patchWhereInput[]
    name?: StringFilter<"patch"> | string
    banner?: StringFilter<"patch"> | string
    introduction?: StringFilter<"patch"> | string
    released?: StringFilter<"patch"> | string
    content_limit?: StringFilter<"patch"> | string
    status?: IntFilter<"patch"> | number
    download?: IntFilter<"patch"> | number
    view?: IntFilter<"patch"> | number
    resource_update_time?: DateTimeFilter<"patch"> | Date | string
    type?: StringNullableListFilter<"patch">
    language?: StringNullableListFilter<"patch">
    engine?: StringNullableListFilter<"patch">
    platform?: StringNullableListFilter<"patch">
    user_id?: IntFilter<"patch"> | number
    created?: DateTimeFilter<"patch"> | Date | string
    updated?: DateTimeFilter<"patch"> | Date | string
    user?: XOR<UserScalarRelationFilter, userWhereInput>
    alias?: Patch_aliasListRelationFilter
    tag?: Patch_tag_relationListRelationFilter
    favorite_folder?: User_patch_favorite_folder_relationListRelationFilter
    resource?: Patch_resourceListRelationFilter
    comment?: Patch_commentListRelationFilter
    characters?: Patch_characterListRelationFilter
  }, "id" | "unique_id" | "vndb_id">

  export type patchOrderByWithAggregationInput = {
    id?: SortOrder
    unique_id?: SortOrder
    name?: SortOrder
    vndb_id?: SortOrderInput | SortOrder
    banner?: SortOrder
    introduction?: SortOrder
    released?: SortOrder
    content_limit?: SortOrder
    status?: SortOrder
    download?: SortOrder
    view?: SortOrder
    resource_update_time?: SortOrder
    type?: SortOrder
    language?: SortOrder
    engine?: SortOrder
    platform?: SortOrder
    user_id?: SortOrder
    created?: SortOrder
    updated?: SortOrder
    _count?: patchCountOrderByAggregateInput
    _avg?: patchAvgOrderByAggregateInput
    _max?: patchMaxOrderByAggregateInput
    _min?: patchMinOrderByAggregateInput
    _sum?: patchSumOrderByAggregateInput
  }

  export type patchScalarWhereWithAggregatesInput = {
    AND?: patchScalarWhereWithAggregatesInput | patchScalarWhereWithAggregatesInput[]
    OR?: patchScalarWhereWithAggregatesInput[]
    NOT?: patchScalarWhereWithAggregatesInput | patchScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"patch"> | number
    unique_id?: StringWithAggregatesFilter<"patch"> | string
    name?: StringWithAggregatesFilter<"patch"> | string
    vndb_id?: StringNullableWithAggregatesFilter<"patch"> | string | null
    banner?: StringWithAggregatesFilter<"patch"> | string
    introduction?: StringWithAggregatesFilter<"patch"> | string
    released?: StringWithAggregatesFilter<"patch"> | string
    content_limit?: StringWithAggregatesFilter<"patch"> | string
    status?: IntWithAggregatesFilter<"patch"> | number
    download?: IntWithAggregatesFilter<"patch"> | number
    view?: IntWithAggregatesFilter<"patch"> | number
    resource_update_time?: DateTimeWithAggregatesFilter<"patch"> | Date | string
    type?: StringNullableListFilter<"patch">
    language?: StringNullableListFilter<"patch">
    engine?: StringNullableListFilter<"patch">
    platform?: StringNullableListFilter<"patch">
    user_id?: IntWithAggregatesFilter<"patch"> | number
    created?: DateTimeWithAggregatesFilter<"patch"> | Date | string
    updated?: DateTimeWithAggregatesFilter<"patch"> | Date | string
  }

  export type patch_aliasWhereInput = {
    AND?: patch_aliasWhereInput | patch_aliasWhereInput[]
    OR?: patch_aliasWhereInput[]
    NOT?: patch_aliasWhereInput | patch_aliasWhereInput[]
    id?: IntFilter<"patch_alias"> | number
    name?: StringFilter<"patch_alias"> | string
    patch_id?: IntFilter<"patch_alias"> | number
    created?: DateTimeFilter<"patch_alias"> | Date | string
    updated?: DateTimeFilter<"patch_alias"> | Date | string
    patch?: XOR<PatchScalarRelationFilter, patchWhereInput>
  }

  export type patch_aliasOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    patch_id?: SortOrder
    created?: SortOrder
    updated?: SortOrder
    patch?: patchOrderByWithRelationInput
  }

  export type patch_aliasWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: patch_aliasWhereInput | patch_aliasWhereInput[]
    OR?: patch_aliasWhereInput[]
    NOT?: patch_aliasWhereInput | patch_aliasWhereInput[]
    name?: StringFilter<"patch_alias"> | string
    patch_id?: IntFilter<"patch_alias"> | number
    created?: DateTimeFilter<"patch_alias"> | Date | string
    updated?: DateTimeFilter<"patch_alias"> | Date | string
    patch?: XOR<PatchScalarRelationFilter, patchWhereInput>
  }, "id">

  export type patch_aliasOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    patch_id?: SortOrder
    created?: SortOrder
    updated?: SortOrder
    _count?: patch_aliasCountOrderByAggregateInput
    _avg?: patch_aliasAvgOrderByAggregateInput
    _max?: patch_aliasMaxOrderByAggregateInput
    _min?: patch_aliasMinOrderByAggregateInput
    _sum?: patch_aliasSumOrderByAggregateInput
  }

  export type patch_aliasScalarWhereWithAggregatesInput = {
    AND?: patch_aliasScalarWhereWithAggregatesInput | patch_aliasScalarWhereWithAggregatesInput[]
    OR?: patch_aliasScalarWhereWithAggregatesInput[]
    NOT?: patch_aliasScalarWhereWithAggregatesInput | patch_aliasScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"patch_alias"> | number
    name?: StringWithAggregatesFilter<"patch_alias"> | string
    patch_id?: IntWithAggregatesFilter<"patch_alias"> | number
    created?: DateTimeWithAggregatesFilter<"patch_alias"> | Date | string
    updated?: DateTimeWithAggregatesFilter<"patch_alias"> | Date | string
  }

  export type patch_tagWhereInput = {
    AND?: patch_tagWhereInput | patch_tagWhereInput[]
    OR?: patch_tagWhereInput[]
    NOT?: patch_tagWhereInput | patch_tagWhereInput[]
    id?: IntFilter<"patch_tag"> | number
    name?: StringFilter<"patch_tag"> | string
    introduction?: StringFilter<"patch_tag"> | string
    count?: IntFilter<"patch_tag"> | number
    alias?: StringNullableListFilter<"patch_tag">
    user_id?: IntFilter<"patch_tag"> | number
    created?: DateTimeFilter<"patch_tag"> | Date | string
    updated?: DateTimeFilter<"patch_tag"> | Date | string
    patch_relation?: Patch_tag_relationListRelationFilter
    user?: XOR<UserScalarRelationFilter, userWhereInput>
  }

  export type patch_tagOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    introduction?: SortOrder
    count?: SortOrder
    alias?: SortOrder
    user_id?: SortOrder
    created?: SortOrder
    updated?: SortOrder
    patch_relation?: patch_tag_relationOrderByRelationAggregateInput
    user?: userOrderByWithRelationInput
  }

  export type patch_tagWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    name?: string
    AND?: patch_tagWhereInput | patch_tagWhereInput[]
    OR?: patch_tagWhereInput[]
    NOT?: patch_tagWhereInput | patch_tagWhereInput[]
    introduction?: StringFilter<"patch_tag"> | string
    count?: IntFilter<"patch_tag"> | number
    alias?: StringNullableListFilter<"patch_tag">
    user_id?: IntFilter<"patch_tag"> | number
    created?: DateTimeFilter<"patch_tag"> | Date | string
    updated?: DateTimeFilter<"patch_tag"> | Date | string
    patch_relation?: Patch_tag_relationListRelationFilter
    user?: XOR<UserScalarRelationFilter, userWhereInput>
  }, "id" | "name">

  export type patch_tagOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    introduction?: SortOrder
    count?: SortOrder
    alias?: SortOrder
    user_id?: SortOrder
    created?: SortOrder
    updated?: SortOrder
    _count?: patch_tagCountOrderByAggregateInput
    _avg?: patch_tagAvgOrderByAggregateInput
    _max?: patch_tagMaxOrderByAggregateInput
    _min?: patch_tagMinOrderByAggregateInput
    _sum?: patch_tagSumOrderByAggregateInput
  }

  export type patch_tagScalarWhereWithAggregatesInput = {
    AND?: patch_tagScalarWhereWithAggregatesInput | patch_tagScalarWhereWithAggregatesInput[]
    OR?: patch_tagScalarWhereWithAggregatesInput[]
    NOT?: patch_tagScalarWhereWithAggregatesInput | patch_tagScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"patch_tag"> | number
    name?: StringWithAggregatesFilter<"patch_tag"> | string
    introduction?: StringWithAggregatesFilter<"patch_tag"> | string
    count?: IntWithAggregatesFilter<"patch_tag"> | number
    alias?: StringNullableListFilter<"patch_tag">
    user_id?: IntWithAggregatesFilter<"patch_tag"> | number
    created?: DateTimeWithAggregatesFilter<"patch_tag"> | Date | string
    updated?: DateTimeWithAggregatesFilter<"patch_tag"> | Date | string
  }

  export type patch_tag_relationWhereInput = {
    AND?: patch_tag_relationWhereInput | patch_tag_relationWhereInput[]
    OR?: patch_tag_relationWhereInput[]
    NOT?: patch_tag_relationWhereInput | patch_tag_relationWhereInput[]
    id?: IntFilter<"patch_tag_relation"> | number
    patch_id?: IntFilter<"patch_tag_relation"> | number
    tag_id?: IntFilter<"patch_tag_relation"> | number
    created?: DateTimeFilter<"patch_tag_relation"> | Date | string
    updated?: DateTimeFilter<"patch_tag_relation"> | Date | string
    patch?: XOR<PatchScalarRelationFilter, patchWhereInput>
    tag?: XOR<Patch_tagScalarRelationFilter, patch_tagWhereInput>
  }

  export type patch_tag_relationOrderByWithRelationInput = {
    id?: SortOrder
    patch_id?: SortOrder
    tag_id?: SortOrder
    created?: SortOrder
    updated?: SortOrder
    patch?: patchOrderByWithRelationInput
    tag?: patch_tagOrderByWithRelationInput
  }

  export type patch_tag_relationWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    patch_id_tag_id?: patch_tag_relationPatch_idTag_idCompoundUniqueInput
    AND?: patch_tag_relationWhereInput | patch_tag_relationWhereInput[]
    OR?: patch_tag_relationWhereInput[]
    NOT?: patch_tag_relationWhereInput | patch_tag_relationWhereInput[]
    patch_id?: IntFilter<"patch_tag_relation"> | number
    tag_id?: IntFilter<"patch_tag_relation"> | number
    created?: DateTimeFilter<"patch_tag_relation"> | Date | string
    updated?: DateTimeFilter<"patch_tag_relation"> | Date | string
    patch?: XOR<PatchScalarRelationFilter, patchWhereInput>
    tag?: XOR<Patch_tagScalarRelationFilter, patch_tagWhereInput>
  }, "id" | "patch_id_tag_id">

  export type patch_tag_relationOrderByWithAggregationInput = {
    id?: SortOrder
    patch_id?: SortOrder
    tag_id?: SortOrder
    created?: SortOrder
    updated?: SortOrder
    _count?: patch_tag_relationCountOrderByAggregateInput
    _avg?: patch_tag_relationAvgOrderByAggregateInput
    _max?: patch_tag_relationMaxOrderByAggregateInput
    _min?: patch_tag_relationMinOrderByAggregateInput
    _sum?: patch_tag_relationSumOrderByAggregateInput
  }

  export type patch_tag_relationScalarWhereWithAggregatesInput = {
    AND?: patch_tag_relationScalarWhereWithAggregatesInput | patch_tag_relationScalarWhereWithAggregatesInput[]
    OR?: patch_tag_relationScalarWhereWithAggregatesInput[]
    NOT?: patch_tag_relationScalarWhereWithAggregatesInput | patch_tag_relationScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"patch_tag_relation"> | number
    patch_id?: IntWithAggregatesFilter<"patch_tag_relation"> | number
    tag_id?: IntWithAggregatesFilter<"patch_tag_relation"> | number
    created?: DateTimeWithAggregatesFilter<"patch_tag_relation"> | Date | string
    updated?: DateTimeWithAggregatesFilter<"patch_tag_relation"> | Date | string
  }

  export type patch_resourceWhereInput = {
    AND?: patch_resourceWhereInput | patch_resourceWhereInput[]
    OR?: patch_resourceWhereInput[]
    NOT?: patch_resourceWhereInput | patch_resourceWhereInput[]
    id?: IntFilter<"patch_resource"> | number
    storage?: StringFilter<"patch_resource"> | string
    section?: StringFilter<"patch_resource"> | string
    name?: StringFilter<"patch_resource"> | string
    size?: StringFilter<"patch_resource"> | string
    code?: StringFilter<"patch_resource"> | string
    password?: StringFilter<"patch_resource"> | string
    note?: StringFilter<"patch_resource"> | string
    hash?: StringFilter<"patch_resource"> | string
    content?: StringFilter<"patch_resource"> | string
    type?: StringNullableListFilter<"patch_resource">
    language?: StringNullableListFilter<"patch_resource">
    platform?: StringNullableListFilter<"patch_resource">
    download?: IntFilter<"patch_resource"> | number
    status?: IntFilter<"patch_resource"> | number
    user_id?: IntFilter<"patch_resource"> | number
    patch_id?: IntFilter<"patch_resource"> | number
    created?: DateTimeFilter<"patch_resource"> | Date | string
    updated?: DateTimeFilter<"patch_resource"> | Date | string
    like_by?: User_patch_resource_like_relationListRelationFilter
    user?: XOR<UserScalarRelationFilter, userWhereInput>
    patch?: XOR<PatchScalarRelationFilter, patchWhereInput>
  }

  export type patch_resourceOrderByWithRelationInput = {
    id?: SortOrder
    storage?: SortOrder
    section?: SortOrder
    name?: SortOrder
    size?: SortOrder
    code?: SortOrder
    password?: SortOrder
    note?: SortOrder
    hash?: SortOrder
    content?: SortOrder
    type?: SortOrder
    language?: SortOrder
    platform?: SortOrder
    download?: SortOrder
    status?: SortOrder
    user_id?: SortOrder
    patch_id?: SortOrder
    created?: SortOrder
    updated?: SortOrder
    like_by?: user_patch_resource_like_relationOrderByRelationAggregateInput
    user?: userOrderByWithRelationInput
    patch?: patchOrderByWithRelationInput
  }

  export type patch_resourceWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: patch_resourceWhereInput | patch_resourceWhereInput[]
    OR?: patch_resourceWhereInput[]
    NOT?: patch_resourceWhereInput | patch_resourceWhereInput[]
    storage?: StringFilter<"patch_resource"> | string
    section?: StringFilter<"patch_resource"> | string
    name?: StringFilter<"patch_resource"> | string
    size?: StringFilter<"patch_resource"> | string
    code?: StringFilter<"patch_resource"> | string
    password?: StringFilter<"patch_resource"> | string
    note?: StringFilter<"patch_resource"> | string
    hash?: StringFilter<"patch_resource"> | string
    content?: StringFilter<"patch_resource"> | string
    type?: StringNullableListFilter<"patch_resource">
    language?: StringNullableListFilter<"patch_resource">
    platform?: StringNullableListFilter<"patch_resource">
    download?: IntFilter<"patch_resource"> | number
    status?: IntFilter<"patch_resource"> | number
    user_id?: IntFilter<"patch_resource"> | number
    patch_id?: IntFilter<"patch_resource"> | number
    created?: DateTimeFilter<"patch_resource"> | Date | string
    updated?: DateTimeFilter<"patch_resource"> | Date | string
    like_by?: User_patch_resource_like_relationListRelationFilter
    user?: XOR<UserScalarRelationFilter, userWhereInput>
    patch?: XOR<PatchScalarRelationFilter, patchWhereInput>
  }, "id">

  export type patch_resourceOrderByWithAggregationInput = {
    id?: SortOrder
    storage?: SortOrder
    section?: SortOrder
    name?: SortOrder
    size?: SortOrder
    code?: SortOrder
    password?: SortOrder
    note?: SortOrder
    hash?: SortOrder
    content?: SortOrder
    type?: SortOrder
    language?: SortOrder
    platform?: SortOrder
    download?: SortOrder
    status?: SortOrder
    user_id?: SortOrder
    patch_id?: SortOrder
    created?: SortOrder
    updated?: SortOrder
    _count?: patch_resourceCountOrderByAggregateInput
    _avg?: patch_resourceAvgOrderByAggregateInput
    _max?: patch_resourceMaxOrderByAggregateInput
    _min?: patch_resourceMinOrderByAggregateInput
    _sum?: patch_resourceSumOrderByAggregateInput
  }

  export type patch_resourceScalarWhereWithAggregatesInput = {
    AND?: patch_resourceScalarWhereWithAggregatesInput | patch_resourceScalarWhereWithAggregatesInput[]
    OR?: patch_resourceScalarWhereWithAggregatesInput[]
    NOT?: patch_resourceScalarWhereWithAggregatesInput | patch_resourceScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"patch_resource"> | number
    storage?: StringWithAggregatesFilter<"patch_resource"> | string
    section?: StringWithAggregatesFilter<"patch_resource"> | string
    name?: StringWithAggregatesFilter<"patch_resource"> | string
    size?: StringWithAggregatesFilter<"patch_resource"> | string
    code?: StringWithAggregatesFilter<"patch_resource"> | string
    password?: StringWithAggregatesFilter<"patch_resource"> | string
    note?: StringWithAggregatesFilter<"patch_resource"> | string
    hash?: StringWithAggregatesFilter<"patch_resource"> | string
    content?: StringWithAggregatesFilter<"patch_resource"> | string
    type?: StringNullableListFilter<"patch_resource">
    language?: StringNullableListFilter<"patch_resource">
    platform?: StringNullableListFilter<"patch_resource">
    download?: IntWithAggregatesFilter<"patch_resource"> | number
    status?: IntWithAggregatesFilter<"patch_resource"> | number
    user_id?: IntWithAggregatesFilter<"patch_resource"> | number
    patch_id?: IntWithAggregatesFilter<"patch_resource"> | number
    created?: DateTimeWithAggregatesFilter<"patch_resource"> | Date | string
    updated?: DateTimeWithAggregatesFilter<"patch_resource"> | Date | string
  }

  export type patch_commentWhereInput = {
    AND?: patch_commentWhereInput | patch_commentWhereInput[]
    OR?: patch_commentWhereInput[]
    NOT?: patch_commentWhereInput | patch_commentWhereInput[]
    id?: IntFilter<"patch_comment"> | number
    content?: StringFilter<"patch_comment"> | string
    edit?: StringFilter<"patch_comment"> | string
    parent_id?: IntNullableFilter<"patch_comment"> | number | null
    user_id?: IntFilter<"patch_comment"> | number
    patch_id?: IntFilter<"patch_comment"> | number
    created?: DateTimeFilter<"patch_comment"> | Date | string
    updated?: DateTimeFilter<"patch_comment"> | Date | string
    like_by?: User_patch_comment_like_relationListRelationFilter
    reply?: Patch_commentListRelationFilter
    parent?: XOR<Patch_commentNullableScalarRelationFilter, patch_commentWhereInput> | null
    user?: XOR<UserScalarRelationFilter, userWhereInput>
    patch?: XOR<PatchScalarRelationFilter, patchWhereInput>
  }

  export type patch_commentOrderByWithRelationInput = {
    id?: SortOrder
    content?: SortOrder
    edit?: SortOrder
    parent_id?: SortOrderInput | SortOrder
    user_id?: SortOrder
    patch_id?: SortOrder
    created?: SortOrder
    updated?: SortOrder
    like_by?: user_patch_comment_like_relationOrderByRelationAggregateInput
    reply?: patch_commentOrderByRelationAggregateInput
    parent?: patch_commentOrderByWithRelationInput
    user?: userOrderByWithRelationInput
    patch?: patchOrderByWithRelationInput
  }

  export type patch_commentWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: patch_commentWhereInput | patch_commentWhereInput[]
    OR?: patch_commentWhereInput[]
    NOT?: patch_commentWhereInput | patch_commentWhereInput[]
    content?: StringFilter<"patch_comment"> | string
    edit?: StringFilter<"patch_comment"> | string
    parent_id?: IntNullableFilter<"patch_comment"> | number | null
    user_id?: IntFilter<"patch_comment"> | number
    patch_id?: IntFilter<"patch_comment"> | number
    created?: DateTimeFilter<"patch_comment"> | Date | string
    updated?: DateTimeFilter<"patch_comment"> | Date | string
    like_by?: User_patch_comment_like_relationListRelationFilter
    reply?: Patch_commentListRelationFilter
    parent?: XOR<Patch_commentNullableScalarRelationFilter, patch_commentWhereInput> | null
    user?: XOR<UserScalarRelationFilter, userWhereInput>
    patch?: XOR<PatchScalarRelationFilter, patchWhereInput>
  }, "id">

  export type patch_commentOrderByWithAggregationInput = {
    id?: SortOrder
    content?: SortOrder
    edit?: SortOrder
    parent_id?: SortOrderInput | SortOrder
    user_id?: SortOrder
    patch_id?: SortOrder
    created?: SortOrder
    updated?: SortOrder
    _count?: patch_commentCountOrderByAggregateInput
    _avg?: patch_commentAvgOrderByAggregateInput
    _max?: patch_commentMaxOrderByAggregateInput
    _min?: patch_commentMinOrderByAggregateInput
    _sum?: patch_commentSumOrderByAggregateInput
  }

  export type patch_commentScalarWhereWithAggregatesInput = {
    AND?: patch_commentScalarWhereWithAggregatesInput | patch_commentScalarWhereWithAggregatesInput[]
    OR?: patch_commentScalarWhereWithAggregatesInput[]
    NOT?: patch_commentScalarWhereWithAggregatesInput | patch_commentScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"patch_comment"> | number
    content?: StringWithAggregatesFilter<"patch_comment"> | string
    edit?: StringWithAggregatesFilter<"patch_comment"> | string
    parent_id?: IntNullableWithAggregatesFilter<"patch_comment"> | number | null
    user_id?: IntWithAggregatesFilter<"patch_comment"> | number
    patch_id?: IntWithAggregatesFilter<"patch_comment"> | number
    created?: DateTimeWithAggregatesFilter<"patch_comment"> | Date | string
    updated?: DateTimeWithAggregatesFilter<"patch_comment"> | Date | string
  }

  export type patch_characterWhereInput = {
    AND?: patch_characterWhereInput | patch_characterWhereInput[]
    OR?: patch_characterWhereInput[]
    NOT?: patch_characterWhereInput | patch_characterWhereInput[]
    id?: IntFilter<"patch_character"> | number
    name?: StringFilter<"patch_character"> | string
    image?: StringFilter<"patch_character"> | string
    description?: StringFilter<"patch_character"> | string
    status?: IntFilter<"patch_character"> | number
    traits?: StringNullableListFilter<"patch_character">
    voice_actor?: StringFilter<"patch_character"> | string
    alias?: StringNullableListFilter<"patch_character">
    age?: StringFilter<"patch_character"> | string
    height?: StringFilter<"patch_character"> | string
    birthday?: StringFilter<"patch_character"> | string
    blood_type?: StringFilter<"patch_character"> | string
    three_sizes?: StringFilter<"patch_character"> | string
    hobby?: StringNullableListFilter<"patch_character">
    favorite?: StringNullableListFilter<"patch_character">
    role_type?: StringFilter<"patch_character"> | string
    personality?: StringNullableListFilter<"patch_character">
    relationship?: StringFilter<"patch_character"> | string
    is_latest?: BoolFilter<"patch_character"> | boolean
    original_id?: IntNullableFilter<"patch_character"> | number | null
    user_id?: IntFilter<"patch_character"> | number
    patch_id?: IntFilter<"patch_character"> | number
    created?: DateTimeFilter<"patch_character"> | Date | string
    updated?: DateTimeFilter<"patch_character"> | Date | string
    original?: XOR<Patch_characterNullableScalarRelationFilter, patch_characterWhereInput> | null
    new_versions?: Patch_characterListRelationFilter
    user?: XOR<UserScalarRelationFilter, userWhereInput>
    patch?: XOR<PatchScalarRelationFilter, patchWhereInput>
  }

  export type patch_characterOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    image?: SortOrder
    description?: SortOrder
    status?: SortOrder
    traits?: SortOrder
    voice_actor?: SortOrder
    alias?: SortOrder
    age?: SortOrder
    height?: SortOrder
    birthday?: SortOrder
    blood_type?: SortOrder
    three_sizes?: SortOrder
    hobby?: SortOrder
    favorite?: SortOrder
    role_type?: SortOrder
    personality?: SortOrder
    relationship?: SortOrder
    is_latest?: SortOrder
    original_id?: SortOrderInput | SortOrder
    user_id?: SortOrder
    patch_id?: SortOrder
    created?: SortOrder
    updated?: SortOrder
    original?: patch_characterOrderByWithRelationInput
    new_versions?: patch_characterOrderByRelationAggregateInput
    user?: userOrderByWithRelationInput
    patch?: patchOrderByWithRelationInput
  }

  export type patch_characterWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: patch_characterWhereInput | patch_characterWhereInput[]
    OR?: patch_characterWhereInput[]
    NOT?: patch_characterWhereInput | patch_characterWhereInput[]
    name?: StringFilter<"patch_character"> | string
    image?: StringFilter<"patch_character"> | string
    description?: StringFilter<"patch_character"> | string
    status?: IntFilter<"patch_character"> | number
    traits?: StringNullableListFilter<"patch_character">
    voice_actor?: StringFilter<"patch_character"> | string
    alias?: StringNullableListFilter<"patch_character">
    age?: StringFilter<"patch_character"> | string
    height?: StringFilter<"patch_character"> | string
    birthday?: StringFilter<"patch_character"> | string
    blood_type?: StringFilter<"patch_character"> | string
    three_sizes?: StringFilter<"patch_character"> | string
    hobby?: StringNullableListFilter<"patch_character">
    favorite?: StringNullableListFilter<"patch_character">
    role_type?: StringFilter<"patch_character"> | string
    personality?: StringNullableListFilter<"patch_character">
    relationship?: StringFilter<"patch_character"> | string
    is_latest?: BoolFilter<"patch_character"> | boolean
    original_id?: IntNullableFilter<"patch_character"> | number | null
    user_id?: IntFilter<"patch_character"> | number
    patch_id?: IntFilter<"patch_character"> | number
    created?: DateTimeFilter<"patch_character"> | Date | string
    updated?: DateTimeFilter<"patch_character"> | Date | string
    original?: XOR<Patch_characterNullableScalarRelationFilter, patch_characterWhereInput> | null
    new_versions?: Patch_characterListRelationFilter
    user?: XOR<UserScalarRelationFilter, userWhereInput>
    patch?: XOR<PatchScalarRelationFilter, patchWhereInput>
  }, "id">

  export type patch_characterOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    image?: SortOrder
    description?: SortOrder
    status?: SortOrder
    traits?: SortOrder
    voice_actor?: SortOrder
    alias?: SortOrder
    age?: SortOrder
    height?: SortOrder
    birthday?: SortOrder
    blood_type?: SortOrder
    three_sizes?: SortOrder
    hobby?: SortOrder
    favorite?: SortOrder
    role_type?: SortOrder
    personality?: SortOrder
    relationship?: SortOrder
    is_latest?: SortOrder
    original_id?: SortOrderInput | SortOrder
    user_id?: SortOrder
    patch_id?: SortOrder
    created?: SortOrder
    updated?: SortOrder
    _count?: patch_characterCountOrderByAggregateInput
    _avg?: patch_characterAvgOrderByAggregateInput
    _max?: patch_characterMaxOrderByAggregateInput
    _min?: patch_characterMinOrderByAggregateInput
    _sum?: patch_characterSumOrderByAggregateInput
  }

  export type patch_characterScalarWhereWithAggregatesInput = {
    AND?: patch_characterScalarWhereWithAggregatesInput | patch_characterScalarWhereWithAggregatesInput[]
    OR?: patch_characterScalarWhereWithAggregatesInput[]
    NOT?: patch_characterScalarWhereWithAggregatesInput | patch_characterScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"patch_character"> | number
    name?: StringWithAggregatesFilter<"patch_character"> | string
    image?: StringWithAggregatesFilter<"patch_character"> | string
    description?: StringWithAggregatesFilter<"patch_character"> | string
    status?: IntWithAggregatesFilter<"patch_character"> | number
    traits?: StringNullableListFilter<"patch_character">
    voice_actor?: StringWithAggregatesFilter<"patch_character"> | string
    alias?: StringNullableListFilter<"patch_character">
    age?: StringWithAggregatesFilter<"patch_character"> | string
    height?: StringWithAggregatesFilter<"patch_character"> | string
    birthday?: StringWithAggregatesFilter<"patch_character"> | string
    blood_type?: StringWithAggregatesFilter<"patch_character"> | string
    three_sizes?: StringWithAggregatesFilter<"patch_character"> | string
    hobby?: StringNullableListFilter<"patch_character">
    favorite?: StringNullableListFilter<"patch_character">
    role_type?: StringWithAggregatesFilter<"patch_character"> | string
    personality?: StringNullableListFilter<"patch_character">
    relationship?: StringWithAggregatesFilter<"patch_character"> | string
    is_latest?: BoolWithAggregatesFilter<"patch_character"> | boolean
    original_id?: IntNullableWithAggregatesFilter<"patch_character"> | number | null
    user_id?: IntWithAggregatesFilter<"patch_character"> | number
    patch_id?: IntWithAggregatesFilter<"patch_character"> | number
    created?: DateTimeWithAggregatesFilter<"patch_character"> | Date | string
    updated?: DateTimeWithAggregatesFilter<"patch_character"> | Date | string
  }

  export type userCreateInput = {
    name: string
    email: string
    password: string
    ip?: string
    avatar?: string
    role?: number
    status?: number
    register_time?: Date | string
    moemoepoint?: number
    bio?: string
    claimed_tasks?: userCreateclaimed_tasksInput | string[]
    enable_email_notice?: boolean
    daily_image_count?: number
    daily_check_in?: number
    daily_upload_size?: number
    last_login_time?: string
    created?: Date | string
    updated?: Date | string
    admin_log?: admin_logCreateNestedManyWithoutUserInput
    patch_tag?: patch_tagCreateNestedManyWithoutUserInput
    patch_comment_like?: user_patch_comment_like_relationCreateNestedManyWithoutUserInput
    patch_resource_like?: user_patch_resource_like_relationCreateNestedManyWithoutUserInput
    patch_favorite_folder?: user_patch_favorite_folderCreateNestedManyWithoutUserInput
    following?: user_follow_relationCreateNestedManyWithoutFollowingInput
    follower?: user_follow_relationCreateNestedManyWithoutFollowerInput
    patch?: patchCreateNestedManyWithoutUserInput
    patch_comment?: patch_commentCreateNestedManyWithoutUserInput
    patch_resource?: patch_resourceCreateNestedManyWithoutUserInput
    patch_character?: patch_characterCreateNestedManyWithoutUserInput
    send_message?: user_messageCreateNestedManyWithoutSenderInput
    receive_message?: user_messageCreateNestedManyWithoutRecipientInput
  }

  export type userUncheckedCreateInput = {
    id?: number
    name: string
    email: string
    password: string
    ip?: string
    avatar?: string
    role?: number
    status?: number
    register_time?: Date | string
    moemoepoint?: number
    bio?: string
    claimed_tasks?: userCreateclaimed_tasksInput | string[]
    enable_email_notice?: boolean
    daily_image_count?: number
    daily_check_in?: number
    daily_upload_size?: number
    last_login_time?: string
    created?: Date | string
    updated?: Date | string
    admin_log?: admin_logUncheckedCreateNestedManyWithoutUserInput
    patch_tag?: patch_tagUncheckedCreateNestedManyWithoutUserInput
    patch_comment_like?: user_patch_comment_like_relationUncheckedCreateNestedManyWithoutUserInput
    patch_resource_like?: user_patch_resource_like_relationUncheckedCreateNestedManyWithoutUserInput
    patch_favorite_folder?: user_patch_favorite_folderUncheckedCreateNestedManyWithoutUserInput
    following?: user_follow_relationUncheckedCreateNestedManyWithoutFollowingInput
    follower?: user_follow_relationUncheckedCreateNestedManyWithoutFollowerInput
    patch?: patchUncheckedCreateNestedManyWithoutUserInput
    patch_comment?: patch_commentUncheckedCreateNestedManyWithoutUserInput
    patch_resource?: patch_resourceUncheckedCreateNestedManyWithoutUserInput
    patch_character?: patch_characterUncheckedCreateNestedManyWithoutUserInput
    send_message?: user_messageUncheckedCreateNestedManyWithoutSenderInput
    receive_message?: user_messageUncheckedCreateNestedManyWithoutRecipientInput
  }

  export type userUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    ip?: StringFieldUpdateOperationsInput | string
    avatar?: StringFieldUpdateOperationsInput | string
    role?: IntFieldUpdateOperationsInput | number
    status?: IntFieldUpdateOperationsInput | number
    register_time?: DateTimeFieldUpdateOperationsInput | Date | string
    moemoepoint?: IntFieldUpdateOperationsInput | number
    bio?: StringFieldUpdateOperationsInput | string
    claimed_tasks?: userUpdateclaimed_tasksInput | string[]
    enable_email_notice?: BoolFieldUpdateOperationsInput | boolean
    daily_image_count?: IntFieldUpdateOperationsInput | number
    daily_check_in?: IntFieldUpdateOperationsInput | number
    daily_upload_size?: FloatFieldUpdateOperationsInput | number
    last_login_time?: StringFieldUpdateOperationsInput | string
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    admin_log?: admin_logUpdateManyWithoutUserNestedInput
    patch_tag?: patch_tagUpdateManyWithoutUserNestedInput
    patch_comment_like?: user_patch_comment_like_relationUpdateManyWithoutUserNestedInput
    patch_resource_like?: user_patch_resource_like_relationUpdateManyWithoutUserNestedInput
    patch_favorite_folder?: user_patch_favorite_folderUpdateManyWithoutUserNestedInput
    following?: user_follow_relationUpdateManyWithoutFollowingNestedInput
    follower?: user_follow_relationUpdateManyWithoutFollowerNestedInput
    patch?: patchUpdateManyWithoutUserNestedInput
    patch_comment?: patch_commentUpdateManyWithoutUserNestedInput
    patch_resource?: patch_resourceUpdateManyWithoutUserNestedInput
    patch_character?: patch_characterUpdateManyWithoutUserNestedInput
    send_message?: user_messageUpdateManyWithoutSenderNestedInput
    receive_message?: user_messageUpdateManyWithoutRecipientNestedInput
  }

  export type userUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    ip?: StringFieldUpdateOperationsInput | string
    avatar?: StringFieldUpdateOperationsInput | string
    role?: IntFieldUpdateOperationsInput | number
    status?: IntFieldUpdateOperationsInput | number
    register_time?: DateTimeFieldUpdateOperationsInput | Date | string
    moemoepoint?: IntFieldUpdateOperationsInput | number
    bio?: StringFieldUpdateOperationsInput | string
    claimed_tasks?: userUpdateclaimed_tasksInput | string[]
    enable_email_notice?: BoolFieldUpdateOperationsInput | boolean
    daily_image_count?: IntFieldUpdateOperationsInput | number
    daily_check_in?: IntFieldUpdateOperationsInput | number
    daily_upload_size?: FloatFieldUpdateOperationsInput | number
    last_login_time?: StringFieldUpdateOperationsInput | string
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    admin_log?: admin_logUncheckedUpdateManyWithoutUserNestedInput
    patch_tag?: patch_tagUncheckedUpdateManyWithoutUserNestedInput
    patch_comment_like?: user_patch_comment_like_relationUncheckedUpdateManyWithoutUserNestedInput
    patch_resource_like?: user_patch_resource_like_relationUncheckedUpdateManyWithoutUserNestedInput
    patch_favorite_folder?: user_patch_favorite_folderUncheckedUpdateManyWithoutUserNestedInput
    following?: user_follow_relationUncheckedUpdateManyWithoutFollowingNestedInput
    follower?: user_follow_relationUncheckedUpdateManyWithoutFollowerNestedInput
    patch?: patchUncheckedUpdateManyWithoutUserNestedInput
    patch_comment?: patch_commentUncheckedUpdateManyWithoutUserNestedInput
    patch_resource?: patch_resourceUncheckedUpdateManyWithoutUserNestedInput
    patch_character?: patch_characterUncheckedUpdateManyWithoutUserNestedInput
    send_message?: user_messageUncheckedUpdateManyWithoutSenderNestedInput
    receive_message?: user_messageUncheckedUpdateManyWithoutRecipientNestedInput
  }

  export type userCreateManyInput = {
    id?: number
    name: string
    email: string
    password: string
    ip?: string
    avatar?: string
    role?: number
    status?: number
    register_time?: Date | string
    moemoepoint?: number
    bio?: string
    claimed_tasks?: userCreateclaimed_tasksInput | string[]
    enable_email_notice?: boolean
    daily_image_count?: number
    daily_check_in?: number
    daily_upload_size?: number
    last_login_time?: string
    created?: Date | string
    updated?: Date | string
  }

  export type userUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    ip?: StringFieldUpdateOperationsInput | string
    avatar?: StringFieldUpdateOperationsInput | string
    role?: IntFieldUpdateOperationsInput | number
    status?: IntFieldUpdateOperationsInput | number
    register_time?: DateTimeFieldUpdateOperationsInput | Date | string
    moemoepoint?: IntFieldUpdateOperationsInput | number
    bio?: StringFieldUpdateOperationsInput | string
    claimed_tasks?: userUpdateclaimed_tasksInput | string[]
    enable_email_notice?: BoolFieldUpdateOperationsInput | boolean
    daily_image_count?: IntFieldUpdateOperationsInput | number
    daily_check_in?: IntFieldUpdateOperationsInput | number
    daily_upload_size?: FloatFieldUpdateOperationsInput | number
    last_login_time?: StringFieldUpdateOperationsInput | string
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type userUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    ip?: StringFieldUpdateOperationsInput | string
    avatar?: StringFieldUpdateOperationsInput | string
    role?: IntFieldUpdateOperationsInput | number
    status?: IntFieldUpdateOperationsInput | number
    register_time?: DateTimeFieldUpdateOperationsInput | Date | string
    moemoepoint?: IntFieldUpdateOperationsInput | number
    bio?: StringFieldUpdateOperationsInput | string
    claimed_tasks?: userUpdateclaimed_tasksInput | string[]
    enable_email_notice?: BoolFieldUpdateOperationsInput | boolean
    daily_image_count?: IntFieldUpdateOperationsInput | number
    daily_check_in?: IntFieldUpdateOperationsInput | number
    daily_upload_size?: FloatFieldUpdateOperationsInput | number
    last_login_time?: StringFieldUpdateOperationsInput | string
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type admin_logCreateInput = {
    type: string
    content: string
    status?: number
    created?: Date | string
    updated?: Date | string
    user: userCreateNestedOneWithoutAdmin_logInput
  }

  export type admin_logUncheckedCreateInput = {
    id?: number
    type: string
    content: string
    status?: number
    user_id: number
    created?: Date | string
    updated?: Date | string
  }

  export type admin_logUpdateInput = {
    type?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    status?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: userUpdateOneRequiredWithoutAdmin_logNestedInput
  }

  export type admin_logUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    status?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type admin_logCreateManyInput = {
    id?: number
    type: string
    content: string
    status?: number
    user_id: number
    created?: Date | string
    updated?: Date | string
  }

  export type admin_logUpdateManyMutationInput = {
    type?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    status?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type admin_logUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    status?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_follow_relationCreateInput = {
    follower: userCreateNestedOneWithoutFollowerInput
    following: userCreateNestedOneWithoutFollowingInput
  }

  export type user_follow_relationUncheckedCreateInput = {
    id?: number
    follower_id: number
    following_id: number
  }

  export type user_follow_relationUpdateInput = {
    follower?: userUpdateOneRequiredWithoutFollowerNestedInput
    following?: userUpdateOneRequiredWithoutFollowingNestedInput
  }

  export type user_follow_relationUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    follower_id?: IntFieldUpdateOperationsInput | number
    following_id?: IntFieldUpdateOperationsInput | number
  }

  export type user_follow_relationCreateManyInput = {
    id?: number
    follower_id: number
    following_id: number
  }

  export type user_follow_relationUpdateManyMutationInput = {

  }

  export type user_follow_relationUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    follower_id?: IntFieldUpdateOperationsInput | number
    following_id?: IntFieldUpdateOperationsInput | number
  }

  export type user_messageCreateInput = {
    type: string
    content: string
    status?: number
    link?: string
    created?: Date | string
    updated?: Date | string
    sender?: userCreateNestedOneWithoutSend_messageInput
    recipient?: userCreateNestedOneWithoutReceive_messageInput
  }

  export type user_messageUncheckedCreateInput = {
    id?: number
    type: string
    content: string
    status?: number
    link?: string
    sender_id?: number | null
    recipient_id?: number | null
    created?: Date | string
    updated?: Date | string
  }

  export type user_messageUpdateInput = {
    type?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    status?: IntFieldUpdateOperationsInput | number
    link?: StringFieldUpdateOperationsInput | string
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    sender?: userUpdateOneWithoutSend_messageNestedInput
    recipient?: userUpdateOneWithoutReceive_messageNestedInput
  }

  export type user_messageUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    status?: IntFieldUpdateOperationsInput | number
    link?: StringFieldUpdateOperationsInput | string
    sender_id?: NullableIntFieldUpdateOperationsInput | number | null
    recipient_id?: NullableIntFieldUpdateOperationsInput | number | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_messageCreateManyInput = {
    id?: number
    type: string
    content: string
    status?: number
    link?: string
    sender_id?: number | null
    recipient_id?: number | null
    created?: Date | string
    updated?: Date | string
  }

  export type user_messageUpdateManyMutationInput = {
    type?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    status?: IntFieldUpdateOperationsInput | number
    link?: StringFieldUpdateOperationsInput | string
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_messageUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    status?: IntFieldUpdateOperationsInput | number
    link?: StringFieldUpdateOperationsInput | string
    sender_id?: NullableIntFieldUpdateOperationsInput | number | null
    recipient_id?: NullableIntFieldUpdateOperationsInput | number | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_patch_favorite_folderCreateInput = {
    name: string
    description?: string
    is_public?: boolean
    created?: Date | string
    updated?: Date | string
    user: userCreateNestedOneWithoutPatch_favorite_folderInput
    patch?: user_patch_favorite_folder_relationCreateNestedManyWithoutFolderInput
  }

  export type user_patch_favorite_folderUncheckedCreateInput = {
    id?: number
    name: string
    description?: string
    is_public?: boolean
    user_id: number
    created?: Date | string
    updated?: Date | string
    patch?: user_patch_favorite_folder_relationUncheckedCreateNestedManyWithoutFolderInput
  }

  export type user_patch_favorite_folderUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    is_public?: BoolFieldUpdateOperationsInput | boolean
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: userUpdateOneRequiredWithoutPatch_favorite_folderNestedInput
    patch?: user_patch_favorite_folder_relationUpdateManyWithoutFolderNestedInput
  }

  export type user_patch_favorite_folderUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    is_public?: BoolFieldUpdateOperationsInput | boolean
    user_id?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    patch?: user_patch_favorite_folder_relationUncheckedUpdateManyWithoutFolderNestedInput
  }

  export type user_patch_favorite_folderCreateManyInput = {
    id?: number
    name: string
    description?: string
    is_public?: boolean
    user_id: number
    created?: Date | string
    updated?: Date | string
  }

  export type user_patch_favorite_folderUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    is_public?: BoolFieldUpdateOperationsInput | boolean
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_patch_favorite_folderUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    is_public?: BoolFieldUpdateOperationsInput | boolean
    user_id?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_patch_favorite_folder_relationCreateInput = {
    created?: Date | string
    updated?: Date | string
    folder: user_patch_favorite_folderCreateNestedOneWithoutPatchInput
    patch: patchCreateNestedOneWithoutFavorite_folderInput
  }

  export type user_patch_favorite_folder_relationUncheckedCreateInput = {
    id?: number
    folder_id: number
    patch_id: number
    created?: Date | string
    updated?: Date | string
  }

  export type user_patch_favorite_folder_relationUpdateInput = {
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    folder?: user_patch_favorite_folderUpdateOneRequiredWithoutPatchNestedInput
    patch?: patchUpdateOneRequiredWithoutFavorite_folderNestedInput
  }

  export type user_patch_favorite_folder_relationUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    folder_id?: IntFieldUpdateOperationsInput | number
    patch_id?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_patch_favorite_folder_relationCreateManyInput = {
    id?: number
    folder_id: number
    patch_id: number
    created?: Date | string
    updated?: Date | string
  }

  export type user_patch_favorite_folder_relationUpdateManyMutationInput = {
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_patch_favorite_folder_relationUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    folder_id?: IntFieldUpdateOperationsInput | number
    patch_id?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_patch_comment_like_relationCreateInput = {
    created?: Date | string
    updated?: Date | string
    user: userCreateNestedOneWithoutPatch_comment_likeInput
    comment: patch_commentCreateNestedOneWithoutLike_byInput
  }

  export type user_patch_comment_like_relationUncheckedCreateInput = {
    id?: number
    user_id: number
    comment_id: number
    created?: Date | string
    updated?: Date | string
  }

  export type user_patch_comment_like_relationUpdateInput = {
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: userUpdateOneRequiredWithoutPatch_comment_likeNestedInput
    comment?: patch_commentUpdateOneRequiredWithoutLike_byNestedInput
  }

  export type user_patch_comment_like_relationUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    comment_id?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_patch_comment_like_relationCreateManyInput = {
    id?: number
    user_id: number
    comment_id: number
    created?: Date | string
    updated?: Date | string
  }

  export type user_patch_comment_like_relationUpdateManyMutationInput = {
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_patch_comment_like_relationUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    comment_id?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_patch_resource_like_relationCreateInput = {
    created?: Date | string
    updated?: Date | string
    user: userCreateNestedOneWithoutPatch_resource_likeInput
    resource: patch_resourceCreateNestedOneWithoutLike_byInput
  }

  export type user_patch_resource_like_relationUncheckedCreateInput = {
    id?: number
    user_id: number
    resource_id: number
    created?: Date | string
    updated?: Date | string
  }

  export type user_patch_resource_like_relationUpdateInput = {
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: userUpdateOneRequiredWithoutPatch_resource_likeNestedInput
    resource?: patch_resourceUpdateOneRequiredWithoutLike_byNestedInput
  }

  export type user_patch_resource_like_relationUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    resource_id?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_patch_resource_like_relationCreateManyInput = {
    id?: number
    user_id: number
    resource_id: number
    created?: Date | string
    updated?: Date | string
  }

  export type user_patch_resource_like_relationUpdateManyMutationInput = {
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_patch_resource_like_relationUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    resource_id?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type patchCreateInput = {
    unique_id: string
    name: string
    vndb_id?: string | null
    banner?: string
    introduction?: string
    released?: string
    content_limit?: string
    status?: number
    download?: number
    view?: number
    resource_update_time?: Date | string
    type?: patchCreatetypeInput | string[]
    language?: patchCreatelanguageInput | string[]
    engine?: patchCreateengineInput | string[]
    platform?: patchCreateplatformInput | string[]
    created?: Date | string
    updated?: Date | string
    user: userCreateNestedOneWithoutPatchInput
    alias?: patch_aliasCreateNestedManyWithoutPatchInput
    tag?: patch_tag_relationCreateNestedManyWithoutPatchInput
    favorite_folder?: user_patch_favorite_folder_relationCreateNestedManyWithoutPatchInput
    resource?: patch_resourceCreateNestedManyWithoutPatchInput
    comment?: patch_commentCreateNestedManyWithoutPatchInput
    characters?: patch_characterCreateNestedManyWithoutPatchInput
  }

  export type patchUncheckedCreateInput = {
    id?: number
    unique_id: string
    name: string
    vndb_id?: string | null
    banner?: string
    introduction?: string
    released?: string
    content_limit?: string
    status?: number
    download?: number
    view?: number
    resource_update_time?: Date | string
    type?: patchCreatetypeInput | string[]
    language?: patchCreatelanguageInput | string[]
    engine?: patchCreateengineInput | string[]
    platform?: patchCreateplatformInput | string[]
    user_id: number
    created?: Date | string
    updated?: Date | string
    alias?: patch_aliasUncheckedCreateNestedManyWithoutPatchInput
    tag?: patch_tag_relationUncheckedCreateNestedManyWithoutPatchInput
    favorite_folder?: user_patch_favorite_folder_relationUncheckedCreateNestedManyWithoutPatchInput
    resource?: patch_resourceUncheckedCreateNestedManyWithoutPatchInput
    comment?: patch_commentUncheckedCreateNestedManyWithoutPatchInput
    characters?: patch_characterUncheckedCreateNestedManyWithoutPatchInput
  }

  export type patchUpdateInput = {
    unique_id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    vndb_id?: NullableStringFieldUpdateOperationsInput | string | null
    banner?: StringFieldUpdateOperationsInput | string
    introduction?: StringFieldUpdateOperationsInput | string
    released?: StringFieldUpdateOperationsInput | string
    content_limit?: StringFieldUpdateOperationsInput | string
    status?: IntFieldUpdateOperationsInput | number
    download?: IntFieldUpdateOperationsInput | number
    view?: IntFieldUpdateOperationsInput | number
    resource_update_time?: DateTimeFieldUpdateOperationsInput | Date | string
    type?: patchUpdatetypeInput | string[]
    language?: patchUpdatelanguageInput | string[]
    engine?: patchUpdateengineInput | string[]
    platform?: patchUpdateplatformInput | string[]
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: userUpdateOneRequiredWithoutPatchNestedInput
    alias?: patch_aliasUpdateManyWithoutPatchNestedInput
    tag?: patch_tag_relationUpdateManyWithoutPatchNestedInput
    favorite_folder?: user_patch_favorite_folder_relationUpdateManyWithoutPatchNestedInput
    resource?: patch_resourceUpdateManyWithoutPatchNestedInput
    comment?: patch_commentUpdateManyWithoutPatchNestedInput
    characters?: patch_characterUpdateManyWithoutPatchNestedInput
  }

  export type patchUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    unique_id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    vndb_id?: NullableStringFieldUpdateOperationsInput | string | null
    banner?: StringFieldUpdateOperationsInput | string
    introduction?: StringFieldUpdateOperationsInput | string
    released?: StringFieldUpdateOperationsInput | string
    content_limit?: StringFieldUpdateOperationsInput | string
    status?: IntFieldUpdateOperationsInput | number
    download?: IntFieldUpdateOperationsInput | number
    view?: IntFieldUpdateOperationsInput | number
    resource_update_time?: DateTimeFieldUpdateOperationsInput | Date | string
    type?: patchUpdatetypeInput | string[]
    language?: patchUpdatelanguageInput | string[]
    engine?: patchUpdateengineInput | string[]
    platform?: patchUpdateplatformInput | string[]
    user_id?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    alias?: patch_aliasUncheckedUpdateManyWithoutPatchNestedInput
    tag?: patch_tag_relationUncheckedUpdateManyWithoutPatchNestedInput
    favorite_folder?: user_patch_favorite_folder_relationUncheckedUpdateManyWithoutPatchNestedInput
    resource?: patch_resourceUncheckedUpdateManyWithoutPatchNestedInput
    comment?: patch_commentUncheckedUpdateManyWithoutPatchNestedInput
    characters?: patch_characterUncheckedUpdateManyWithoutPatchNestedInput
  }

  export type patchCreateManyInput = {
    id?: number
    unique_id: string
    name: string
    vndb_id?: string | null
    banner?: string
    introduction?: string
    released?: string
    content_limit?: string
    status?: number
    download?: number
    view?: number
    resource_update_time?: Date | string
    type?: patchCreatetypeInput | string[]
    language?: patchCreatelanguageInput | string[]
    engine?: patchCreateengineInput | string[]
    platform?: patchCreateplatformInput | string[]
    user_id: number
    created?: Date | string
    updated?: Date | string
  }

  export type patchUpdateManyMutationInput = {
    unique_id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    vndb_id?: NullableStringFieldUpdateOperationsInput | string | null
    banner?: StringFieldUpdateOperationsInput | string
    introduction?: StringFieldUpdateOperationsInput | string
    released?: StringFieldUpdateOperationsInput | string
    content_limit?: StringFieldUpdateOperationsInput | string
    status?: IntFieldUpdateOperationsInput | number
    download?: IntFieldUpdateOperationsInput | number
    view?: IntFieldUpdateOperationsInput | number
    resource_update_time?: DateTimeFieldUpdateOperationsInput | Date | string
    type?: patchUpdatetypeInput | string[]
    language?: patchUpdatelanguageInput | string[]
    engine?: patchUpdateengineInput | string[]
    platform?: patchUpdateplatformInput | string[]
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type patchUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    unique_id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    vndb_id?: NullableStringFieldUpdateOperationsInput | string | null
    banner?: StringFieldUpdateOperationsInput | string
    introduction?: StringFieldUpdateOperationsInput | string
    released?: StringFieldUpdateOperationsInput | string
    content_limit?: StringFieldUpdateOperationsInput | string
    status?: IntFieldUpdateOperationsInput | number
    download?: IntFieldUpdateOperationsInput | number
    view?: IntFieldUpdateOperationsInput | number
    resource_update_time?: DateTimeFieldUpdateOperationsInput | Date | string
    type?: patchUpdatetypeInput | string[]
    language?: patchUpdatelanguageInput | string[]
    engine?: patchUpdateengineInput | string[]
    platform?: patchUpdateplatformInput | string[]
    user_id?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type patch_aliasCreateInput = {
    name: string
    created?: Date | string
    updated?: Date | string
    patch: patchCreateNestedOneWithoutAliasInput
  }

  export type patch_aliasUncheckedCreateInput = {
    id?: number
    name: string
    patch_id: number
    created?: Date | string
    updated?: Date | string
  }

  export type patch_aliasUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    patch?: patchUpdateOneRequiredWithoutAliasNestedInput
  }

  export type patch_aliasUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    patch_id?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type patch_aliasCreateManyInput = {
    id?: number
    name: string
    patch_id: number
    created?: Date | string
    updated?: Date | string
  }

  export type patch_aliasUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type patch_aliasUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    patch_id?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type patch_tagCreateInput = {
    name: string
    introduction?: string
    count?: number
    alias?: patch_tagCreatealiasInput | string[]
    created?: Date | string
    updated?: Date | string
    patch_relation?: patch_tag_relationCreateNestedManyWithoutTagInput
    user: userCreateNestedOneWithoutPatch_tagInput
  }

  export type patch_tagUncheckedCreateInput = {
    id?: number
    name: string
    introduction?: string
    count?: number
    alias?: patch_tagCreatealiasInput | string[]
    user_id: number
    created?: Date | string
    updated?: Date | string
    patch_relation?: patch_tag_relationUncheckedCreateNestedManyWithoutTagInput
  }

  export type patch_tagUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    introduction?: StringFieldUpdateOperationsInput | string
    count?: IntFieldUpdateOperationsInput | number
    alias?: patch_tagUpdatealiasInput | string[]
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    patch_relation?: patch_tag_relationUpdateManyWithoutTagNestedInput
    user?: userUpdateOneRequiredWithoutPatch_tagNestedInput
  }

  export type patch_tagUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    introduction?: StringFieldUpdateOperationsInput | string
    count?: IntFieldUpdateOperationsInput | number
    alias?: patch_tagUpdatealiasInput | string[]
    user_id?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    patch_relation?: patch_tag_relationUncheckedUpdateManyWithoutTagNestedInput
  }

  export type patch_tagCreateManyInput = {
    id?: number
    name: string
    introduction?: string
    count?: number
    alias?: patch_tagCreatealiasInput | string[]
    user_id: number
    created?: Date | string
    updated?: Date | string
  }

  export type patch_tagUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    introduction?: StringFieldUpdateOperationsInput | string
    count?: IntFieldUpdateOperationsInput | number
    alias?: patch_tagUpdatealiasInput | string[]
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type patch_tagUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    introduction?: StringFieldUpdateOperationsInput | string
    count?: IntFieldUpdateOperationsInput | number
    alias?: patch_tagUpdatealiasInput | string[]
    user_id?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type patch_tag_relationCreateInput = {
    created?: Date | string
    updated?: Date | string
    patch: patchCreateNestedOneWithoutTagInput
    tag: patch_tagCreateNestedOneWithoutPatch_relationInput
  }

  export type patch_tag_relationUncheckedCreateInput = {
    id?: number
    patch_id: number
    tag_id: number
    created?: Date | string
    updated?: Date | string
  }

  export type patch_tag_relationUpdateInput = {
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    patch?: patchUpdateOneRequiredWithoutTagNestedInput
    tag?: patch_tagUpdateOneRequiredWithoutPatch_relationNestedInput
  }

  export type patch_tag_relationUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    patch_id?: IntFieldUpdateOperationsInput | number
    tag_id?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type patch_tag_relationCreateManyInput = {
    id?: number
    patch_id: number
    tag_id: number
    created?: Date | string
    updated?: Date | string
  }

  export type patch_tag_relationUpdateManyMutationInput = {
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type patch_tag_relationUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    patch_id?: IntFieldUpdateOperationsInput | number
    tag_id?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type patch_resourceCreateInput = {
    storage: string
    section: string
    name?: string
    size?: string
    code?: string
    password?: string
    note?: string
    hash?: string
    content?: string
    type?: patch_resourceCreatetypeInput | string[]
    language?: patch_resourceCreatelanguageInput | string[]
    platform?: patch_resourceCreateplatformInput | string[]
    download?: number
    status?: number
    created?: Date | string
    updated?: Date | string
    like_by?: user_patch_resource_like_relationCreateNestedManyWithoutResourceInput
    user: userCreateNestedOneWithoutPatch_resourceInput
    patch: patchCreateNestedOneWithoutResourceInput
  }

  export type patch_resourceUncheckedCreateInput = {
    id?: number
    storage: string
    section: string
    name?: string
    size?: string
    code?: string
    password?: string
    note?: string
    hash?: string
    content?: string
    type?: patch_resourceCreatetypeInput | string[]
    language?: patch_resourceCreatelanguageInput | string[]
    platform?: patch_resourceCreateplatformInput | string[]
    download?: number
    status?: number
    user_id: number
    patch_id: number
    created?: Date | string
    updated?: Date | string
    like_by?: user_patch_resource_like_relationUncheckedCreateNestedManyWithoutResourceInput
  }

  export type patch_resourceUpdateInput = {
    storage?: StringFieldUpdateOperationsInput | string
    section?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    size?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    note?: StringFieldUpdateOperationsInput | string
    hash?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    type?: patch_resourceUpdatetypeInput | string[]
    language?: patch_resourceUpdatelanguageInput | string[]
    platform?: patch_resourceUpdateplatformInput | string[]
    download?: IntFieldUpdateOperationsInput | number
    status?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    like_by?: user_patch_resource_like_relationUpdateManyWithoutResourceNestedInput
    user?: userUpdateOneRequiredWithoutPatch_resourceNestedInput
    patch?: patchUpdateOneRequiredWithoutResourceNestedInput
  }

  export type patch_resourceUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    storage?: StringFieldUpdateOperationsInput | string
    section?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    size?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    note?: StringFieldUpdateOperationsInput | string
    hash?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    type?: patch_resourceUpdatetypeInput | string[]
    language?: patch_resourceUpdatelanguageInput | string[]
    platform?: patch_resourceUpdateplatformInput | string[]
    download?: IntFieldUpdateOperationsInput | number
    status?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    patch_id?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    like_by?: user_patch_resource_like_relationUncheckedUpdateManyWithoutResourceNestedInput
  }

  export type patch_resourceCreateManyInput = {
    id?: number
    storage: string
    section: string
    name?: string
    size?: string
    code?: string
    password?: string
    note?: string
    hash?: string
    content?: string
    type?: patch_resourceCreatetypeInput | string[]
    language?: patch_resourceCreatelanguageInput | string[]
    platform?: patch_resourceCreateplatformInput | string[]
    download?: number
    status?: number
    user_id: number
    patch_id: number
    created?: Date | string
    updated?: Date | string
  }

  export type patch_resourceUpdateManyMutationInput = {
    storage?: StringFieldUpdateOperationsInput | string
    section?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    size?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    note?: StringFieldUpdateOperationsInput | string
    hash?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    type?: patch_resourceUpdatetypeInput | string[]
    language?: patch_resourceUpdatelanguageInput | string[]
    platform?: patch_resourceUpdateplatformInput | string[]
    download?: IntFieldUpdateOperationsInput | number
    status?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type patch_resourceUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    storage?: StringFieldUpdateOperationsInput | string
    section?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    size?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    note?: StringFieldUpdateOperationsInput | string
    hash?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    type?: patch_resourceUpdatetypeInput | string[]
    language?: patch_resourceUpdatelanguageInput | string[]
    platform?: patch_resourceUpdateplatformInput | string[]
    download?: IntFieldUpdateOperationsInput | number
    status?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    patch_id?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type patch_commentCreateInput = {
    content?: string
    edit?: string
    created?: Date | string
    updated?: Date | string
    like_by?: user_patch_comment_like_relationCreateNestedManyWithoutCommentInput
    reply?: patch_commentCreateNestedManyWithoutParentInput
    parent?: patch_commentCreateNestedOneWithoutReplyInput
    user: userCreateNestedOneWithoutPatch_commentInput
    patch: patchCreateNestedOneWithoutCommentInput
  }

  export type patch_commentUncheckedCreateInput = {
    id?: number
    content?: string
    edit?: string
    parent_id?: number | null
    user_id: number
    patch_id: number
    created?: Date | string
    updated?: Date | string
    like_by?: user_patch_comment_like_relationUncheckedCreateNestedManyWithoutCommentInput
    reply?: patch_commentUncheckedCreateNestedManyWithoutParentInput
  }

  export type patch_commentUpdateInput = {
    content?: StringFieldUpdateOperationsInput | string
    edit?: StringFieldUpdateOperationsInput | string
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    like_by?: user_patch_comment_like_relationUpdateManyWithoutCommentNestedInput
    reply?: patch_commentUpdateManyWithoutParentNestedInput
    parent?: patch_commentUpdateOneWithoutReplyNestedInput
    user?: userUpdateOneRequiredWithoutPatch_commentNestedInput
    patch?: patchUpdateOneRequiredWithoutCommentNestedInput
  }

  export type patch_commentUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    edit?: StringFieldUpdateOperationsInput | string
    parent_id?: NullableIntFieldUpdateOperationsInput | number | null
    user_id?: IntFieldUpdateOperationsInput | number
    patch_id?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    like_by?: user_patch_comment_like_relationUncheckedUpdateManyWithoutCommentNestedInput
    reply?: patch_commentUncheckedUpdateManyWithoutParentNestedInput
  }

  export type patch_commentCreateManyInput = {
    id?: number
    content?: string
    edit?: string
    parent_id?: number | null
    user_id: number
    patch_id: number
    created?: Date | string
    updated?: Date | string
  }

  export type patch_commentUpdateManyMutationInput = {
    content?: StringFieldUpdateOperationsInput | string
    edit?: StringFieldUpdateOperationsInput | string
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type patch_commentUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    edit?: StringFieldUpdateOperationsInput | string
    parent_id?: NullableIntFieldUpdateOperationsInput | number | null
    user_id?: IntFieldUpdateOperationsInput | number
    patch_id?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type patch_characterCreateInput = {
    name: string
    image: string
    description?: string
    status?: number
    traits?: patch_characterCreatetraitsInput | string[]
    voice_actor?: string
    alias?: patch_characterCreatealiasInput | string[]
    age?: string
    height?: string
    birthday?: string
    blood_type?: string
    three_sizes?: string
    hobby?: patch_characterCreatehobbyInput | string[]
    favorite?: patch_characterCreatefavoriteInput | string[]
    role_type?: string
    personality?: patch_characterCreatepersonalityInput | string[]
    relationship?: string
    is_latest?: boolean
    created?: Date | string
    updated?: Date | string
    original?: patch_characterCreateNestedOneWithoutNew_versionsInput
    new_versions?: patch_characterCreateNestedManyWithoutOriginalInput
    user: userCreateNestedOneWithoutPatch_characterInput
    patch: patchCreateNestedOneWithoutCharactersInput
  }

  export type patch_characterUncheckedCreateInput = {
    id?: number
    name: string
    image: string
    description?: string
    status?: number
    traits?: patch_characterCreatetraitsInput | string[]
    voice_actor?: string
    alias?: patch_characterCreatealiasInput | string[]
    age?: string
    height?: string
    birthday?: string
    blood_type?: string
    three_sizes?: string
    hobby?: patch_characterCreatehobbyInput | string[]
    favorite?: patch_characterCreatefavoriteInput | string[]
    role_type?: string
    personality?: patch_characterCreatepersonalityInput | string[]
    relationship?: string
    is_latest?: boolean
    original_id?: number | null
    user_id: number
    patch_id: number
    created?: Date | string
    updated?: Date | string
    new_versions?: patch_characterUncheckedCreateNestedManyWithoutOriginalInput
  }

  export type patch_characterUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    status?: IntFieldUpdateOperationsInput | number
    traits?: patch_characterUpdatetraitsInput | string[]
    voice_actor?: StringFieldUpdateOperationsInput | string
    alias?: patch_characterUpdatealiasInput | string[]
    age?: StringFieldUpdateOperationsInput | string
    height?: StringFieldUpdateOperationsInput | string
    birthday?: StringFieldUpdateOperationsInput | string
    blood_type?: StringFieldUpdateOperationsInput | string
    three_sizes?: StringFieldUpdateOperationsInput | string
    hobby?: patch_characterUpdatehobbyInput | string[]
    favorite?: patch_characterUpdatefavoriteInput | string[]
    role_type?: StringFieldUpdateOperationsInput | string
    personality?: patch_characterUpdatepersonalityInput | string[]
    relationship?: StringFieldUpdateOperationsInput | string
    is_latest?: BoolFieldUpdateOperationsInput | boolean
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    original?: patch_characterUpdateOneWithoutNew_versionsNestedInput
    new_versions?: patch_characterUpdateManyWithoutOriginalNestedInput
    user?: userUpdateOneRequiredWithoutPatch_characterNestedInput
    patch?: patchUpdateOneRequiredWithoutCharactersNestedInput
  }

  export type patch_characterUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    status?: IntFieldUpdateOperationsInput | number
    traits?: patch_characterUpdatetraitsInput | string[]
    voice_actor?: StringFieldUpdateOperationsInput | string
    alias?: patch_characterUpdatealiasInput | string[]
    age?: StringFieldUpdateOperationsInput | string
    height?: StringFieldUpdateOperationsInput | string
    birthday?: StringFieldUpdateOperationsInput | string
    blood_type?: StringFieldUpdateOperationsInput | string
    three_sizes?: StringFieldUpdateOperationsInput | string
    hobby?: patch_characterUpdatehobbyInput | string[]
    favorite?: patch_characterUpdatefavoriteInput | string[]
    role_type?: StringFieldUpdateOperationsInput | string
    personality?: patch_characterUpdatepersonalityInput | string[]
    relationship?: StringFieldUpdateOperationsInput | string
    is_latest?: BoolFieldUpdateOperationsInput | boolean
    original_id?: NullableIntFieldUpdateOperationsInput | number | null
    user_id?: IntFieldUpdateOperationsInput | number
    patch_id?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    new_versions?: patch_characterUncheckedUpdateManyWithoutOriginalNestedInput
  }

  export type patch_characterCreateManyInput = {
    id?: number
    name: string
    image: string
    description?: string
    status?: number
    traits?: patch_characterCreatetraitsInput | string[]
    voice_actor?: string
    alias?: patch_characterCreatealiasInput | string[]
    age?: string
    height?: string
    birthday?: string
    blood_type?: string
    three_sizes?: string
    hobby?: patch_characterCreatehobbyInput | string[]
    favorite?: patch_characterCreatefavoriteInput | string[]
    role_type?: string
    personality?: patch_characterCreatepersonalityInput | string[]
    relationship?: string
    is_latest?: boolean
    original_id?: number | null
    user_id: number
    patch_id: number
    created?: Date | string
    updated?: Date | string
  }

  export type patch_characterUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    status?: IntFieldUpdateOperationsInput | number
    traits?: patch_characterUpdatetraitsInput | string[]
    voice_actor?: StringFieldUpdateOperationsInput | string
    alias?: patch_characterUpdatealiasInput | string[]
    age?: StringFieldUpdateOperationsInput | string
    height?: StringFieldUpdateOperationsInput | string
    birthday?: StringFieldUpdateOperationsInput | string
    blood_type?: StringFieldUpdateOperationsInput | string
    three_sizes?: StringFieldUpdateOperationsInput | string
    hobby?: patch_characterUpdatehobbyInput | string[]
    favorite?: patch_characterUpdatefavoriteInput | string[]
    role_type?: StringFieldUpdateOperationsInput | string
    personality?: patch_characterUpdatepersonalityInput | string[]
    relationship?: StringFieldUpdateOperationsInput | string
    is_latest?: BoolFieldUpdateOperationsInput | boolean
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type patch_characterUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    status?: IntFieldUpdateOperationsInput | number
    traits?: patch_characterUpdatetraitsInput | string[]
    voice_actor?: StringFieldUpdateOperationsInput | string
    alias?: patch_characterUpdatealiasInput | string[]
    age?: StringFieldUpdateOperationsInput | string
    height?: StringFieldUpdateOperationsInput | string
    birthday?: StringFieldUpdateOperationsInput | string
    blood_type?: StringFieldUpdateOperationsInput | string
    three_sizes?: StringFieldUpdateOperationsInput | string
    hobby?: patch_characterUpdatehobbyInput | string[]
    favorite?: patch_characterUpdatefavoriteInput | string[]
    role_type?: StringFieldUpdateOperationsInput | string
    personality?: patch_characterUpdatepersonalityInput | string[]
    relationship?: StringFieldUpdateOperationsInput | string
    is_latest?: BoolFieldUpdateOperationsInput | boolean
    original_id?: NullableIntFieldUpdateOperationsInput | number | null
    user_id?: IntFieldUpdateOperationsInput | number
    patch_id?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type StringNullableListFilter<$PrismaModel = never> = {
    equals?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    has?: string | StringFieldRefInput<$PrismaModel> | null
    hasEvery?: string[] | ListStringFieldRefInput<$PrismaModel>
    hasSome?: string[] | ListStringFieldRefInput<$PrismaModel>
    isEmpty?: boolean
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type Admin_logListRelationFilter = {
    every?: admin_logWhereInput
    some?: admin_logWhereInput
    none?: admin_logWhereInput
  }

  export type Patch_tagListRelationFilter = {
    every?: patch_tagWhereInput
    some?: patch_tagWhereInput
    none?: patch_tagWhereInput
  }

  export type User_patch_comment_like_relationListRelationFilter = {
    every?: user_patch_comment_like_relationWhereInput
    some?: user_patch_comment_like_relationWhereInput
    none?: user_patch_comment_like_relationWhereInput
  }

  export type User_patch_resource_like_relationListRelationFilter = {
    every?: user_patch_resource_like_relationWhereInput
    some?: user_patch_resource_like_relationWhereInput
    none?: user_patch_resource_like_relationWhereInput
  }

  export type User_patch_favorite_folderListRelationFilter = {
    every?: user_patch_favorite_folderWhereInput
    some?: user_patch_favorite_folderWhereInput
    none?: user_patch_favorite_folderWhereInput
  }

  export type User_follow_relationListRelationFilter = {
    every?: user_follow_relationWhereInput
    some?: user_follow_relationWhereInput
    none?: user_follow_relationWhereInput
  }

  export type PatchListRelationFilter = {
    every?: patchWhereInput
    some?: patchWhereInput
    none?: patchWhereInput
  }

  export type Patch_commentListRelationFilter = {
    every?: patch_commentWhereInput
    some?: patch_commentWhereInput
    none?: patch_commentWhereInput
  }

  export type Patch_resourceListRelationFilter = {
    every?: patch_resourceWhereInput
    some?: patch_resourceWhereInput
    none?: patch_resourceWhereInput
  }

  export type Patch_characterListRelationFilter = {
    every?: patch_characterWhereInput
    some?: patch_characterWhereInput
    none?: patch_characterWhereInput
  }

  export type User_messageListRelationFilter = {
    every?: user_messageWhereInput
    some?: user_messageWhereInput
    none?: user_messageWhereInput
  }

  export type admin_logOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type patch_tagOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type user_patch_comment_like_relationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type user_patch_resource_like_relationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type user_patch_favorite_folderOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type user_follow_relationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type patchOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type patch_commentOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type patch_resourceOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type patch_characterOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type user_messageOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type userCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
    ip?: SortOrder
    avatar?: SortOrder
    role?: SortOrder
    status?: SortOrder
    register_time?: SortOrder
    moemoepoint?: SortOrder
    bio?: SortOrder
    claimed_tasks?: SortOrder
    enable_email_notice?: SortOrder
    daily_image_count?: SortOrder
    daily_check_in?: SortOrder
    daily_upload_size?: SortOrder
    last_login_time?: SortOrder
    created?: SortOrder
    updated?: SortOrder
  }

  export type userAvgOrderByAggregateInput = {
    id?: SortOrder
    role?: SortOrder
    status?: SortOrder
    moemoepoint?: SortOrder
    daily_image_count?: SortOrder
    daily_check_in?: SortOrder
    daily_upload_size?: SortOrder
  }

  export type userMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
    ip?: SortOrder
    avatar?: SortOrder
    role?: SortOrder
    status?: SortOrder
    register_time?: SortOrder
    moemoepoint?: SortOrder
    bio?: SortOrder
    enable_email_notice?: SortOrder
    daily_image_count?: SortOrder
    daily_check_in?: SortOrder
    daily_upload_size?: SortOrder
    last_login_time?: SortOrder
    created?: SortOrder
    updated?: SortOrder
  }

  export type userMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
    ip?: SortOrder
    avatar?: SortOrder
    role?: SortOrder
    status?: SortOrder
    register_time?: SortOrder
    moemoepoint?: SortOrder
    bio?: SortOrder
    enable_email_notice?: SortOrder
    daily_image_count?: SortOrder
    daily_check_in?: SortOrder
    daily_upload_size?: SortOrder
    last_login_time?: SortOrder
    created?: SortOrder
    updated?: SortOrder
  }

  export type userSumOrderByAggregateInput = {
    id?: SortOrder
    role?: SortOrder
    status?: SortOrder
    moemoepoint?: SortOrder
    daily_image_count?: SortOrder
    daily_check_in?: SortOrder
    daily_upload_size?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type UserScalarRelationFilter = {
    is?: userWhereInput
    isNot?: userWhereInput
  }

  export type admin_logCountOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    content?: SortOrder
    status?: SortOrder
    user_id?: SortOrder
    created?: SortOrder
    updated?: SortOrder
  }

  export type admin_logAvgOrderByAggregateInput = {
    id?: SortOrder
    status?: SortOrder
    user_id?: SortOrder
  }

  export type admin_logMaxOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    content?: SortOrder
    status?: SortOrder
    user_id?: SortOrder
    created?: SortOrder
    updated?: SortOrder
  }

  export type admin_logMinOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    content?: SortOrder
    status?: SortOrder
    user_id?: SortOrder
    created?: SortOrder
    updated?: SortOrder
  }

  export type admin_logSumOrderByAggregateInput = {
    id?: SortOrder
    status?: SortOrder
    user_id?: SortOrder
  }

  export type user_follow_relationFollower_idFollowing_idCompoundUniqueInput = {
    follower_id: number
    following_id: number
  }

  export type user_follow_relationCountOrderByAggregateInput = {
    id?: SortOrder
    follower_id?: SortOrder
    following_id?: SortOrder
  }

  export type user_follow_relationAvgOrderByAggregateInput = {
    id?: SortOrder
    follower_id?: SortOrder
    following_id?: SortOrder
  }

  export type user_follow_relationMaxOrderByAggregateInput = {
    id?: SortOrder
    follower_id?: SortOrder
    following_id?: SortOrder
  }

  export type user_follow_relationMinOrderByAggregateInput = {
    id?: SortOrder
    follower_id?: SortOrder
    following_id?: SortOrder
  }

  export type user_follow_relationSumOrderByAggregateInput = {
    id?: SortOrder
    follower_id?: SortOrder
    following_id?: SortOrder
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type UserNullableScalarRelationFilter = {
    is?: userWhereInput | null
    isNot?: userWhereInput | null
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type user_messageCountOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    content?: SortOrder
    status?: SortOrder
    link?: SortOrder
    sender_id?: SortOrder
    recipient_id?: SortOrder
    created?: SortOrder
    updated?: SortOrder
  }

  export type user_messageAvgOrderByAggregateInput = {
    id?: SortOrder
    status?: SortOrder
    sender_id?: SortOrder
    recipient_id?: SortOrder
  }

  export type user_messageMaxOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    content?: SortOrder
    status?: SortOrder
    link?: SortOrder
    sender_id?: SortOrder
    recipient_id?: SortOrder
    created?: SortOrder
    updated?: SortOrder
  }

  export type user_messageMinOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    content?: SortOrder
    status?: SortOrder
    link?: SortOrder
    sender_id?: SortOrder
    recipient_id?: SortOrder
    created?: SortOrder
    updated?: SortOrder
  }

  export type user_messageSumOrderByAggregateInput = {
    id?: SortOrder
    status?: SortOrder
    sender_id?: SortOrder
    recipient_id?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type User_patch_favorite_folder_relationListRelationFilter = {
    every?: user_patch_favorite_folder_relationWhereInput
    some?: user_patch_favorite_folder_relationWhereInput
    none?: user_patch_favorite_folder_relationWhereInput
  }

  export type user_patch_favorite_folder_relationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type user_patch_favorite_folderUser_idNameCompoundUniqueInput = {
    user_id: number
    name: string
  }

  export type user_patch_favorite_folderCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    is_public?: SortOrder
    user_id?: SortOrder
    created?: SortOrder
    updated?: SortOrder
  }

  export type user_patch_favorite_folderAvgOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
  }

  export type user_patch_favorite_folderMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    is_public?: SortOrder
    user_id?: SortOrder
    created?: SortOrder
    updated?: SortOrder
  }

  export type user_patch_favorite_folderMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    is_public?: SortOrder
    user_id?: SortOrder
    created?: SortOrder
    updated?: SortOrder
  }

  export type user_patch_favorite_folderSumOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
  }

  export type User_patch_favorite_folderScalarRelationFilter = {
    is?: user_patch_favorite_folderWhereInput
    isNot?: user_patch_favorite_folderWhereInput
  }

  export type PatchScalarRelationFilter = {
    is?: patchWhereInput
    isNot?: patchWhereInput
  }

  export type user_patch_favorite_folder_relationFolder_idPatch_idCompoundUniqueInput = {
    folder_id: number
    patch_id: number
  }

  export type user_patch_favorite_folder_relationCountOrderByAggregateInput = {
    id?: SortOrder
    folder_id?: SortOrder
    patch_id?: SortOrder
    created?: SortOrder
    updated?: SortOrder
  }

  export type user_patch_favorite_folder_relationAvgOrderByAggregateInput = {
    id?: SortOrder
    folder_id?: SortOrder
    patch_id?: SortOrder
  }

  export type user_patch_favorite_folder_relationMaxOrderByAggregateInput = {
    id?: SortOrder
    folder_id?: SortOrder
    patch_id?: SortOrder
    created?: SortOrder
    updated?: SortOrder
  }

  export type user_patch_favorite_folder_relationMinOrderByAggregateInput = {
    id?: SortOrder
    folder_id?: SortOrder
    patch_id?: SortOrder
    created?: SortOrder
    updated?: SortOrder
  }

  export type user_patch_favorite_folder_relationSumOrderByAggregateInput = {
    id?: SortOrder
    folder_id?: SortOrder
    patch_id?: SortOrder
  }

  export type Patch_commentScalarRelationFilter = {
    is?: patch_commentWhereInput
    isNot?: patch_commentWhereInput
  }

  export type user_patch_comment_like_relationUser_idComment_idCompoundUniqueInput = {
    user_id: number
    comment_id: number
  }

  export type user_patch_comment_like_relationCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    comment_id?: SortOrder
    created?: SortOrder
    updated?: SortOrder
  }

  export type user_patch_comment_like_relationAvgOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    comment_id?: SortOrder
  }

  export type user_patch_comment_like_relationMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    comment_id?: SortOrder
    created?: SortOrder
    updated?: SortOrder
  }

  export type user_patch_comment_like_relationMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    comment_id?: SortOrder
    created?: SortOrder
    updated?: SortOrder
  }

  export type user_patch_comment_like_relationSumOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    comment_id?: SortOrder
  }

  export type Patch_resourceScalarRelationFilter = {
    is?: patch_resourceWhereInput
    isNot?: patch_resourceWhereInput
  }

  export type user_patch_resource_like_relationUser_idResource_idCompoundUniqueInput = {
    user_id: number
    resource_id: number
  }

  export type user_patch_resource_like_relationCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    resource_id?: SortOrder
    created?: SortOrder
    updated?: SortOrder
  }

  export type user_patch_resource_like_relationAvgOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    resource_id?: SortOrder
  }

  export type user_patch_resource_like_relationMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    resource_id?: SortOrder
    created?: SortOrder
    updated?: SortOrder
  }

  export type user_patch_resource_like_relationMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    resource_id?: SortOrder
    created?: SortOrder
    updated?: SortOrder
  }

  export type user_patch_resource_like_relationSumOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    resource_id?: SortOrder
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type Patch_aliasListRelationFilter = {
    every?: patch_aliasWhereInput
    some?: patch_aliasWhereInput
    none?: patch_aliasWhereInput
  }

  export type Patch_tag_relationListRelationFilter = {
    every?: patch_tag_relationWhereInput
    some?: patch_tag_relationWhereInput
    none?: patch_tag_relationWhereInput
  }

  export type patch_aliasOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type patch_tag_relationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type patchCountOrderByAggregateInput = {
    id?: SortOrder
    unique_id?: SortOrder
    name?: SortOrder
    vndb_id?: SortOrder
    banner?: SortOrder
    introduction?: SortOrder
    released?: SortOrder
    content_limit?: SortOrder
    status?: SortOrder
    download?: SortOrder
    view?: SortOrder
    resource_update_time?: SortOrder
    type?: SortOrder
    language?: SortOrder
    engine?: SortOrder
    platform?: SortOrder
    user_id?: SortOrder
    created?: SortOrder
    updated?: SortOrder
  }

  export type patchAvgOrderByAggregateInput = {
    id?: SortOrder
    status?: SortOrder
    download?: SortOrder
    view?: SortOrder
    user_id?: SortOrder
  }

  export type patchMaxOrderByAggregateInput = {
    id?: SortOrder
    unique_id?: SortOrder
    name?: SortOrder
    vndb_id?: SortOrder
    banner?: SortOrder
    introduction?: SortOrder
    released?: SortOrder
    content_limit?: SortOrder
    status?: SortOrder
    download?: SortOrder
    view?: SortOrder
    resource_update_time?: SortOrder
    user_id?: SortOrder
    created?: SortOrder
    updated?: SortOrder
  }

  export type patchMinOrderByAggregateInput = {
    id?: SortOrder
    unique_id?: SortOrder
    name?: SortOrder
    vndb_id?: SortOrder
    banner?: SortOrder
    introduction?: SortOrder
    released?: SortOrder
    content_limit?: SortOrder
    status?: SortOrder
    download?: SortOrder
    view?: SortOrder
    resource_update_time?: SortOrder
    user_id?: SortOrder
    created?: SortOrder
    updated?: SortOrder
  }

  export type patchSumOrderByAggregateInput = {
    id?: SortOrder
    status?: SortOrder
    download?: SortOrder
    view?: SortOrder
    user_id?: SortOrder
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type patch_aliasCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    patch_id?: SortOrder
    created?: SortOrder
    updated?: SortOrder
  }

  export type patch_aliasAvgOrderByAggregateInput = {
    id?: SortOrder
    patch_id?: SortOrder
  }

  export type patch_aliasMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    patch_id?: SortOrder
    created?: SortOrder
    updated?: SortOrder
  }

  export type patch_aliasMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    patch_id?: SortOrder
    created?: SortOrder
    updated?: SortOrder
  }

  export type patch_aliasSumOrderByAggregateInput = {
    id?: SortOrder
    patch_id?: SortOrder
  }

  export type patch_tagCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    introduction?: SortOrder
    count?: SortOrder
    alias?: SortOrder
    user_id?: SortOrder
    created?: SortOrder
    updated?: SortOrder
  }

  export type patch_tagAvgOrderByAggregateInput = {
    id?: SortOrder
    count?: SortOrder
    user_id?: SortOrder
  }

  export type patch_tagMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    introduction?: SortOrder
    count?: SortOrder
    user_id?: SortOrder
    created?: SortOrder
    updated?: SortOrder
  }

  export type patch_tagMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    introduction?: SortOrder
    count?: SortOrder
    user_id?: SortOrder
    created?: SortOrder
    updated?: SortOrder
  }

  export type patch_tagSumOrderByAggregateInput = {
    id?: SortOrder
    count?: SortOrder
    user_id?: SortOrder
  }

  export type Patch_tagScalarRelationFilter = {
    is?: patch_tagWhereInput
    isNot?: patch_tagWhereInput
  }

  export type patch_tag_relationPatch_idTag_idCompoundUniqueInput = {
    patch_id: number
    tag_id: number
  }

  export type patch_tag_relationCountOrderByAggregateInput = {
    id?: SortOrder
    patch_id?: SortOrder
    tag_id?: SortOrder
    created?: SortOrder
    updated?: SortOrder
  }

  export type patch_tag_relationAvgOrderByAggregateInput = {
    id?: SortOrder
    patch_id?: SortOrder
    tag_id?: SortOrder
  }

  export type patch_tag_relationMaxOrderByAggregateInput = {
    id?: SortOrder
    patch_id?: SortOrder
    tag_id?: SortOrder
    created?: SortOrder
    updated?: SortOrder
  }

  export type patch_tag_relationMinOrderByAggregateInput = {
    id?: SortOrder
    patch_id?: SortOrder
    tag_id?: SortOrder
    created?: SortOrder
    updated?: SortOrder
  }

  export type patch_tag_relationSumOrderByAggregateInput = {
    id?: SortOrder
    patch_id?: SortOrder
    tag_id?: SortOrder
  }

  export type patch_resourceCountOrderByAggregateInput = {
    id?: SortOrder
    storage?: SortOrder
    section?: SortOrder
    name?: SortOrder
    size?: SortOrder
    code?: SortOrder
    password?: SortOrder
    note?: SortOrder
    hash?: SortOrder
    content?: SortOrder
    type?: SortOrder
    language?: SortOrder
    platform?: SortOrder
    download?: SortOrder
    status?: SortOrder
    user_id?: SortOrder
    patch_id?: SortOrder
    created?: SortOrder
    updated?: SortOrder
  }

  export type patch_resourceAvgOrderByAggregateInput = {
    id?: SortOrder
    download?: SortOrder
    status?: SortOrder
    user_id?: SortOrder
    patch_id?: SortOrder
  }

  export type patch_resourceMaxOrderByAggregateInput = {
    id?: SortOrder
    storage?: SortOrder
    section?: SortOrder
    name?: SortOrder
    size?: SortOrder
    code?: SortOrder
    password?: SortOrder
    note?: SortOrder
    hash?: SortOrder
    content?: SortOrder
    download?: SortOrder
    status?: SortOrder
    user_id?: SortOrder
    patch_id?: SortOrder
    created?: SortOrder
    updated?: SortOrder
  }

  export type patch_resourceMinOrderByAggregateInput = {
    id?: SortOrder
    storage?: SortOrder
    section?: SortOrder
    name?: SortOrder
    size?: SortOrder
    code?: SortOrder
    password?: SortOrder
    note?: SortOrder
    hash?: SortOrder
    content?: SortOrder
    download?: SortOrder
    status?: SortOrder
    user_id?: SortOrder
    patch_id?: SortOrder
    created?: SortOrder
    updated?: SortOrder
  }

  export type patch_resourceSumOrderByAggregateInput = {
    id?: SortOrder
    download?: SortOrder
    status?: SortOrder
    user_id?: SortOrder
    patch_id?: SortOrder
  }

  export type Patch_commentNullableScalarRelationFilter = {
    is?: patch_commentWhereInput | null
    isNot?: patch_commentWhereInput | null
  }

  export type patch_commentCountOrderByAggregateInput = {
    id?: SortOrder
    content?: SortOrder
    edit?: SortOrder
    parent_id?: SortOrder
    user_id?: SortOrder
    patch_id?: SortOrder
    created?: SortOrder
    updated?: SortOrder
  }

  export type patch_commentAvgOrderByAggregateInput = {
    id?: SortOrder
    parent_id?: SortOrder
    user_id?: SortOrder
    patch_id?: SortOrder
  }

  export type patch_commentMaxOrderByAggregateInput = {
    id?: SortOrder
    content?: SortOrder
    edit?: SortOrder
    parent_id?: SortOrder
    user_id?: SortOrder
    patch_id?: SortOrder
    created?: SortOrder
    updated?: SortOrder
  }

  export type patch_commentMinOrderByAggregateInput = {
    id?: SortOrder
    content?: SortOrder
    edit?: SortOrder
    parent_id?: SortOrder
    user_id?: SortOrder
    patch_id?: SortOrder
    created?: SortOrder
    updated?: SortOrder
  }

  export type patch_commentSumOrderByAggregateInput = {
    id?: SortOrder
    parent_id?: SortOrder
    user_id?: SortOrder
    patch_id?: SortOrder
  }

  export type Patch_characterNullableScalarRelationFilter = {
    is?: patch_characterWhereInput | null
    isNot?: patch_characterWhereInput | null
  }

  export type patch_characterCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    image?: SortOrder
    description?: SortOrder
    status?: SortOrder
    traits?: SortOrder
    voice_actor?: SortOrder
    alias?: SortOrder
    age?: SortOrder
    height?: SortOrder
    birthday?: SortOrder
    blood_type?: SortOrder
    three_sizes?: SortOrder
    hobby?: SortOrder
    favorite?: SortOrder
    role_type?: SortOrder
    personality?: SortOrder
    relationship?: SortOrder
    is_latest?: SortOrder
    original_id?: SortOrder
    user_id?: SortOrder
    patch_id?: SortOrder
    created?: SortOrder
    updated?: SortOrder
  }

  export type patch_characterAvgOrderByAggregateInput = {
    id?: SortOrder
    status?: SortOrder
    original_id?: SortOrder
    user_id?: SortOrder
    patch_id?: SortOrder
  }

  export type patch_characterMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    image?: SortOrder
    description?: SortOrder
    status?: SortOrder
    voice_actor?: SortOrder
    age?: SortOrder
    height?: SortOrder
    birthday?: SortOrder
    blood_type?: SortOrder
    three_sizes?: SortOrder
    role_type?: SortOrder
    relationship?: SortOrder
    is_latest?: SortOrder
    original_id?: SortOrder
    user_id?: SortOrder
    patch_id?: SortOrder
    created?: SortOrder
    updated?: SortOrder
  }

  export type patch_characterMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    image?: SortOrder
    description?: SortOrder
    status?: SortOrder
    voice_actor?: SortOrder
    age?: SortOrder
    height?: SortOrder
    birthday?: SortOrder
    blood_type?: SortOrder
    three_sizes?: SortOrder
    role_type?: SortOrder
    relationship?: SortOrder
    is_latest?: SortOrder
    original_id?: SortOrder
    user_id?: SortOrder
    patch_id?: SortOrder
    created?: SortOrder
    updated?: SortOrder
  }

  export type patch_characterSumOrderByAggregateInput = {
    id?: SortOrder
    status?: SortOrder
    original_id?: SortOrder
    user_id?: SortOrder
    patch_id?: SortOrder
  }

  export type userCreateclaimed_tasksInput = {
    set: string[]
  }

  export type admin_logCreateNestedManyWithoutUserInput = {
    create?: XOR<admin_logCreateWithoutUserInput, admin_logUncheckedCreateWithoutUserInput> | admin_logCreateWithoutUserInput[] | admin_logUncheckedCreateWithoutUserInput[]
    connectOrCreate?: admin_logCreateOrConnectWithoutUserInput | admin_logCreateOrConnectWithoutUserInput[]
    createMany?: admin_logCreateManyUserInputEnvelope
    connect?: admin_logWhereUniqueInput | admin_logWhereUniqueInput[]
  }

  export type patch_tagCreateNestedManyWithoutUserInput = {
    create?: XOR<patch_tagCreateWithoutUserInput, patch_tagUncheckedCreateWithoutUserInput> | patch_tagCreateWithoutUserInput[] | patch_tagUncheckedCreateWithoutUserInput[]
    connectOrCreate?: patch_tagCreateOrConnectWithoutUserInput | patch_tagCreateOrConnectWithoutUserInput[]
    createMany?: patch_tagCreateManyUserInputEnvelope
    connect?: patch_tagWhereUniqueInput | patch_tagWhereUniqueInput[]
  }

  export type user_patch_comment_like_relationCreateNestedManyWithoutUserInput = {
    create?: XOR<user_patch_comment_like_relationCreateWithoutUserInput, user_patch_comment_like_relationUncheckedCreateWithoutUserInput> | user_patch_comment_like_relationCreateWithoutUserInput[] | user_patch_comment_like_relationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: user_patch_comment_like_relationCreateOrConnectWithoutUserInput | user_patch_comment_like_relationCreateOrConnectWithoutUserInput[]
    createMany?: user_patch_comment_like_relationCreateManyUserInputEnvelope
    connect?: user_patch_comment_like_relationWhereUniqueInput | user_patch_comment_like_relationWhereUniqueInput[]
  }

  export type user_patch_resource_like_relationCreateNestedManyWithoutUserInput = {
    create?: XOR<user_patch_resource_like_relationCreateWithoutUserInput, user_patch_resource_like_relationUncheckedCreateWithoutUserInput> | user_patch_resource_like_relationCreateWithoutUserInput[] | user_patch_resource_like_relationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: user_patch_resource_like_relationCreateOrConnectWithoutUserInput | user_patch_resource_like_relationCreateOrConnectWithoutUserInput[]
    createMany?: user_patch_resource_like_relationCreateManyUserInputEnvelope
    connect?: user_patch_resource_like_relationWhereUniqueInput | user_patch_resource_like_relationWhereUniqueInput[]
  }

  export type user_patch_favorite_folderCreateNestedManyWithoutUserInput = {
    create?: XOR<user_patch_favorite_folderCreateWithoutUserInput, user_patch_favorite_folderUncheckedCreateWithoutUserInput> | user_patch_favorite_folderCreateWithoutUserInput[] | user_patch_favorite_folderUncheckedCreateWithoutUserInput[]
    connectOrCreate?: user_patch_favorite_folderCreateOrConnectWithoutUserInput | user_patch_favorite_folderCreateOrConnectWithoutUserInput[]
    createMany?: user_patch_favorite_folderCreateManyUserInputEnvelope
    connect?: user_patch_favorite_folderWhereUniqueInput | user_patch_favorite_folderWhereUniqueInput[]
  }

  export type user_follow_relationCreateNestedManyWithoutFollowingInput = {
    create?: XOR<user_follow_relationCreateWithoutFollowingInput, user_follow_relationUncheckedCreateWithoutFollowingInput> | user_follow_relationCreateWithoutFollowingInput[] | user_follow_relationUncheckedCreateWithoutFollowingInput[]
    connectOrCreate?: user_follow_relationCreateOrConnectWithoutFollowingInput | user_follow_relationCreateOrConnectWithoutFollowingInput[]
    createMany?: user_follow_relationCreateManyFollowingInputEnvelope
    connect?: user_follow_relationWhereUniqueInput | user_follow_relationWhereUniqueInput[]
  }

  export type user_follow_relationCreateNestedManyWithoutFollowerInput = {
    create?: XOR<user_follow_relationCreateWithoutFollowerInput, user_follow_relationUncheckedCreateWithoutFollowerInput> | user_follow_relationCreateWithoutFollowerInput[] | user_follow_relationUncheckedCreateWithoutFollowerInput[]
    connectOrCreate?: user_follow_relationCreateOrConnectWithoutFollowerInput | user_follow_relationCreateOrConnectWithoutFollowerInput[]
    createMany?: user_follow_relationCreateManyFollowerInputEnvelope
    connect?: user_follow_relationWhereUniqueInput | user_follow_relationWhereUniqueInput[]
  }

  export type patchCreateNestedManyWithoutUserInput = {
    create?: XOR<patchCreateWithoutUserInput, patchUncheckedCreateWithoutUserInput> | patchCreateWithoutUserInput[] | patchUncheckedCreateWithoutUserInput[]
    connectOrCreate?: patchCreateOrConnectWithoutUserInput | patchCreateOrConnectWithoutUserInput[]
    createMany?: patchCreateManyUserInputEnvelope
    connect?: patchWhereUniqueInput | patchWhereUniqueInput[]
  }

  export type patch_commentCreateNestedManyWithoutUserInput = {
    create?: XOR<patch_commentCreateWithoutUserInput, patch_commentUncheckedCreateWithoutUserInput> | patch_commentCreateWithoutUserInput[] | patch_commentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: patch_commentCreateOrConnectWithoutUserInput | patch_commentCreateOrConnectWithoutUserInput[]
    createMany?: patch_commentCreateManyUserInputEnvelope
    connect?: patch_commentWhereUniqueInput | patch_commentWhereUniqueInput[]
  }

  export type patch_resourceCreateNestedManyWithoutUserInput = {
    create?: XOR<patch_resourceCreateWithoutUserInput, patch_resourceUncheckedCreateWithoutUserInput> | patch_resourceCreateWithoutUserInput[] | patch_resourceUncheckedCreateWithoutUserInput[]
    connectOrCreate?: patch_resourceCreateOrConnectWithoutUserInput | patch_resourceCreateOrConnectWithoutUserInput[]
    createMany?: patch_resourceCreateManyUserInputEnvelope
    connect?: patch_resourceWhereUniqueInput | patch_resourceWhereUniqueInput[]
  }

  export type patch_characterCreateNestedManyWithoutUserInput = {
    create?: XOR<patch_characterCreateWithoutUserInput, patch_characterUncheckedCreateWithoutUserInput> | patch_characterCreateWithoutUserInput[] | patch_characterUncheckedCreateWithoutUserInput[]
    connectOrCreate?: patch_characterCreateOrConnectWithoutUserInput | patch_characterCreateOrConnectWithoutUserInput[]
    createMany?: patch_characterCreateManyUserInputEnvelope
    connect?: patch_characterWhereUniqueInput | patch_characterWhereUniqueInput[]
  }

  export type user_messageCreateNestedManyWithoutSenderInput = {
    create?: XOR<user_messageCreateWithoutSenderInput, user_messageUncheckedCreateWithoutSenderInput> | user_messageCreateWithoutSenderInput[] | user_messageUncheckedCreateWithoutSenderInput[]
    connectOrCreate?: user_messageCreateOrConnectWithoutSenderInput | user_messageCreateOrConnectWithoutSenderInput[]
    createMany?: user_messageCreateManySenderInputEnvelope
    connect?: user_messageWhereUniqueInput | user_messageWhereUniqueInput[]
  }

  export type user_messageCreateNestedManyWithoutRecipientInput = {
    create?: XOR<user_messageCreateWithoutRecipientInput, user_messageUncheckedCreateWithoutRecipientInput> | user_messageCreateWithoutRecipientInput[] | user_messageUncheckedCreateWithoutRecipientInput[]
    connectOrCreate?: user_messageCreateOrConnectWithoutRecipientInput | user_messageCreateOrConnectWithoutRecipientInput[]
    createMany?: user_messageCreateManyRecipientInputEnvelope
    connect?: user_messageWhereUniqueInput | user_messageWhereUniqueInput[]
  }

  export type admin_logUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<admin_logCreateWithoutUserInput, admin_logUncheckedCreateWithoutUserInput> | admin_logCreateWithoutUserInput[] | admin_logUncheckedCreateWithoutUserInput[]
    connectOrCreate?: admin_logCreateOrConnectWithoutUserInput | admin_logCreateOrConnectWithoutUserInput[]
    createMany?: admin_logCreateManyUserInputEnvelope
    connect?: admin_logWhereUniqueInput | admin_logWhereUniqueInput[]
  }

  export type patch_tagUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<patch_tagCreateWithoutUserInput, patch_tagUncheckedCreateWithoutUserInput> | patch_tagCreateWithoutUserInput[] | patch_tagUncheckedCreateWithoutUserInput[]
    connectOrCreate?: patch_tagCreateOrConnectWithoutUserInput | patch_tagCreateOrConnectWithoutUserInput[]
    createMany?: patch_tagCreateManyUserInputEnvelope
    connect?: patch_tagWhereUniqueInput | patch_tagWhereUniqueInput[]
  }

  export type user_patch_comment_like_relationUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<user_patch_comment_like_relationCreateWithoutUserInput, user_patch_comment_like_relationUncheckedCreateWithoutUserInput> | user_patch_comment_like_relationCreateWithoutUserInput[] | user_patch_comment_like_relationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: user_patch_comment_like_relationCreateOrConnectWithoutUserInput | user_patch_comment_like_relationCreateOrConnectWithoutUserInput[]
    createMany?: user_patch_comment_like_relationCreateManyUserInputEnvelope
    connect?: user_patch_comment_like_relationWhereUniqueInput | user_patch_comment_like_relationWhereUniqueInput[]
  }

  export type user_patch_resource_like_relationUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<user_patch_resource_like_relationCreateWithoutUserInput, user_patch_resource_like_relationUncheckedCreateWithoutUserInput> | user_patch_resource_like_relationCreateWithoutUserInput[] | user_patch_resource_like_relationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: user_patch_resource_like_relationCreateOrConnectWithoutUserInput | user_patch_resource_like_relationCreateOrConnectWithoutUserInput[]
    createMany?: user_patch_resource_like_relationCreateManyUserInputEnvelope
    connect?: user_patch_resource_like_relationWhereUniqueInput | user_patch_resource_like_relationWhereUniqueInput[]
  }

  export type user_patch_favorite_folderUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<user_patch_favorite_folderCreateWithoutUserInput, user_patch_favorite_folderUncheckedCreateWithoutUserInput> | user_patch_favorite_folderCreateWithoutUserInput[] | user_patch_favorite_folderUncheckedCreateWithoutUserInput[]
    connectOrCreate?: user_patch_favorite_folderCreateOrConnectWithoutUserInput | user_patch_favorite_folderCreateOrConnectWithoutUserInput[]
    createMany?: user_patch_favorite_folderCreateManyUserInputEnvelope
    connect?: user_patch_favorite_folderWhereUniqueInput | user_patch_favorite_folderWhereUniqueInput[]
  }

  export type user_follow_relationUncheckedCreateNestedManyWithoutFollowingInput = {
    create?: XOR<user_follow_relationCreateWithoutFollowingInput, user_follow_relationUncheckedCreateWithoutFollowingInput> | user_follow_relationCreateWithoutFollowingInput[] | user_follow_relationUncheckedCreateWithoutFollowingInput[]
    connectOrCreate?: user_follow_relationCreateOrConnectWithoutFollowingInput | user_follow_relationCreateOrConnectWithoutFollowingInput[]
    createMany?: user_follow_relationCreateManyFollowingInputEnvelope
    connect?: user_follow_relationWhereUniqueInput | user_follow_relationWhereUniqueInput[]
  }

  export type user_follow_relationUncheckedCreateNestedManyWithoutFollowerInput = {
    create?: XOR<user_follow_relationCreateWithoutFollowerInput, user_follow_relationUncheckedCreateWithoutFollowerInput> | user_follow_relationCreateWithoutFollowerInput[] | user_follow_relationUncheckedCreateWithoutFollowerInput[]
    connectOrCreate?: user_follow_relationCreateOrConnectWithoutFollowerInput | user_follow_relationCreateOrConnectWithoutFollowerInput[]
    createMany?: user_follow_relationCreateManyFollowerInputEnvelope
    connect?: user_follow_relationWhereUniqueInput | user_follow_relationWhereUniqueInput[]
  }

  export type patchUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<patchCreateWithoutUserInput, patchUncheckedCreateWithoutUserInput> | patchCreateWithoutUserInput[] | patchUncheckedCreateWithoutUserInput[]
    connectOrCreate?: patchCreateOrConnectWithoutUserInput | patchCreateOrConnectWithoutUserInput[]
    createMany?: patchCreateManyUserInputEnvelope
    connect?: patchWhereUniqueInput | patchWhereUniqueInput[]
  }

  export type patch_commentUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<patch_commentCreateWithoutUserInput, patch_commentUncheckedCreateWithoutUserInput> | patch_commentCreateWithoutUserInput[] | patch_commentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: patch_commentCreateOrConnectWithoutUserInput | patch_commentCreateOrConnectWithoutUserInput[]
    createMany?: patch_commentCreateManyUserInputEnvelope
    connect?: patch_commentWhereUniqueInput | patch_commentWhereUniqueInput[]
  }

  export type patch_resourceUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<patch_resourceCreateWithoutUserInput, patch_resourceUncheckedCreateWithoutUserInput> | patch_resourceCreateWithoutUserInput[] | patch_resourceUncheckedCreateWithoutUserInput[]
    connectOrCreate?: patch_resourceCreateOrConnectWithoutUserInput | patch_resourceCreateOrConnectWithoutUserInput[]
    createMany?: patch_resourceCreateManyUserInputEnvelope
    connect?: patch_resourceWhereUniqueInput | patch_resourceWhereUniqueInput[]
  }

  export type patch_characterUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<patch_characterCreateWithoutUserInput, patch_characterUncheckedCreateWithoutUserInput> | patch_characterCreateWithoutUserInput[] | patch_characterUncheckedCreateWithoutUserInput[]
    connectOrCreate?: patch_characterCreateOrConnectWithoutUserInput | patch_characterCreateOrConnectWithoutUserInput[]
    createMany?: patch_characterCreateManyUserInputEnvelope
    connect?: patch_characterWhereUniqueInput | patch_characterWhereUniqueInput[]
  }

  export type user_messageUncheckedCreateNestedManyWithoutSenderInput = {
    create?: XOR<user_messageCreateWithoutSenderInput, user_messageUncheckedCreateWithoutSenderInput> | user_messageCreateWithoutSenderInput[] | user_messageUncheckedCreateWithoutSenderInput[]
    connectOrCreate?: user_messageCreateOrConnectWithoutSenderInput | user_messageCreateOrConnectWithoutSenderInput[]
    createMany?: user_messageCreateManySenderInputEnvelope
    connect?: user_messageWhereUniqueInput | user_messageWhereUniqueInput[]
  }

  export type user_messageUncheckedCreateNestedManyWithoutRecipientInput = {
    create?: XOR<user_messageCreateWithoutRecipientInput, user_messageUncheckedCreateWithoutRecipientInput> | user_messageCreateWithoutRecipientInput[] | user_messageUncheckedCreateWithoutRecipientInput[]
    connectOrCreate?: user_messageCreateOrConnectWithoutRecipientInput | user_messageCreateOrConnectWithoutRecipientInput[]
    createMany?: user_messageCreateManyRecipientInputEnvelope
    connect?: user_messageWhereUniqueInput | user_messageWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type userUpdateclaimed_tasksInput = {
    set?: string[]
    push?: string | string[]
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type admin_logUpdateManyWithoutUserNestedInput = {
    create?: XOR<admin_logCreateWithoutUserInput, admin_logUncheckedCreateWithoutUserInput> | admin_logCreateWithoutUserInput[] | admin_logUncheckedCreateWithoutUserInput[]
    connectOrCreate?: admin_logCreateOrConnectWithoutUserInput | admin_logCreateOrConnectWithoutUserInput[]
    upsert?: admin_logUpsertWithWhereUniqueWithoutUserInput | admin_logUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: admin_logCreateManyUserInputEnvelope
    set?: admin_logWhereUniqueInput | admin_logWhereUniqueInput[]
    disconnect?: admin_logWhereUniqueInput | admin_logWhereUniqueInput[]
    delete?: admin_logWhereUniqueInput | admin_logWhereUniqueInput[]
    connect?: admin_logWhereUniqueInput | admin_logWhereUniqueInput[]
    update?: admin_logUpdateWithWhereUniqueWithoutUserInput | admin_logUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: admin_logUpdateManyWithWhereWithoutUserInput | admin_logUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: admin_logScalarWhereInput | admin_logScalarWhereInput[]
  }

  export type patch_tagUpdateManyWithoutUserNestedInput = {
    create?: XOR<patch_tagCreateWithoutUserInput, patch_tagUncheckedCreateWithoutUserInput> | patch_tagCreateWithoutUserInput[] | patch_tagUncheckedCreateWithoutUserInput[]
    connectOrCreate?: patch_tagCreateOrConnectWithoutUserInput | patch_tagCreateOrConnectWithoutUserInput[]
    upsert?: patch_tagUpsertWithWhereUniqueWithoutUserInput | patch_tagUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: patch_tagCreateManyUserInputEnvelope
    set?: patch_tagWhereUniqueInput | patch_tagWhereUniqueInput[]
    disconnect?: patch_tagWhereUniqueInput | patch_tagWhereUniqueInput[]
    delete?: patch_tagWhereUniqueInput | patch_tagWhereUniqueInput[]
    connect?: patch_tagWhereUniqueInput | patch_tagWhereUniqueInput[]
    update?: patch_tagUpdateWithWhereUniqueWithoutUserInput | patch_tagUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: patch_tagUpdateManyWithWhereWithoutUserInput | patch_tagUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: patch_tagScalarWhereInput | patch_tagScalarWhereInput[]
  }

  export type user_patch_comment_like_relationUpdateManyWithoutUserNestedInput = {
    create?: XOR<user_patch_comment_like_relationCreateWithoutUserInput, user_patch_comment_like_relationUncheckedCreateWithoutUserInput> | user_patch_comment_like_relationCreateWithoutUserInput[] | user_patch_comment_like_relationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: user_patch_comment_like_relationCreateOrConnectWithoutUserInput | user_patch_comment_like_relationCreateOrConnectWithoutUserInput[]
    upsert?: user_patch_comment_like_relationUpsertWithWhereUniqueWithoutUserInput | user_patch_comment_like_relationUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: user_patch_comment_like_relationCreateManyUserInputEnvelope
    set?: user_patch_comment_like_relationWhereUniqueInput | user_patch_comment_like_relationWhereUniqueInput[]
    disconnect?: user_patch_comment_like_relationWhereUniqueInput | user_patch_comment_like_relationWhereUniqueInput[]
    delete?: user_patch_comment_like_relationWhereUniqueInput | user_patch_comment_like_relationWhereUniqueInput[]
    connect?: user_patch_comment_like_relationWhereUniqueInput | user_patch_comment_like_relationWhereUniqueInput[]
    update?: user_patch_comment_like_relationUpdateWithWhereUniqueWithoutUserInput | user_patch_comment_like_relationUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: user_patch_comment_like_relationUpdateManyWithWhereWithoutUserInput | user_patch_comment_like_relationUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: user_patch_comment_like_relationScalarWhereInput | user_patch_comment_like_relationScalarWhereInput[]
  }

  export type user_patch_resource_like_relationUpdateManyWithoutUserNestedInput = {
    create?: XOR<user_patch_resource_like_relationCreateWithoutUserInput, user_patch_resource_like_relationUncheckedCreateWithoutUserInput> | user_patch_resource_like_relationCreateWithoutUserInput[] | user_patch_resource_like_relationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: user_patch_resource_like_relationCreateOrConnectWithoutUserInput | user_patch_resource_like_relationCreateOrConnectWithoutUserInput[]
    upsert?: user_patch_resource_like_relationUpsertWithWhereUniqueWithoutUserInput | user_patch_resource_like_relationUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: user_patch_resource_like_relationCreateManyUserInputEnvelope
    set?: user_patch_resource_like_relationWhereUniqueInput | user_patch_resource_like_relationWhereUniqueInput[]
    disconnect?: user_patch_resource_like_relationWhereUniqueInput | user_patch_resource_like_relationWhereUniqueInput[]
    delete?: user_patch_resource_like_relationWhereUniqueInput | user_patch_resource_like_relationWhereUniqueInput[]
    connect?: user_patch_resource_like_relationWhereUniqueInput | user_patch_resource_like_relationWhereUniqueInput[]
    update?: user_patch_resource_like_relationUpdateWithWhereUniqueWithoutUserInput | user_patch_resource_like_relationUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: user_patch_resource_like_relationUpdateManyWithWhereWithoutUserInput | user_patch_resource_like_relationUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: user_patch_resource_like_relationScalarWhereInput | user_patch_resource_like_relationScalarWhereInput[]
  }

  export type user_patch_favorite_folderUpdateManyWithoutUserNestedInput = {
    create?: XOR<user_patch_favorite_folderCreateWithoutUserInput, user_patch_favorite_folderUncheckedCreateWithoutUserInput> | user_patch_favorite_folderCreateWithoutUserInput[] | user_patch_favorite_folderUncheckedCreateWithoutUserInput[]
    connectOrCreate?: user_patch_favorite_folderCreateOrConnectWithoutUserInput | user_patch_favorite_folderCreateOrConnectWithoutUserInput[]
    upsert?: user_patch_favorite_folderUpsertWithWhereUniqueWithoutUserInput | user_patch_favorite_folderUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: user_patch_favorite_folderCreateManyUserInputEnvelope
    set?: user_patch_favorite_folderWhereUniqueInput | user_patch_favorite_folderWhereUniqueInput[]
    disconnect?: user_patch_favorite_folderWhereUniqueInput | user_patch_favorite_folderWhereUniqueInput[]
    delete?: user_patch_favorite_folderWhereUniqueInput | user_patch_favorite_folderWhereUniqueInput[]
    connect?: user_patch_favorite_folderWhereUniqueInput | user_patch_favorite_folderWhereUniqueInput[]
    update?: user_patch_favorite_folderUpdateWithWhereUniqueWithoutUserInput | user_patch_favorite_folderUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: user_patch_favorite_folderUpdateManyWithWhereWithoutUserInput | user_patch_favorite_folderUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: user_patch_favorite_folderScalarWhereInput | user_patch_favorite_folderScalarWhereInput[]
  }

  export type user_follow_relationUpdateManyWithoutFollowingNestedInput = {
    create?: XOR<user_follow_relationCreateWithoutFollowingInput, user_follow_relationUncheckedCreateWithoutFollowingInput> | user_follow_relationCreateWithoutFollowingInput[] | user_follow_relationUncheckedCreateWithoutFollowingInput[]
    connectOrCreate?: user_follow_relationCreateOrConnectWithoutFollowingInput | user_follow_relationCreateOrConnectWithoutFollowingInput[]
    upsert?: user_follow_relationUpsertWithWhereUniqueWithoutFollowingInput | user_follow_relationUpsertWithWhereUniqueWithoutFollowingInput[]
    createMany?: user_follow_relationCreateManyFollowingInputEnvelope
    set?: user_follow_relationWhereUniqueInput | user_follow_relationWhereUniqueInput[]
    disconnect?: user_follow_relationWhereUniqueInput | user_follow_relationWhereUniqueInput[]
    delete?: user_follow_relationWhereUniqueInput | user_follow_relationWhereUniqueInput[]
    connect?: user_follow_relationWhereUniqueInput | user_follow_relationWhereUniqueInput[]
    update?: user_follow_relationUpdateWithWhereUniqueWithoutFollowingInput | user_follow_relationUpdateWithWhereUniqueWithoutFollowingInput[]
    updateMany?: user_follow_relationUpdateManyWithWhereWithoutFollowingInput | user_follow_relationUpdateManyWithWhereWithoutFollowingInput[]
    deleteMany?: user_follow_relationScalarWhereInput | user_follow_relationScalarWhereInput[]
  }

  export type user_follow_relationUpdateManyWithoutFollowerNestedInput = {
    create?: XOR<user_follow_relationCreateWithoutFollowerInput, user_follow_relationUncheckedCreateWithoutFollowerInput> | user_follow_relationCreateWithoutFollowerInput[] | user_follow_relationUncheckedCreateWithoutFollowerInput[]
    connectOrCreate?: user_follow_relationCreateOrConnectWithoutFollowerInput | user_follow_relationCreateOrConnectWithoutFollowerInput[]
    upsert?: user_follow_relationUpsertWithWhereUniqueWithoutFollowerInput | user_follow_relationUpsertWithWhereUniqueWithoutFollowerInput[]
    createMany?: user_follow_relationCreateManyFollowerInputEnvelope
    set?: user_follow_relationWhereUniqueInput | user_follow_relationWhereUniqueInput[]
    disconnect?: user_follow_relationWhereUniqueInput | user_follow_relationWhereUniqueInput[]
    delete?: user_follow_relationWhereUniqueInput | user_follow_relationWhereUniqueInput[]
    connect?: user_follow_relationWhereUniqueInput | user_follow_relationWhereUniqueInput[]
    update?: user_follow_relationUpdateWithWhereUniqueWithoutFollowerInput | user_follow_relationUpdateWithWhereUniqueWithoutFollowerInput[]
    updateMany?: user_follow_relationUpdateManyWithWhereWithoutFollowerInput | user_follow_relationUpdateManyWithWhereWithoutFollowerInput[]
    deleteMany?: user_follow_relationScalarWhereInput | user_follow_relationScalarWhereInput[]
  }

  export type patchUpdateManyWithoutUserNestedInput = {
    create?: XOR<patchCreateWithoutUserInput, patchUncheckedCreateWithoutUserInput> | patchCreateWithoutUserInput[] | patchUncheckedCreateWithoutUserInput[]
    connectOrCreate?: patchCreateOrConnectWithoutUserInput | patchCreateOrConnectWithoutUserInput[]
    upsert?: patchUpsertWithWhereUniqueWithoutUserInput | patchUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: patchCreateManyUserInputEnvelope
    set?: patchWhereUniqueInput | patchWhereUniqueInput[]
    disconnect?: patchWhereUniqueInput | patchWhereUniqueInput[]
    delete?: patchWhereUniqueInput | patchWhereUniqueInput[]
    connect?: patchWhereUniqueInput | patchWhereUniqueInput[]
    update?: patchUpdateWithWhereUniqueWithoutUserInput | patchUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: patchUpdateManyWithWhereWithoutUserInput | patchUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: patchScalarWhereInput | patchScalarWhereInput[]
  }

  export type patch_commentUpdateManyWithoutUserNestedInput = {
    create?: XOR<patch_commentCreateWithoutUserInput, patch_commentUncheckedCreateWithoutUserInput> | patch_commentCreateWithoutUserInput[] | patch_commentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: patch_commentCreateOrConnectWithoutUserInput | patch_commentCreateOrConnectWithoutUserInput[]
    upsert?: patch_commentUpsertWithWhereUniqueWithoutUserInput | patch_commentUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: patch_commentCreateManyUserInputEnvelope
    set?: patch_commentWhereUniqueInput | patch_commentWhereUniqueInput[]
    disconnect?: patch_commentWhereUniqueInput | patch_commentWhereUniqueInput[]
    delete?: patch_commentWhereUniqueInput | patch_commentWhereUniqueInput[]
    connect?: patch_commentWhereUniqueInput | patch_commentWhereUniqueInput[]
    update?: patch_commentUpdateWithWhereUniqueWithoutUserInput | patch_commentUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: patch_commentUpdateManyWithWhereWithoutUserInput | patch_commentUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: patch_commentScalarWhereInput | patch_commentScalarWhereInput[]
  }

  export type patch_resourceUpdateManyWithoutUserNestedInput = {
    create?: XOR<patch_resourceCreateWithoutUserInput, patch_resourceUncheckedCreateWithoutUserInput> | patch_resourceCreateWithoutUserInput[] | patch_resourceUncheckedCreateWithoutUserInput[]
    connectOrCreate?: patch_resourceCreateOrConnectWithoutUserInput | patch_resourceCreateOrConnectWithoutUserInput[]
    upsert?: patch_resourceUpsertWithWhereUniqueWithoutUserInput | patch_resourceUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: patch_resourceCreateManyUserInputEnvelope
    set?: patch_resourceWhereUniqueInput | patch_resourceWhereUniqueInput[]
    disconnect?: patch_resourceWhereUniqueInput | patch_resourceWhereUniqueInput[]
    delete?: patch_resourceWhereUniqueInput | patch_resourceWhereUniqueInput[]
    connect?: patch_resourceWhereUniqueInput | patch_resourceWhereUniqueInput[]
    update?: patch_resourceUpdateWithWhereUniqueWithoutUserInput | patch_resourceUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: patch_resourceUpdateManyWithWhereWithoutUserInput | patch_resourceUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: patch_resourceScalarWhereInput | patch_resourceScalarWhereInput[]
  }

  export type patch_characterUpdateManyWithoutUserNestedInput = {
    create?: XOR<patch_characterCreateWithoutUserInput, patch_characterUncheckedCreateWithoutUserInput> | patch_characterCreateWithoutUserInput[] | patch_characterUncheckedCreateWithoutUserInput[]
    connectOrCreate?: patch_characterCreateOrConnectWithoutUserInput | patch_characterCreateOrConnectWithoutUserInput[]
    upsert?: patch_characterUpsertWithWhereUniqueWithoutUserInput | patch_characterUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: patch_characterCreateManyUserInputEnvelope
    set?: patch_characterWhereUniqueInput | patch_characterWhereUniqueInput[]
    disconnect?: patch_characterWhereUniqueInput | patch_characterWhereUniqueInput[]
    delete?: patch_characterWhereUniqueInput | patch_characterWhereUniqueInput[]
    connect?: patch_characterWhereUniqueInput | patch_characterWhereUniqueInput[]
    update?: patch_characterUpdateWithWhereUniqueWithoutUserInput | patch_characterUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: patch_characterUpdateManyWithWhereWithoutUserInput | patch_characterUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: patch_characterScalarWhereInput | patch_characterScalarWhereInput[]
  }

  export type user_messageUpdateManyWithoutSenderNestedInput = {
    create?: XOR<user_messageCreateWithoutSenderInput, user_messageUncheckedCreateWithoutSenderInput> | user_messageCreateWithoutSenderInput[] | user_messageUncheckedCreateWithoutSenderInput[]
    connectOrCreate?: user_messageCreateOrConnectWithoutSenderInput | user_messageCreateOrConnectWithoutSenderInput[]
    upsert?: user_messageUpsertWithWhereUniqueWithoutSenderInput | user_messageUpsertWithWhereUniqueWithoutSenderInput[]
    createMany?: user_messageCreateManySenderInputEnvelope
    set?: user_messageWhereUniqueInput | user_messageWhereUniqueInput[]
    disconnect?: user_messageWhereUniqueInput | user_messageWhereUniqueInput[]
    delete?: user_messageWhereUniqueInput | user_messageWhereUniqueInput[]
    connect?: user_messageWhereUniqueInput | user_messageWhereUniqueInput[]
    update?: user_messageUpdateWithWhereUniqueWithoutSenderInput | user_messageUpdateWithWhereUniqueWithoutSenderInput[]
    updateMany?: user_messageUpdateManyWithWhereWithoutSenderInput | user_messageUpdateManyWithWhereWithoutSenderInput[]
    deleteMany?: user_messageScalarWhereInput | user_messageScalarWhereInput[]
  }

  export type user_messageUpdateManyWithoutRecipientNestedInput = {
    create?: XOR<user_messageCreateWithoutRecipientInput, user_messageUncheckedCreateWithoutRecipientInput> | user_messageCreateWithoutRecipientInput[] | user_messageUncheckedCreateWithoutRecipientInput[]
    connectOrCreate?: user_messageCreateOrConnectWithoutRecipientInput | user_messageCreateOrConnectWithoutRecipientInput[]
    upsert?: user_messageUpsertWithWhereUniqueWithoutRecipientInput | user_messageUpsertWithWhereUniqueWithoutRecipientInput[]
    createMany?: user_messageCreateManyRecipientInputEnvelope
    set?: user_messageWhereUniqueInput | user_messageWhereUniqueInput[]
    disconnect?: user_messageWhereUniqueInput | user_messageWhereUniqueInput[]
    delete?: user_messageWhereUniqueInput | user_messageWhereUniqueInput[]
    connect?: user_messageWhereUniqueInput | user_messageWhereUniqueInput[]
    update?: user_messageUpdateWithWhereUniqueWithoutRecipientInput | user_messageUpdateWithWhereUniqueWithoutRecipientInput[]
    updateMany?: user_messageUpdateManyWithWhereWithoutRecipientInput | user_messageUpdateManyWithWhereWithoutRecipientInput[]
    deleteMany?: user_messageScalarWhereInput | user_messageScalarWhereInput[]
  }

  export type admin_logUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<admin_logCreateWithoutUserInput, admin_logUncheckedCreateWithoutUserInput> | admin_logCreateWithoutUserInput[] | admin_logUncheckedCreateWithoutUserInput[]
    connectOrCreate?: admin_logCreateOrConnectWithoutUserInput | admin_logCreateOrConnectWithoutUserInput[]
    upsert?: admin_logUpsertWithWhereUniqueWithoutUserInput | admin_logUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: admin_logCreateManyUserInputEnvelope
    set?: admin_logWhereUniqueInput | admin_logWhereUniqueInput[]
    disconnect?: admin_logWhereUniqueInput | admin_logWhereUniqueInput[]
    delete?: admin_logWhereUniqueInput | admin_logWhereUniqueInput[]
    connect?: admin_logWhereUniqueInput | admin_logWhereUniqueInput[]
    update?: admin_logUpdateWithWhereUniqueWithoutUserInput | admin_logUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: admin_logUpdateManyWithWhereWithoutUserInput | admin_logUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: admin_logScalarWhereInput | admin_logScalarWhereInput[]
  }

  export type patch_tagUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<patch_tagCreateWithoutUserInput, patch_tagUncheckedCreateWithoutUserInput> | patch_tagCreateWithoutUserInput[] | patch_tagUncheckedCreateWithoutUserInput[]
    connectOrCreate?: patch_tagCreateOrConnectWithoutUserInput | patch_tagCreateOrConnectWithoutUserInput[]
    upsert?: patch_tagUpsertWithWhereUniqueWithoutUserInput | patch_tagUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: patch_tagCreateManyUserInputEnvelope
    set?: patch_tagWhereUniqueInput | patch_tagWhereUniqueInput[]
    disconnect?: patch_tagWhereUniqueInput | patch_tagWhereUniqueInput[]
    delete?: patch_tagWhereUniqueInput | patch_tagWhereUniqueInput[]
    connect?: patch_tagWhereUniqueInput | patch_tagWhereUniqueInput[]
    update?: patch_tagUpdateWithWhereUniqueWithoutUserInput | patch_tagUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: patch_tagUpdateManyWithWhereWithoutUserInput | patch_tagUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: patch_tagScalarWhereInput | patch_tagScalarWhereInput[]
  }

  export type user_patch_comment_like_relationUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<user_patch_comment_like_relationCreateWithoutUserInput, user_patch_comment_like_relationUncheckedCreateWithoutUserInput> | user_patch_comment_like_relationCreateWithoutUserInput[] | user_patch_comment_like_relationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: user_patch_comment_like_relationCreateOrConnectWithoutUserInput | user_patch_comment_like_relationCreateOrConnectWithoutUserInput[]
    upsert?: user_patch_comment_like_relationUpsertWithWhereUniqueWithoutUserInput | user_patch_comment_like_relationUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: user_patch_comment_like_relationCreateManyUserInputEnvelope
    set?: user_patch_comment_like_relationWhereUniqueInput | user_patch_comment_like_relationWhereUniqueInput[]
    disconnect?: user_patch_comment_like_relationWhereUniqueInput | user_patch_comment_like_relationWhereUniqueInput[]
    delete?: user_patch_comment_like_relationWhereUniqueInput | user_patch_comment_like_relationWhereUniqueInput[]
    connect?: user_patch_comment_like_relationWhereUniqueInput | user_patch_comment_like_relationWhereUniqueInput[]
    update?: user_patch_comment_like_relationUpdateWithWhereUniqueWithoutUserInput | user_patch_comment_like_relationUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: user_patch_comment_like_relationUpdateManyWithWhereWithoutUserInput | user_patch_comment_like_relationUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: user_patch_comment_like_relationScalarWhereInput | user_patch_comment_like_relationScalarWhereInput[]
  }

  export type user_patch_resource_like_relationUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<user_patch_resource_like_relationCreateWithoutUserInput, user_patch_resource_like_relationUncheckedCreateWithoutUserInput> | user_patch_resource_like_relationCreateWithoutUserInput[] | user_patch_resource_like_relationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: user_patch_resource_like_relationCreateOrConnectWithoutUserInput | user_patch_resource_like_relationCreateOrConnectWithoutUserInput[]
    upsert?: user_patch_resource_like_relationUpsertWithWhereUniqueWithoutUserInput | user_patch_resource_like_relationUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: user_patch_resource_like_relationCreateManyUserInputEnvelope
    set?: user_patch_resource_like_relationWhereUniqueInput | user_patch_resource_like_relationWhereUniqueInput[]
    disconnect?: user_patch_resource_like_relationWhereUniqueInput | user_patch_resource_like_relationWhereUniqueInput[]
    delete?: user_patch_resource_like_relationWhereUniqueInput | user_patch_resource_like_relationWhereUniqueInput[]
    connect?: user_patch_resource_like_relationWhereUniqueInput | user_patch_resource_like_relationWhereUniqueInput[]
    update?: user_patch_resource_like_relationUpdateWithWhereUniqueWithoutUserInput | user_patch_resource_like_relationUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: user_patch_resource_like_relationUpdateManyWithWhereWithoutUserInput | user_patch_resource_like_relationUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: user_patch_resource_like_relationScalarWhereInput | user_patch_resource_like_relationScalarWhereInput[]
  }

  export type user_patch_favorite_folderUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<user_patch_favorite_folderCreateWithoutUserInput, user_patch_favorite_folderUncheckedCreateWithoutUserInput> | user_patch_favorite_folderCreateWithoutUserInput[] | user_patch_favorite_folderUncheckedCreateWithoutUserInput[]
    connectOrCreate?: user_patch_favorite_folderCreateOrConnectWithoutUserInput | user_patch_favorite_folderCreateOrConnectWithoutUserInput[]
    upsert?: user_patch_favorite_folderUpsertWithWhereUniqueWithoutUserInput | user_patch_favorite_folderUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: user_patch_favorite_folderCreateManyUserInputEnvelope
    set?: user_patch_favorite_folderWhereUniqueInput | user_patch_favorite_folderWhereUniqueInput[]
    disconnect?: user_patch_favorite_folderWhereUniqueInput | user_patch_favorite_folderWhereUniqueInput[]
    delete?: user_patch_favorite_folderWhereUniqueInput | user_patch_favorite_folderWhereUniqueInput[]
    connect?: user_patch_favorite_folderWhereUniqueInput | user_patch_favorite_folderWhereUniqueInput[]
    update?: user_patch_favorite_folderUpdateWithWhereUniqueWithoutUserInput | user_patch_favorite_folderUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: user_patch_favorite_folderUpdateManyWithWhereWithoutUserInput | user_patch_favorite_folderUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: user_patch_favorite_folderScalarWhereInput | user_patch_favorite_folderScalarWhereInput[]
  }

  export type user_follow_relationUncheckedUpdateManyWithoutFollowingNestedInput = {
    create?: XOR<user_follow_relationCreateWithoutFollowingInput, user_follow_relationUncheckedCreateWithoutFollowingInput> | user_follow_relationCreateWithoutFollowingInput[] | user_follow_relationUncheckedCreateWithoutFollowingInput[]
    connectOrCreate?: user_follow_relationCreateOrConnectWithoutFollowingInput | user_follow_relationCreateOrConnectWithoutFollowingInput[]
    upsert?: user_follow_relationUpsertWithWhereUniqueWithoutFollowingInput | user_follow_relationUpsertWithWhereUniqueWithoutFollowingInput[]
    createMany?: user_follow_relationCreateManyFollowingInputEnvelope
    set?: user_follow_relationWhereUniqueInput | user_follow_relationWhereUniqueInput[]
    disconnect?: user_follow_relationWhereUniqueInput | user_follow_relationWhereUniqueInput[]
    delete?: user_follow_relationWhereUniqueInput | user_follow_relationWhereUniqueInput[]
    connect?: user_follow_relationWhereUniqueInput | user_follow_relationWhereUniqueInput[]
    update?: user_follow_relationUpdateWithWhereUniqueWithoutFollowingInput | user_follow_relationUpdateWithWhereUniqueWithoutFollowingInput[]
    updateMany?: user_follow_relationUpdateManyWithWhereWithoutFollowingInput | user_follow_relationUpdateManyWithWhereWithoutFollowingInput[]
    deleteMany?: user_follow_relationScalarWhereInput | user_follow_relationScalarWhereInput[]
  }

  export type user_follow_relationUncheckedUpdateManyWithoutFollowerNestedInput = {
    create?: XOR<user_follow_relationCreateWithoutFollowerInput, user_follow_relationUncheckedCreateWithoutFollowerInput> | user_follow_relationCreateWithoutFollowerInput[] | user_follow_relationUncheckedCreateWithoutFollowerInput[]
    connectOrCreate?: user_follow_relationCreateOrConnectWithoutFollowerInput | user_follow_relationCreateOrConnectWithoutFollowerInput[]
    upsert?: user_follow_relationUpsertWithWhereUniqueWithoutFollowerInput | user_follow_relationUpsertWithWhereUniqueWithoutFollowerInput[]
    createMany?: user_follow_relationCreateManyFollowerInputEnvelope
    set?: user_follow_relationWhereUniqueInput | user_follow_relationWhereUniqueInput[]
    disconnect?: user_follow_relationWhereUniqueInput | user_follow_relationWhereUniqueInput[]
    delete?: user_follow_relationWhereUniqueInput | user_follow_relationWhereUniqueInput[]
    connect?: user_follow_relationWhereUniqueInput | user_follow_relationWhereUniqueInput[]
    update?: user_follow_relationUpdateWithWhereUniqueWithoutFollowerInput | user_follow_relationUpdateWithWhereUniqueWithoutFollowerInput[]
    updateMany?: user_follow_relationUpdateManyWithWhereWithoutFollowerInput | user_follow_relationUpdateManyWithWhereWithoutFollowerInput[]
    deleteMany?: user_follow_relationScalarWhereInput | user_follow_relationScalarWhereInput[]
  }

  export type patchUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<patchCreateWithoutUserInput, patchUncheckedCreateWithoutUserInput> | patchCreateWithoutUserInput[] | patchUncheckedCreateWithoutUserInput[]
    connectOrCreate?: patchCreateOrConnectWithoutUserInput | patchCreateOrConnectWithoutUserInput[]
    upsert?: patchUpsertWithWhereUniqueWithoutUserInput | patchUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: patchCreateManyUserInputEnvelope
    set?: patchWhereUniqueInput | patchWhereUniqueInput[]
    disconnect?: patchWhereUniqueInput | patchWhereUniqueInput[]
    delete?: patchWhereUniqueInput | patchWhereUniqueInput[]
    connect?: patchWhereUniqueInput | patchWhereUniqueInput[]
    update?: patchUpdateWithWhereUniqueWithoutUserInput | patchUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: patchUpdateManyWithWhereWithoutUserInput | patchUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: patchScalarWhereInput | patchScalarWhereInput[]
  }

  export type patch_commentUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<patch_commentCreateWithoutUserInput, patch_commentUncheckedCreateWithoutUserInput> | patch_commentCreateWithoutUserInput[] | patch_commentUncheckedCreateWithoutUserInput[]
    connectOrCreate?: patch_commentCreateOrConnectWithoutUserInput | patch_commentCreateOrConnectWithoutUserInput[]
    upsert?: patch_commentUpsertWithWhereUniqueWithoutUserInput | patch_commentUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: patch_commentCreateManyUserInputEnvelope
    set?: patch_commentWhereUniqueInput | patch_commentWhereUniqueInput[]
    disconnect?: patch_commentWhereUniqueInput | patch_commentWhereUniqueInput[]
    delete?: patch_commentWhereUniqueInput | patch_commentWhereUniqueInput[]
    connect?: patch_commentWhereUniqueInput | patch_commentWhereUniqueInput[]
    update?: patch_commentUpdateWithWhereUniqueWithoutUserInput | patch_commentUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: patch_commentUpdateManyWithWhereWithoutUserInput | patch_commentUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: patch_commentScalarWhereInput | patch_commentScalarWhereInput[]
  }

  export type patch_resourceUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<patch_resourceCreateWithoutUserInput, patch_resourceUncheckedCreateWithoutUserInput> | patch_resourceCreateWithoutUserInput[] | patch_resourceUncheckedCreateWithoutUserInput[]
    connectOrCreate?: patch_resourceCreateOrConnectWithoutUserInput | patch_resourceCreateOrConnectWithoutUserInput[]
    upsert?: patch_resourceUpsertWithWhereUniqueWithoutUserInput | patch_resourceUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: patch_resourceCreateManyUserInputEnvelope
    set?: patch_resourceWhereUniqueInput | patch_resourceWhereUniqueInput[]
    disconnect?: patch_resourceWhereUniqueInput | patch_resourceWhereUniqueInput[]
    delete?: patch_resourceWhereUniqueInput | patch_resourceWhereUniqueInput[]
    connect?: patch_resourceWhereUniqueInput | patch_resourceWhereUniqueInput[]
    update?: patch_resourceUpdateWithWhereUniqueWithoutUserInput | patch_resourceUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: patch_resourceUpdateManyWithWhereWithoutUserInput | patch_resourceUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: patch_resourceScalarWhereInput | patch_resourceScalarWhereInput[]
  }

  export type patch_characterUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<patch_characterCreateWithoutUserInput, patch_characterUncheckedCreateWithoutUserInput> | patch_characterCreateWithoutUserInput[] | patch_characterUncheckedCreateWithoutUserInput[]
    connectOrCreate?: patch_characterCreateOrConnectWithoutUserInput | patch_characterCreateOrConnectWithoutUserInput[]
    upsert?: patch_characterUpsertWithWhereUniqueWithoutUserInput | patch_characterUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: patch_characterCreateManyUserInputEnvelope
    set?: patch_characterWhereUniqueInput | patch_characterWhereUniqueInput[]
    disconnect?: patch_characterWhereUniqueInput | patch_characterWhereUniqueInput[]
    delete?: patch_characterWhereUniqueInput | patch_characterWhereUniqueInput[]
    connect?: patch_characterWhereUniqueInput | patch_characterWhereUniqueInput[]
    update?: patch_characterUpdateWithWhereUniqueWithoutUserInput | patch_characterUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: patch_characterUpdateManyWithWhereWithoutUserInput | patch_characterUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: patch_characterScalarWhereInput | patch_characterScalarWhereInput[]
  }

  export type user_messageUncheckedUpdateManyWithoutSenderNestedInput = {
    create?: XOR<user_messageCreateWithoutSenderInput, user_messageUncheckedCreateWithoutSenderInput> | user_messageCreateWithoutSenderInput[] | user_messageUncheckedCreateWithoutSenderInput[]
    connectOrCreate?: user_messageCreateOrConnectWithoutSenderInput | user_messageCreateOrConnectWithoutSenderInput[]
    upsert?: user_messageUpsertWithWhereUniqueWithoutSenderInput | user_messageUpsertWithWhereUniqueWithoutSenderInput[]
    createMany?: user_messageCreateManySenderInputEnvelope
    set?: user_messageWhereUniqueInput | user_messageWhereUniqueInput[]
    disconnect?: user_messageWhereUniqueInput | user_messageWhereUniqueInput[]
    delete?: user_messageWhereUniqueInput | user_messageWhereUniqueInput[]
    connect?: user_messageWhereUniqueInput | user_messageWhereUniqueInput[]
    update?: user_messageUpdateWithWhereUniqueWithoutSenderInput | user_messageUpdateWithWhereUniqueWithoutSenderInput[]
    updateMany?: user_messageUpdateManyWithWhereWithoutSenderInput | user_messageUpdateManyWithWhereWithoutSenderInput[]
    deleteMany?: user_messageScalarWhereInput | user_messageScalarWhereInput[]
  }

  export type user_messageUncheckedUpdateManyWithoutRecipientNestedInput = {
    create?: XOR<user_messageCreateWithoutRecipientInput, user_messageUncheckedCreateWithoutRecipientInput> | user_messageCreateWithoutRecipientInput[] | user_messageUncheckedCreateWithoutRecipientInput[]
    connectOrCreate?: user_messageCreateOrConnectWithoutRecipientInput | user_messageCreateOrConnectWithoutRecipientInput[]
    upsert?: user_messageUpsertWithWhereUniqueWithoutRecipientInput | user_messageUpsertWithWhereUniqueWithoutRecipientInput[]
    createMany?: user_messageCreateManyRecipientInputEnvelope
    set?: user_messageWhereUniqueInput | user_messageWhereUniqueInput[]
    disconnect?: user_messageWhereUniqueInput | user_messageWhereUniqueInput[]
    delete?: user_messageWhereUniqueInput | user_messageWhereUniqueInput[]
    connect?: user_messageWhereUniqueInput | user_messageWhereUniqueInput[]
    update?: user_messageUpdateWithWhereUniqueWithoutRecipientInput | user_messageUpdateWithWhereUniqueWithoutRecipientInput[]
    updateMany?: user_messageUpdateManyWithWhereWithoutRecipientInput | user_messageUpdateManyWithWhereWithoutRecipientInput[]
    deleteMany?: user_messageScalarWhereInput | user_messageScalarWhereInput[]
  }

  export type userCreateNestedOneWithoutAdmin_logInput = {
    create?: XOR<userCreateWithoutAdmin_logInput, userUncheckedCreateWithoutAdmin_logInput>
    connectOrCreate?: userCreateOrConnectWithoutAdmin_logInput
    connect?: userWhereUniqueInput
  }

  export type userUpdateOneRequiredWithoutAdmin_logNestedInput = {
    create?: XOR<userCreateWithoutAdmin_logInput, userUncheckedCreateWithoutAdmin_logInput>
    connectOrCreate?: userCreateOrConnectWithoutAdmin_logInput
    upsert?: userUpsertWithoutAdmin_logInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutAdmin_logInput, userUpdateWithoutAdmin_logInput>, userUncheckedUpdateWithoutAdmin_logInput>
  }

  export type userCreateNestedOneWithoutFollowerInput = {
    create?: XOR<userCreateWithoutFollowerInput, userUncheckedCreateWithoutFollowerInput>
    connectOrCreate?: userCreateOrConnectWithoutFollowerInput
    connect?: userWhereUniqueInput
  }

  export type userCreateNestedOneWithoutFollowingInput = {
    create?: XOR<userCreateWithoutFollowingInput, userUncheckedCreateWithoutFollowingInput>
    connectOrCreate?: userCreateOrConnectWithoutFollowingInput
    connect?: userWhereUniqueInput
  }

  export type userUpdateOneRequiredWithoutFollowerNestedInput = {
    create?: XOR<userCreateWithoutFollowerInput, userUncheckedCreateWithoutFollowerInput>
    connectOrCreate?: userCreateOrConnectWithoutFollowerInput
    upsert?: userUpsertWithoutFollowerInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutFollowerInput, userUpdateWithoutFollowerInput>, userUncheckedUpdateWithoutFollowerInput>
  }

  export type userUpdateOneRequiredWithoutFollowingNestedInput = {
    create?: XOR<userCreateWithoutFollowingInput, userUncheckedCreateWithoutFollowingInput>
    connectOrCreate?: userCreateOrConnectWithoutFollowingInput
    upsert?: userUpsertWithoutFollowingInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutFollowingInput, userUpdateWithoutFollowingInput>, userUncheckedUpdateWithoutFollowingInput>
  }

  export type userCreateNestedOneWithoutSend_messageInput = {
    create?: XOR<userCreateWithoutSend_messageInput, userUncheckedCreateWithoutSend_messageInput>
    connectOrCreate?: userCreateOrConnectWithoutSend_messageInput
    connect?: userWhereUniqueInput
  }

  export type userCreateNestedOneWithoutReceive_messageInput = {
    create?: XOR<userCreateWithoutReceive_messageInput, userUncheckedCreateWithoutReceive_messageInput>
    connectOrCreate?: userCreateOrConnectWithoutReceive_messageInput
    connect?: userWhereUniqueInput
  }

  export type userUpdateOneWithoutSend_messageNestedInput = {
    create?: XOR<userCreateWithoutSend_messageInput, userUncheckedCreateWithoutSend_messageInput>
    connectOrCreate?: userCreateOrConnectWithoutSend_messageInput
    upsert?: userUpsertWithoutSend_messageInput
    disconnect?: userWhereInput | boolean
    delete?: userWhereInput | boolean
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutSend_messageInput, userUpdateWithoutSend_messageInput>, userUncheckedUpdateWithoutSend_messageInput>
  }

  export type userUpdateOneWithoutReceive_messageNestedInput = {
    create?: XOR<userCreateWithoutReceive_messageInput, userUncheckedCreateWithoutReceive_messageInput>
    connectOrCreate?: userCreateOrConnectWithoutReceive_messageInput
    upsert?: userUpsertWithoutReceive_messageInput
    disconnect?: userWhereInput | boolean
    delete?: userWhereInput | boolean
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutReceive_messageInput, userUpdateWithoutReceive_messageInput>, userUncheckedUpdateWithoutReceive_messageInput>
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type userCreateNestedOneWithoutPatch_favorite_folderInput = {
    create?: XOR<userCreateWithoutPatch_favorite_folderInput, userUncheckedCreateWithoutPatch_favorite_folderInput>
    connectOrCreate?: userCreateOrConnectWithoutPatch_favorite_folderInput
    connect?: userWhereUniqueInput
  }

  export type user_patch_favorite_folder_relationCreateNestedManyWithoutFolderInput = {
    create?: XOR<user_patch_favorite_folder_relationCreateWithoutFolderInput, user_patch_favorite_folder_relationUncheckedCreateWithoutFolderInput> | user_patch_favorite_folder_relationCreateWithoutFolderInput[] | user_patch_favorite_folder_relationUncheckedCreateWithoutFolderInput[]
    connectOrCreate?: user_patch_favorite_folder_relationCreateOrConnectWithoutFolderInput | user_patch_favorite_folder_relationCreateOrConnectWithoutFolderInput[]
    createMany?: user_patch_favorite_folder_relationCreateManyFolderInputEnvelope
    connect?: user_patch_favorite_folder_relationWhereUniqueInput | user_patch_favorite_folder_relationWhereUniqueInput[]
  }

  export type user_patch_favorite_folder_relationUncheckedCreateNestedManyWithoutFolderInput = {
    create?: XOR<user_patch_favorite_folder_relationCreateWithoutFolderInput, user_patch_favorite_folder_relationUncheckedCreateWithoutFolderInput> | user_patch_favorite_folder_relationCreateWithoutFolderInput[] | user_patch_favorite_folder_relationUncheckedCreateWithoutFolderInput[]
    connectOrCreate?: user_patch_favorite_folder_relationCreateOrConnectWithoutFolderInput | user_patch_favorite_folder_relationCreateOrConnectWithoutFolderInput[]
    createMany?: user_patch_favorite_folder_relationCreateManyFolderInputEnvelope
    connect?: user_patch_favorite_folder_relationWhereUniqueInput | user_patch_favorite_folder_relationWhereUniqueInput[]
  }

  export type userUpdateOneRequiredWithoutPatch_favorite_folderNestedInput = {
    create?: XOR<userCreateWithoutPatch_favorite_folderInput, userUncheckedCreateWithoutPatch_favorite_folderInput>
    connectOrCreate?: userCreateOrConnectWithoutPatch_favorite_folderInput
    upsert?: userUpsertWithoutPatch_favorite_folderInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutPatch_favorite_folderInput, userUpdateWithoutPatch_favorite_folderInput>, userUncheckedUpdateWithoutPatch_favorite_folderInput>
  }

  export type user_patch_favorite_folder_relationUpdateManyWithoutFolderNestedInput = {
    create?: XOR<user_patch_favorite_folder_relationCreateWithoutFolderInput, user_patch_favorite_folder_relationUncheckedCreateWithoutFolderInput> | user_patch_favorite_folder_relationCreateWithoutFolderInput[] | user_patch_favorite_folder_relationUncheckedCreateWithoutFolderInput[]
    connectOrCreate?: user_patch_favorite_folder_relationCreateOrConnectWithoutFolderInput | user_patch_favorite_folder_relationCreateOrConnectWithoutFolderInput[]
    upsert?: user_patch_favorite_folder_relationUpsertWithWhereUniqueWithoutFolderInput | user_patch_favorite_folder_relationUpsertWithWhereUniqueWithoutFolderInput[]
    createMany?: user_patch_favorite_folder_relationCreateManyFolderInputEnvelope
    set?: user_patch_favorite_folder_relationWhereUniqueInput | user_patch_favorite_folder_relationWhereUniqueInput[]
    disconnect?: user_patch_favorite_folder_relationWhereUniqueInput | user_patch_favorite_folder_relationWhereUniqueInput[]
    delete?: user_patch_favorite_folder_relationWhereUniqueInput | user_patch_favorite_folder_relationWhereUniqueInput[]
    connect?: user_patch_favorite_folder_relationWhereUniqueInput | user_patch_favorite_folder_relationWhereUniqueInput[]
    update?: user_patch_favorite_folder_relationUpdateWithWhereUniqueWithoutFolderInput | user_patch_favorite_folder_relationUpdateWithWhereUniqueWithoutFolderInput[]
    updateMany?: user_patch_favorite_folder_relationUpdateManyWithWhereWithoutFolderInput | user_patch_favorite_folder_relationUpdateManyWithWhereWithoutFolderInput[]
    deleteMany?: user_patch_favorite_folder_relationScalarWhereInput | user_patch_favorite_folder_relationScalarWhereInput[]
  }

  export type user_patch_favorite_folder_relationUncheckedUpdateManyWithoutFolderNestedInput = {
    create?: XOR<user_patch_favorite_folder_relationCreateWithoutFolderInput, user_patch_favorite_folder_relationUncheckedCreateWithoutFolderInput> | user_patch_favorite_folder_relationCreateWithoutFolderInput[] | user_patch_favorite_folder_relationUncheckedCreateWithoutFolderInput[]
    connectOrCreate?: user_patch_favorite_folder_relationCreateOrConnectWithoutFolderInput | user_patch_favorite_folder_relationCreateOrConnectWithoutFolderInput[]
    upsert?: user_patch_favorite_folder_relationUpsertWithWhereUniqueWithoutFolderInput | user_patch_favorite_folder_relationUpsertWithWhereUniqueWithoutFolderInput[]
    createMany?: user_patch_favorite_folder_relationCreateManyFolderInputEnvelope
    set?: user_patch_favorite_folder_relationWhereUniqueInput | user_patch_favorite_folder_relationWhereUniqueInput[]
    disconnect?: user_patch_favorite_folder_relationWhereUniqueInput | user_patch_favorite_folder_relationWhereUniqueInput[]
    delete?: user_patch_favorite_folder_relationWhereUniqueInput | user_patch_favorite_folder_relationWhereUniqueInput[]
    connect?: user_patch_favorite_folder_relationWhereUniqueInput | user_patch_favorite_folder_relationWhereUniqueInput[]
    update?: user_patch_favorite_folder_relationUpdateWithWhereUniqueWithoutFolderInput | user_patch_favorite_folder_relationUpdateWithWhereUniqueWithoutFolderInput[]
    updateMany?: user_patch_favorite_folder_relationUpdateManyWithWhereWithoutFolderInput | user_patch_favorite_folder_relationUpdateManyWithWhereWithoutFolderInput[]
    deleteMany?: user_patch_favorite_folder_relationScalarWhereInput | user_patch_favorite_folder_relationScalarWhereInput[]
  }

  export type user_patch_favorite_folderCreateNestedOneWithoutPatchInput = {
    create?: XOR<user_patch_favorite_folderCreateWithoutPatchInput, user_patch_favorite_folderUncheckedCreateWithoutPatchInput>
    connectOrCreate?: user_patch_favorite_folderCreateOrConnectWithoutPatchInput
    connect?: user_patch_favorite_folderWhereUniqueInput
  }

  export type patchCreateNestedOneWithoutFavorite_folderInput = {
    create?: XOR<patchCreateWithoutFavorite_folderInput, patchUncheckedCreateWithoutFavorite_folderInput>
    connectOrCreate?: patchCreateOrConnectWithoutFavorite_folderInput
    connect?: patchWhereUniqueInput
  }

  export type user_patch_favorite_folderUpdateOneRequiredWithoutPatchNestedInput = {
    create?: XOR<user_patch_favorite_folderCreateWithoutPatchInput, user_patch_favorite_folderUncheckedCreateWithoutPatchInput>
    connectOrCreate?: user_patch_favorite_folderCreateOrConnectWithoutPatchInput
    upsert?: user_patch_favorite_folderUpsertWithoutPatchInput
    connect?: user_patch_favorite_folderWhereUniqueInput
    update?: XOR<XOR<user_patch_favorite_folderUpdateToOneWithWhereWithoutPatchInput, user_patch_favorite_folderUpdateWithoutPatchInput>, user_patch_favorite_folderUncheckedUpdateWithoutPatchInput>
  }

  export type patchUpdateOneRequiredWithoutFavorite_folderNestedInput = {
    create?: XOR<patchCreateWithoutFavorite_folderInput, patchUncheckedCreateWithoutFavorite_folderInput>
    connectOrCreate?: patchCreateOrConnectWithoutFavorite_folderInput
    upsert?: patchUpsertWithoutFavorite_folderInput
    connect?: patchWhereUniqueInput
    update?: XOR<XOR<patchUpdateToOneWithWhereWithoutFavorite_folderInput, patchUpdateWithoutFavorite_folderInput>, patchUncheckedUpdateWithoutFavorite_folderInput>
  }

  export type userCreateNestedOneWithoutPatch_comment_likeInput = {
    create?: XOR<userCreateWithoutPatch_comment_likeInput, userUncheckedCreateWithoutPatch_comment_likeInput>
    connectOrCreate?: userCreateOrConnectWithoutPatch_comment_likeInput
    connect?: userWhereUniqueInput
  }

  export type patch_commentCreateNestedOneWithoutLike_byInput = {
    create?: XOR<patch_commentCreateWithoutLike_byInput, patch_commentUncheckedCreateWithoutLike_byInput>
    connectOrCreate?: patch_commentCreateOrConnectWithoutLike_byInput
    connect?: patch_commentWhereUniqueInput
  }

  export type userUpdateOneRequiredWithoutPatch_comment_likeNestedInput = {
    create?: XOR<userCreateWithoutPatch_comment_likeInput, userUncheckedCreateWithoutPatch_comment_likeInput>
    connectOrCreate?: userCreateOrConnectWithoutPatch_comment_likeInput
    upsert?: userUpsertWithoutPatch_comment_likeInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutPatch_comment_likeInput, userUpdateWithoutPatch_comment_likeInput>, userUncheckedUpdateWithoutPatch_comment_likeInput>
  }

  export type patch_commentUpdateOneRequiredWithoutLike_byNestedInput = {
    create?: XOR<patch_commentCreateWithoutLike_byInput, patch_commentUncheckedCreateWithoutLike_byInput>
    connectOrCreate?: patch_commentCreateOrConnectWithoutLike_byInput
    upsert?: patch_commentUpsertWithoutLike_byInput
    connect?: patch_commentWhereUniqueInput
    update?: XOR<XOR<patch_commentUpdateToOneWithWhereWithoutLike_byInput, patch_commentUpdateWithoutLike_byInput>, patch_commentUncheckedUpdateWithoutLike_byInput>
  }

  export type userCreateNestedOneWithoutPatch_resource_likeInput = {
    create?: XOR<userCreateWithoutPatch_resource_likeInput, userUncheckedCreateWithoutPatch_resource_likeInput>
    connectOrCreate?: userCreateOrConnectWithoutPatch_resource_likeInput
    connect?: userWhereUniqueInput
  }

  export type patch_resourceCreateNestedOneWithoutLike_byInput = {
    create?: XOR<patch_resourceCreateWithoutLike_byInput, patch_resourceUncheckedCreateWithoutLike_byInput>
    connectOrCreate?: patch_resourceCreateOrConnectWithoutLike_byInput
    connect?: patch_resourceWhereUniqueInput
  }

  export type userUpdateOneRequiredWithoutPatch_resource_likeNestedInput = {
    create?: XOR<userCreateWithoutPatch_resource_likeInput, userUncheckedCreateWithoutPatch_resource_likeInput>
    connectOrCreate?: userCreateOrConnectWithoutPatch_resource_likeInput
    upsert?: userUpsertWithoutPatch_resource_likeInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutPatch_resource_likeInput, userUpdateWithoutPatch_resource_likeInput>, userUncheckedUpdateWithoutPatch_resource_likeInput>
  }

  export type patch_resourceUpdateOneRequiredWithoutLike_byNestedInput = {
    create?: XOR<patch_resourceCreateWithoutLike_byInput, patch_resourceUncheckedCreateWithoutLike_byInput>
    connectOrCreate?: patch_resourceCreateOrConnectWithoutLike_byInput
    upsert?: patch_resourceUpsertWithoutLike_byInput
    connect?: patch_resourceWhereUniqueInput
    update?: XOR<XOR<patch_resourceUpdateToOneWithWhereWithoutLike_byInput, patch_resourceUpdateWithoutLike_byInput>, patch_resourceUncheckedUpdateWithoutLike_byInput>
  }

  export type patchCreatetypeInput = {
    set: string[]
  }

  export type patchCreatelanguageInput = {
    set: string[]
  }

  export type patchCreateengineInput = {
    set: string[]
  }

  export type patchCreateplatformInput = {
    set: string[]
  }

  export type userCreateNestedOneWithoutPatchInput = {
    create?: XOR<userCreateWithoutPatchInput, userUncheckedCreateWithoutPatchInput>
    connectOrCreate?: userCreateOrConnectWithoutPatchInput
    connect?: userWhereUniqueInput
  }

  export type patch_aliasCreateNestedManyWithoutPatchInput = {
    create?: XOR<patch_aliasCreateWithoutPatchInput, patch_aliasUncheckedCreateWithoutPatchInput> | patch_aliasCreateWithoutPatchInput[] | patch_aliasUncheckedCreateWithoutPatchInput[]
    connectOrCreate?: patch_aliasCreateOrConnectWithoutPatchInput | patch_aliasCreateOrConnectWithoutPatchInput[]
    createMany?: patch_aliasCreateManyPatchInputEnvelope
    connect?: patch_aliasWhereUniqueInput | patch_aliasWhereUniqueInput[]
  }

  export type patch_tag_relationCreateNestedManyWithoutPatchInput = {
    create?: XOR<patch_tag_relationCreateWithoutPatchInput, patch_tag_relationUncheckedCreateWithoutPatchInput> | patch_tag_relationCreateWithoutPatchInput[] | patch_tag_relationUncheckedCreateWithoutPatchInput[]
    connectOrCreate?: patch_tag_relationCreateOrConnectWithoutPatchInput | patch_tag_relationCreateOrConnectWithoutPatchInput[]
    createMany?: patch_tag_relationCreateManyPatchInputEnvelope
    connect?: patch_tag_relationWhereUniqueInput | patch_tag_relationWhereUniqueInput[]
  }

  export type user_patch_favorite_folder_relationCreateNestedManyWithoutPatchInput = {
    create?: XOR<user_patch_favorite_folder_relationCreateWithoutPatchInput, user_patch_favorite_folder_relationUncheckedCreateWithoutPatchInput> | user_patch_favorite_folder_relationCreateWithoutPatchInput[] | user_patch_favorite_folder_relationUncheckedCreateWithoutPatchInput[]
    connectOrCreate?: user_patch_favorite_folder_relationCreateOrConnectWithoutPatchInput | user_patch_favorite_folder_relationCreateOrConnectWithoutPatchInput[]
    createMany?: user_patch_favorite_folder_relationCreateManyPatchInputEnvelope
    connect?: user_patch_favorite_folder_relationWhereUniqueInput | user_patch_favorite_folder_relationWhereUniqueInput[]
  }

  export type patch_resourceCreateNestedManyWithoutPatchInput = {
    create?: XOR<patch_resourceCreateWithoutPatchInput, patch_resourceUncheckedCreateWithoutPatchInput> | patch_resourceCreateWithoutPatchInput[] | patch_resourceUncheckedCreateWithoutPatchInput[]
    connectOrCreate?: patch_resourceCreateOrConnectWithoutPatchInput | patch_resourceCreateOrConnectWithoutPatchInput[]
    createMany?: patch_resourceCreateManyPatchInputEnvelope
    connect?: patch_resourceWhereUniqueInput | patch_resourceWhereUniqueInput[]
  }

  export type patch_commentCreateNestedManyWithoutPatchInput = {
    create?: XOR<patch_commentCreateWithoutPatchInput, patch_commentUncheckedCreateWithoutPatchInput> | patch_commentCreateWithoutPatchInput[] | patch_commentUncheckedCreateWithoutPatchInput[]
    connectOrCreate?: patch_commentCreateOrConnectWithoutPatchInput | patch_commentCreateOrConnectWithoutPatchInput[]
    createMany?: patch_commentCreateManyPatchInputEnvelope
    connect?: patch_commentWhereUniqueInput | patch_commentWhereUniqueInput[]
  }

  export type patch_characterCreateNestedManyWithoutPatchInput = {
    create?: XOR<patch_characterCreateWithoutPatchInput, patch_characterUncheckedCreateWithoutPatchInput> | patch_characterCreateWithoutPatchInput[] | patch_characterUncheckedCreateWithoutPatchInput[]
    connectOrCreate?: patch_characterCreateOrConnectWithoutPatchInput | patch_characterCreateOrConnectWithoutPatchInput[]
    createMany?: patch_characterCreateManyPatchInputEnvelope
    connect?: patch_characterWhereUniqueInput | patch_characterWhereUniqueInput[]
  }

  export type patch_aliasUncheckedCreateNestedManyWithoutPatchInput = {
    create?: XOR<patch_aliasCreateWithoutPatchInput, patch_aliasUncheckedCreateWithoutPatchInput> | patch_aliasCreateWithoutPatchInput[] | patch_aliasUncheckedCreateWithoutPatchInput[]
    connectOrCreate?: patch_aliasCreateOrConnectWithoutPatchInput | patch_aliasCreateOrConnectWithoutPatchInput[]
    createMany?: patch_aliasCreateManyPatchInputEnvelope
    connect?: patch_aliasWhereUniqueInput | patch_aliasWhereUniqueInput[]
  }

  export type patch_tag_relationUncheckedCreateNestedManyWithoutPatchInput = {
    create?: XOR<patch_tag_relationCreateWithoutPatchInput, patch_tag_relationUncheckedCreateWithoutPatchInput> | patch_tag_relationCreateWithoutPatchInput[] | patch_tag_relationUncheckedCreateWithoutPatchInput[]
    connectOrCreate?: patch_tag_relationCreateOrConnectWithoutPatchInput | patch_tag_relationCreateOrConnectWithoutPatchInput[]
    createMany?: patch_tag_relationCreateManyPatchInputEnvelope
    connect?: patch_tag_relationWhereUniqueInput | patch_tag_relationWhereUniqueInput[]
  }

  export type user_patch_favorite_folder_relationUncheckedCreateNestedManyWithoutPatchInput = {
    create?: XOR<user_patch_favorite_folder_relationCreateWithoutPatchInput, user_patch_favorite_folder_relationUncheckedCreateWithoutPatchInput> | user_patch_favorite_folder_relationCreateWithoutPatchInput[] | user_patch_favorite_folder_relationUncheckedCreateWithoutPatchInput[]
    connectOrCreate?: user_patch_favorite_folder_relationCreateOrConnectWithoutPatchInput | user_patch_favorite_folder_relationCreateOrConnectWithoutPatchInput[]
    createMany?: user_patch_favorite_folder_relationCreateManyPatchInputEnvelope
    connect?: user_patch_favorite_folder_relationWhereUniqueInput | user_patch_favorite_folder_relationWhereUniqueInput[]
  }

  export type patch_resourceUncheckedCreateNestedManyWithoutPatchInput = {
    create?: XOR<patch_resourceCreateWithoutPatchInput, patch_resourceUncheckedCreateWithoutPatchInput> | patch_resourceCreateWithoutPatchInput[] | patch_resourceUncheckedCreateWithoutPatchInput[]
    connectOrCreate?: patch_resourceCreateOrConnectWithoutPatchInput | patch_resourceCreateOrConnectWithoutPatchInput[]
    createMany?: patch_resourceCreateManyPatchInputEnvelope
    connect?: patch_resourceWhereUniqueInput | patch_resourceWhereUniqueInput[]
  }

  export type patch_commentUncheckedCreateNestedManyWithoutPatchInput = {
    create?: XOR<patch_commentCreateWithoutPatchInput, patch_commentUncheckedCreateWithoutPatchInput> | patch_commentCreateWithoutPatchInput[] | patch_commentUncheckedCreateWithoutPatchInput[]
    connectOrCreate?: patch_commentCreateOrConnectWithoutPatchInput | patch_commentCreateOrConnectWithoutPatchInput[]
    createMany?: patch_commentCreateManyPatchInputEnvelope
    connect?: patch_commentWhereUniqueInput | patch_commentWhereUniqueInput[]
  }

  export type patch_characterUncheckedCreateNestedManyWithoutPatchInput = {
    create?: XOR<patch_characterCreateWithoutPatchInput, patch_characterUncheckedCreateWithoutPatchInput> | patch_characterCreateWithoutPatchInput[] | patch_characterUncheckedCreateWithoutPatchInput[]
    connectOrCreate?: patch_characterCreateOrConnectWithoutPatchInput | patch_characterCreateOrConnectWithoutPatchInput[]
    createMany?: patch_characterCreateManyPatchInputEnvelope
    connect?: patch_characterWhereUniqueInput | patch_characterWhereUniqueInput[]
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type patchUpdatetypeInput = {
    set?: string[]
    push?: string | string[]
  }

  export type patchUpdatelanguageInput = {
    set?: string[]
    push?: string | string[]
  }

  export type patchUpdateengineInput = {
    set?: string[]
    push?: string | string[]
  }

  export type patchUpdateplatformInput = {
    set?: string[]
    push?: string | string[]
  }

  export type userUpdateOneRequiredWithoutPatchNestedInput = {
    create?: XOR<userCreateWithoutPatchInput, userUncheckedCreateWithoutPatchInput>
    connectOrCreate?: userCreateOrConnectWithoutPatchInput
    upsert?: userUpsertWithoutPatchInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutPatchInput, userUpdateWithoutPatchInput>, userUncheckedUpdateWithoutPatchInput>
  }

  export type patch_aliasUpdateManyWithoutPatchNestedInput = {
    create?: XOR<patch_aliasCreateWithoutPatchInput, patch_aliasUncheckedCreateWithoutPatchInput> | patch_aliasCreateWithoutPatchInput[] | patch_aliasUncheckedCreateWithoutPatchInput[]
    connectOrCreate?: patch_aliasCreateOrConnectWithoutPatchInput | patch_aliasCreateOrConnectWithoutPatchInput[]
    upsert?: patch_aliasUpsertWithWhereUniqueWithoutPatchInput | patch_aliasUpsertWithWhereUniqueWithoutPatchInput[]
    createMany?: patch_aliasCreateManyPatchInputEnvelope
    set?: patch_aliasWhereUniqueInput | patch_aliasWhereUniqueInput[]
    disconnect?: patch_aliasWhereUniqueInput | patch_aliasWhereUniqueInput[]
    delete?: patch_aliasWhereUniqueInput | patch_aliasWhereUniqueInput[]
    connect?: patch_aliasWhereUniqueInput | patch_aliasWhereUniqueInput[]
    update?: patch_aliasUpdateWithWhereUniqueWithoutPatchInput | patch_aliasUpdateWithWhereUniqueWithoutPatchInput[]
    updateMany?: patch_aliasUpdateManyWithWhereWithoutPatchInput | patch_aliasUpdateManyWithWhereWithoutPatchInput[]
    deleteMany?: patch_aliasScalarWhereInput | patch_aliasScalarWhereInput[]
  }

  export type patch_tag_relationUpdateManyWithoutPatchNestedInput = {
    create?: XOR<patch_tag_relationCreateWithoutPatchInput, patch_tag_relationUncheckedCreateWithoutPatchInput> | patch_tag_relationCreateWithoutPatchInput[] | patch_tag_relationUncheckedCreateWithoutPatchInput[]
    connectOrCreate?: patch_tag_relationCreateOrConnectWithoutPatchInput | patch_tag_relationCreateOrConnectWithoutPatchInput[]
    upsert?: patch_tag_relationUpsertWithWhereUniqueWithoutPatchInput | patch_tag_relationUpsertWithWhereUniqueWithoutPatchInput[]
    createMany?: patch_tag_relationCreateManyPatchInputEnvelope
    set?: patch_tag_relationWhereUniqueInput | patch_tag_relationWhereUniqueInput[]
    disconnect?: patch_tag_relationWhereUniqueInput | patch_tag_relationWhereUniqueInput[]
    delete?: patch_tag_relationWhereUniqueInput | patch_tag_relationWhereUniqueInput[]
    connect?: patch_tag_relationWhereUniqueInput | patch_tag_relationWhereUniqueInput[]
    update?: patch_tag_relationUpdateWithWhereUniqueWithoutPatchInput | patch_tag_relationUpdateWithWhereUniqueWithoutPatchInput[]
    updateMany?: patch_tag_relationUpdateManyWithWhereWithoutPatchInput | patch_tag_relationUpdateManyWithWhereWithoutPatchInput[]
    deleteMany?: patch_tag_relationScalarWhereInput | patch_tag_relationScalarWhereInput[]
  }

  export type user_patch_favorite_folder_relationUpdateManyWithoutPatchNestedInput = {
    create?: XOR<user_patch_favorite_folder_relationCreateWithoutPatchInput, user_patch_favorite_folder_relationUncheckedCreateWithoutPatchInput> | user_patch_favorite_folder_relationCreateWithoutPatchInput[] | user_patch_favorite_folder_relationUncheckedCreateWithoutPatchInput[]
    connectOrCreate?: user_patch_favorite_folder_relationCreateOrConnectWithoutPatchInput | user_patch_favorite_folder_relationCreateOrConnectWithoutPatchInput[]
    upsert?: user_patch_favorite_folder_relationUpsertWithWhereUniqueWithoutPatchInput | user_patch_favorite_folder_relationUpsertWithWhereUniqueWithoutPatchInput[]
    createMany?: user_patch_favorite_folder_relationCreateManyPatchInputEnvelope
    set?: user_patch_favorite_folder_relationWhereUniqueInput | user_patch_favorite_folder_relationWhereUniqueInput[]
    disconnect?: user_patch_favorite_folder_relationWhereUniqueInput | user_patch_favorite_folder_relationWhereUniqueInput[]
    delete?: user_patch_favorite_folder_relationWhereUniqueInput | user_patch_favorite_folder_relationWhereUniqueInput[]
    connect?: user_patch_favorite_folder_relationWhereUniqueInput | user_patch_favorite_folder_relationWhereUniqueInput[]
    update?: user_patch_favorite_folder_relationUpdateWithWhereUniqueWithoutPatchInput | user_patch_favorite_folder_relationUpdateWithWhereUniqueWithoutPatchInput[]
    updateMany?: user_patch_favorite_folder_relationUpdateManyWithWhereWithoutPatchInput | user_patch_favorite_folder_relationUpdateManyWithWhereWithoutPatchInput[]
    deleteMany?: user_patch_favorite_folder_relationScalarWhereInput | user_patch_favorite_folder_relationScalarWhereInput[]
  }

  export type patch_resourceUpdateManyWithoutPatchNestedInput = {
    create?: XOR<patch_resourceCreateWithoutPatchInput, patch_resourceUncheckedCreateWithoutPatchInput> | patch_resourceCreateWithoutPatchInput[] | patch_resourceUncheckedCreateWithoutPatchInput[]
    connectOrCreate?: patch_resourceCreateOrConnectWithoutPatchInput | patch_resourceCreateOrConnectWithoutPatchInput[]
    upsert?: patch_resourceUpsertWithWhereUniqueWithoutPatchInput | patch_resourceUpsertWithWhereUniqueWithoutPatchInput[]
    createMany?: patch_resourceCreateManyPatchInputEnvelope
    set?: patch_resourceWhereUniqueInput | patch_resourceWhereUniqueInput[]
    disconnect?: patch_resourceWhereUniqueInput | patch_resourceWhereUniqueInput[]
    delete?: patch_resourceWhereUniqueInput | patch_resourceWhereUniqueInput[]
    connect?: patch_resourceWhereUniqueInput | patch_resourceWhereUniqueInput[]
    update?: patch_resourceUpdateWithWhereUniqueWithoutPatchInput | patch_resourceUpdateWithWhereUniqueWithoutPatchInput[]
    updateMany?: patch_resourceUpdateManyWithWhereWithoutPatchInput | patch_resourceUpdateManyWithWhereWithoutPatchInput[]
    deleteMany?: patch_resourceScalarWhereInput | patch_resourceScalarWhereInput[]
  }

  export type patch_commentUpdateManyWithoutPatchNestedInput = {
    create?: XOR<patch_commentCreateWithoutPatchInput, patch_commentUncheckedCreateWithoutPatchInput> | patch_commentCreateWithoutPatchInput[] | patch_commentUncheckedCreateWithoutPatchInput[]
    connectOrCreate?: patch_commentCreateOrConnectWithoutPatchInput | patch_commentCreateOrConnectWithoutPatchInput[]
    upsert?: patch_commentUpsertWithWhereUniqueWithoutPatchInput | patch_commentUpsertWithWhereUniqueWithoutPatchInput[]
    createMany?: patch_commentCreateManyPatchInputEnvelope
    set?: patch_commentWhereUniqueInput | patch_commentWhereUniqueInput[]
    disconnect?: patch_commentWhereUniqueInput | patch_commentWhereUniqueInput[]
    delete?: patch_commentWhereUniqueInput | patch_commentWhereUniqueInput[]
    connect?: patch_commentWhereUniqueInput | patch_commentWhereUniqueInput[]
    update?: patch_commentUpdateWithWhereUniqueWithoutPatchInput | patch_commentUpdateWithWhereUniqueWithoutPatchInput[]
    updateMany?: patch_commentUpdateManyWithWhereWithoutPatchInput | patch_commentUpdateManyWithWhereWithoutPatchInput[]
    deleteMany?: patch_commentScalarWhereInput | patch_commentScalarWhereInput[]
  }

  export type patch_characterUpdateManyWithoutPatchNestedInput = {
    create?: XOR<patch_characterCreateWithoutPatchInput, patch_characterUncheckedCreateWithoutPatchInput> | patch_characterCreateWithoutPatchInput[] | patch_characterUncheckedCreateWithoutPatchInput[]
    connectOrCreate?: patch_characterCreateOrConnectWithoutPatchInput | patch_characterCreateOrConnectWithoutPatchInput[]
    upsert?: patch_characterUpsertWithWhereUniqueWithoutPatchInput | patch_characterUpsertWithWhereUniqueWithoutPatchInput[]
    createMany?: patch_characterCreateManyPatchInputEnvelope
    set?: patch_characterWhereUniqueInput | patch_characterWhereUniqueInput[]
    disconnect?: patch_characterWhereUniqueInput | patch_characterWhereUniqueInput[]
    delete?: patch_characterWhereUniqueInput | patch_characterWhereUniqueInput[]
    connect?: patch_characterWhereUniqueInput | patch_characterWhereUniqueInput[]
    update?: patch_characterUpdateWithWhereUniqueWithoutPatchInput | patch_characterUpdateWithWhereUniqueWithoutPatchInput[]
    updateMany?: patch_characterUpdateManyWithWhereWithoutPatchInput | patch_characterUpdateManyWithWhereWithoutPatchInput[]
    deleteMany?: patch_characterScalarWhereInput | patch_characterScalarWhereInput[]
  }

  export type patch_aliasUncheckedUpdateManyWithoutPatchNestedInput = {
    create?: XOR<patch_aliasCreateWithoutPatchInput, patch_aliasUncheckedCreateWithoutPatchInput> | patch_aliasCreateWithoutPatchInput[] | patch_aliasUncheckedCreateWithoutPatchInput[]
    connectOrCreate?: patch_aliasCreateOrConnectWithoutPatchInput | patch_aliasCreateOrConnectWithoutPatchInput[]
    upsert?: patch_aliasUpsertWithWhereUniqueWithoutPatchInput | patch_aliasUpsertWithWhereUniqueWithoutPatchInput[]
    createMany?: patch_aliasCreateManyPatchInputEnvelope
    set?: patch_aliasWhereUniqueInput | patch_aliasWhereUniqueInput[]
    disconnect?: patch_aliasWhereUniqueInput | patch_aliasWhereUniqueInput[]
    delete?: patch_aliasWhereUniqueInput | patch_aliasWhereUniqueInput[]
    connect?: patch_aliasWhereUniqueInput | patch_aliasWhereUniqueInput[]
    update?: patch_aliasUpdateWithWhereUniqueWithoutPatchInput | patch_aliasUpdateWithWhereUniqueWithoutPatchInput[]
    updateMany?: patch_aliasUpdateManyWithWhereWithoutPatchInput | patch_aliasUpdateManyWithWhereWithoutPatchInput[]
    deleteMany?: patch_aliasScalarWhereInput | patch_aliasScalarWhereInput[]
  }

  export type patch_tag_relationUncheckedUpdateManyWithoutPatchNestedInput = {
    create?: XOR<patch_tag_relationCreateWithoutPatchInput, patch_tag_relationUncheckedCreateWithoutPatchInput> | patch_tag_relationCreateWithoutPatchInput[] | patch_tag_relationUncheckedCreateWithoutPatchInput[]
    connectOrCreate?: patch_tag_relationCreateOrConnectWithoutPatchInput | patch_tag_relationCreateOrConnectWithoutPatchInput[]
    upsert?: patch_tag_relationUpsertWithWhereUniqueWithoutPatchInput | patch_tag_relationUpsertWithWhereUniqueWithoutPatchInput[]
    createMany?: patch_tag_relationCreateManyPatchInputEnvelope
    set?: patch_tag_relationWhereUniqueInput | patch_tag_relationWhereUniqueInput[]
    disconnect?: patch_tag_relationWhereUniqueInput | patch_tag_relationWhereUniqueInput[]
    delete?: patch_tag_relationWhereUniqueInput | patch_tag_relationWhereUniqueInput[]
    connect?: patch_tag_relationWhereUniqueInput | patch_tag_relationWhereUniqueInput[]
    update?: patch_tag_relationUpdateWithWhereUniqueWithoutPatchInput | patch_tag_relationUpdateWithWhereUniqueWithoutPatchInput[]
    updateMany?: patch_tag_relationUpdateManyWithWhereWithoutPatchInput | patch_tag_relationUpdateManyWithWhereWithoutPatchInput[]
    deleteMany?: patch_tag_relationScalarWhereInput | patch_tag_relationScalarWhereInput[]
  }

  export type user_patch_favorite_folder_relationUncheckedUpdateManyWithoutPatchNestedInput = {
    create?: XOR<user_patch_favorite_folder_relationCreateWithoutPatchInput, user_patch_favorite_folder_relationUncheckedCreateWithoutPatchInput> | user_patch_favorite_folder_relationCreateWithoutPatchInput[] | user_patch_favorite_folder_relationUncheckedCreateWithoutPatchInput[]
    connectOrCreate?: user_patch_favorite_folder_relationCreateOrConnectWithoutPatchInput | user_patch_favorite_folder_relationCreateOrConnectWithoutPatchInput[]
    upsert?: user_patch_favorite_folder_relationUpsertWithWhereUniqueWithoutPatchInput | user_patch_favorite_folder_relationUpsertWithWhereUniqueWithoutPatchInput[]
    createMany?: user_patch_favorite_folder_relationCreateManyPatchInputEnvelope
    set?: user_patch_favorite_folder_relationWhereUniqueInput | user_patch_favorite_folder_relationWhereUniqueInput[]
    disconnect?: user_patch_favorite_folder_relationWhereUniqueInput | user_patch_favorite_folder_relationWhereUniqueInput[]
    delete?: user_patch_favorite_folder_relationWhereUniqueInput | user_patch_favorite_folder_relationWhereUniqueInput[]
    connect?: user_patch_favorite_folder_relationWhereUniqueInput | user_patch_favorite_folder_relationWhereUniqueInput[]
    update?: user_patch_favorite_folder_relationUpdateWithWhereUniqueWithoutPatchInput | user_patch_favorite_folder_relationUpdateWithWhereUniqueWithoutPatchInput[]
    updateMany?: user_patch_favorite_folder_relationUpdateManyWithWhereWithoutPatchInput | user_patch_favorite_folder_relationUpdateManyWithWhereWithoutPatchInput[]
    deleteMany?: user_patch_favorite_folder_relationScalarWhereInput | user_patch_favorite_folder_relationScalarWhereInput[]
  }

  export type patch_resourceUncheckedUpdateManyWithoutPatchNestedInput = {
    create?: XOR<patch_resourceCreateWithoutPatchInput, patch_resourceUncheckedCreateWithoutPatchInput> | patch_resourceCreateWithoutPatchInput[] | patch_resourceUncheckedCreateWithoutPatchInput[]
    connectOrCreate?: patch_resourceCreateOrConnectWithoutPatchInput | patch_resourceCreateOrConnectWithoutPatchInput[]
    upsert?: patch_resourceUpsertWithWhereUniqueWithoutPatchInput | patch_resourceUpsertWithWhereUniqueWithoutPatchInput[]
    createMany?: patch_resourceCreateManyPatchInputEnvelope
    set?: patch_resourceWhereUniqueInput | patch_resourceWhereUniqueInput[]
    disconnect?: patch_resourceWhereUniqueInput | patch_resourceWhereUniqueInput[]
    delete?: patch_resourceWhereUniqueInput | patch_resourceWhereUniqueInput[]
    connect?: patch_resourceWhereUniqueInput | patch_resourceWhereUniqueInput[]
    update?: patch_resourceUpdateWithWhereUniqueWithoutPatchInput | patch_resourceUpdateWithWhereUniqueWithoutPatchInput[]
    updateMany?: patch_resourceUpdateManyWithWhereWithoutPatchInput | patch_resourceUpdateManyWithWhereWithoutPatchInput[]
    deleteMany?: patch_resourceScalarWhereInput | patch_resourceScalarWhereInput[]
  }

  export type patch_commentUncheckedUpdateManyWithoutPatchNestedInput = {
    create?: XOR<patch_commentCreateWithoutPatchInput, patch_commentUncheckedCreateWithoutPatchInput> | patch_commentCreateWithoutPatchInput[] | patch_commentUncheckedCreateWithoutPatchInput[]
    connectOrCreate?: patch_commentCreateOrConnectWithoutPatchInput | patch_commentCreateOrConnectWithoutPatchInput[]
    upsert?: patch_commentUpsertWithWhereUniqueWithoutPatchInput | patch_commentUpsertWithWhereUniqueWithoutPatchInput[]
    createMany?: patch_commentCreateManyPatchInputEnvelope
    set?: patch_commentWhereUniqueInput | patch_commentWhereUniqueInput[]
    disconnect?: patch_commentWhereUniqueInput | patch_commentWhereUniqueInput[]
    delete?: patch_commentWhereUniqueInput | patch_commentWhereUniqueInput[]
    connect?: patch_commentWhereUniqueInput | patch_commentWhereUniqueInput[]
    update?: patch_commentUpdateWithWhereUniqueWithoutPatchInput | patch_commentUpdateWithWhereUniqueWithoutPatchInput[]
    updateMany?: patch_commentUpdateManyWithWhereWithoutPatchInput | patch_commentUpdateManyWithWhereWithoutPatchInput[]
    deleteMany?: patch_commentScalarWhereInput | patch_commentScalarWhereInput[]
  }

  export type patch_characterUncheckedUpdateManyWithoutPatchNestedInput = {
    create?: XOR<patch_characterCreateWithoutPatchInput, patch_characterUncheckedCreateWithoutPatchInput> | patch_characterCreateWithoutPatchInput[] | patch_characterUncheckedCreateWithoutPatchInput[]
    connectOrCreate?: patch_characterCreateOrConnectWithoutPatchInput | patch_characterCreateOrConnectWithoutPatchInput[]
    upsert?: patch_characterUpsertWithWhereUniqueWithoutPatchInput | patch_characterUpsertWithWhereUniqueWithoutPatchInput[]
    createMany?: patch_characterCreateManyPatchInputEnvelope
    set?: patch_characterWhereUniqueInput | patch_characterWhereUniqueInput[]
    disconnect?: patch_characterWhereUniqueInput | patch_characterWhereUniqueInput[]
    delete?: patch_characterWhereUniqueInput | patch_characterWhereUniqueInput[]
    connect?: patch_characterWhereUniqueInput | patch_characterWhereUniqueInput[]
    update?: patch_characterUpdateWithWhereUniqueWithoutPatchInput | patch_characterUpdateWithWhereUniqueWithoutPatchInput[]
    updateMany?: patch_characterUpdateManyWithWhereWithoutPatchInput | patch_characterUpdateManyWithWhereWithoutPatchInput[]
    deleteMany?: patch_characterScalarWhereInput | patch_characterScalarWhereInput[]
  }

  export type patchCreateNestedOneWithoutAliasInput = {
    create?: XOR<patchCreateWithoutAliasInput, patchUncheckedCreateWithoutAliasInput>
    connectOrCreate?: patchCreateOrConnectWithoutAliasInput
    connect?: patchWhereUniqueInput
  }

  export type patchUpdateOneRequiredWithoutAliasNestedInput = {
    create?: XOR<patchCreateWithoutAliasInput, patchUncheckedCreateWithoutAliasInput>
    connectOrCreate?: patchCreateOrConnectWithoutAliasInput
    upsert?: patchUpsertWithoutAliasInput
    connect?: patchWhereUniqueInput
    update?: XOR<XOR<patchUpdateToOneWithWhereWithoutAliasInput, patchUpdateWithoutAliasInput>, patchUncheckedUpdateWithoutAliasInput>
  }

  export type patch_tagCreatealiasInput = {
    set: string[]
  }

  export type patch_tag_relationCreateNestedManyWithoutTagInput = {
    create?: XOR<patch_tag_relationCreateWithoutTagInput, patch_tag_relationUncheckedCreateWithoutTagInput> | patch_tag_relationCreateWithoutTagInput[] | patch_tag_relationUncheckedCreateWithoutTagInput[]
    connectOrCreate?: patch_tag_relationCreateOrConnectWithoutTagInput | patch_tag_relationCreateOrConnectWithoutTagInput[]
    createMany?: patch_tag_relationCreateManyTagInputEnvelope
    connect?: patch_tag_relationWhereUniqueInput | patch_tag_relationWhereUniqueInput[]
  }

  export type userCreateNestedOneWithoutPatch_tagInput = {
    create?: XOR<userCreateWithoutPatch_tagInput, userUncheckedCreateWithoutPatch_tagInput>
    connectOrCreate?: userCreateOrConnectWithoutPatch_tagInput
    connect?: userWhereUniqueInput
  }

  export type patch_tag_relationUncheckedCreateNestedManyWithoutTagInput = {
    create?: XOR<patch_tag_relationCreateWithoutTagInput, patch_tag_relationUncheckedCreateWithoutTagInput> | patch_tag_relationCreateWithoutTagInput[] | patch_tag_relationUncheckedCreateWithoutTagInput[]
    connectOrCreate?: patch_tag_relationCreateOrConnectWithoutTagInput | patch_tag_relationCreateOrConnectWithoutTagInput[]
    createMany?: patch_tag_relationCreateManyTagInputEnvelope
    connect?: patch_tag_relationWhereUniqueInput | patch_tag_relationWhereUniqueInput[]
  }

  export type patch_tagUpdatealiasInput = {
    set?: string[]
    push?: string | string[]
  }

  export type patch_tag_relationUpdateManyWithoutTagNestedInput = {
    create?: XOR<patch_tag_relationCreateWithoutTagInput, patch_tag_relationUncheckedCreateWithoutTagInput> | patch_tag_relationCreateWithoutTagInput[] | patch_tag_relationUncheckedCreateWithoutTagInput[]
    connectOrCreate?: patch_tag_relationCreateOrConnectWithoutTagInput | patch_tag_relationCreateOrConnectWithoutTagInput[]
    upsert?: patch_tag_relationUpsertWithWhereUniqueWithoutTagInput | patch_tag_relationUpsertWithWhereUniqueWithoutTagInput[]
    createMany?: patch_tag_relationCreateManyTagInputEnvelope
    set?: patch_tag_relationWhereUniqueInput | patch_tag_relationWhereUniqueInput[]
    disconnect?: patch_tag_relationWhereUniqueInput | patch_tag_relationWhereUniqueInput[]
    delete?: patch_tag_relationWhereUniqueInput | patch_tag_relationWhereUniqueInput[]
    connect?: patch_tag_relationWhereUniqueInput | patch_tag_relationWhereUniqueInput[]
    update?: patch_tag_relationUpdateWithWhereUniqueWithoutTagInput | patch_tag_relationUpdateWithWhereUniqueWithoutTagInput[]
    updateMany?: patch_tag_relationUpdateManyWithWhereWithoutTagInput | patch_tag_relationUpdateManyWithWhereWithoutTagInput[]
    deleteMany?: patch_tag_relationScalarWhereInput | patch_tag_relationScalarWhereInput[]
  }

  export type userUpdateOneRequiredWithoutPatch_tagNestedInput = {
    create?: XOR<userCreateWithoutPatch_tagInput, userUncheckedCreateWithoutPatch_tagInput>
    connectOrCreate?: userCreateOrConnectWithoutPatch_tagInput
    upsert?: userUpsertWithoutPatch_tagInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutPatch_tagInput, userUpdateWithoutPatch_tagInput>, userUncheckedUpdateWithoutPatch_tagInput>
  }

  export type patch_tag_relationUncheckedUpdateManyWithoutTagNestedInput = {
    create?: XOR<patch_tag_relationCreateWithoutTagInput, patch_tag_relationUncheckedCreateWithoutTagInput> | patch_tag_relationCreateWithoutTagInput[] | patch_tag_relationUncheckedCreateWithoutTagInput[]
    connectOrCreate?: patch_tag_relationCreateOrConnectWithoutTagInput | patch_tag_relationCreateOrConnectWithoutTagInput[]
    upsert?: patch_tag_relationUpsertWithWhereUniqueWithoutTagInput | patch_tag_relationUpsertWithWhereUniqueWithoutTagInput[]
    createMany?: patch_tag_relationCreateManyTagInputEnvelope
    set?: patch_tag_relationWhereUniqueInput | patch_tag_relationWhereUniqueInput[]
    disconnect?: patch_tag_relationWhereUniqueInput | patch_tag_relationWhereUniqueInput[]
    delete?: patch_tag_relationWhereUniqueInput | patch_tag_relationWhereUniqueInput[]
    connect?: patch_tag_relationWhereUniqueInput | patch_tag_relationWhereUniqueInput[]
    update?: patch_tag_relationUpdateWithWhereUniqueWithoutTagInput | patch_tag_relationUpdateWithWhereUniqueWithoutTagInput[]
    updateMany?: patch_tag_relationUpdateManyWithWhereWithoutTagInput | patch_tag_relationUpdateManyWithWhereWithoutTagInput[]
    deleteMany?: patch_tag_relationScalarWhereInput | patch_tag_relationScalarWhereInput[]
  }

  export type patchCreateNestedOneWithoutTagInput = {
    create?: XOR<patchCreateWithoutTagInput, patchUncheckedCreateWithoutTagInput>
    connectOrCreate?: patchCreateOrConnectWithoutTagInput
    connect?: patchWhereUniqueInput
  }

  export type patch_tagCreateNestedOneWithoutPatch_relationInput = {
    create?: XOR<patch_tagCreateWithoutPatch_relationInput, patch_tagUncheckedCreateWithoutPatch_relationInput>
    connectOrCreate?: patch_tagCreateOrConnectWithoutPatch_relationInput
    connect?: patch_tagWhereUniqueInput
  }

  export type patchUpdateOneRequiredWithoutTagNestedInput = {
    create?: XOR<patchCreateWithoutTagInput, patchUncheckedCreateWithoutTagInput>
    connectOrCreate?: patchCreateOrConnectWithoutTagInput
    upsert?: patchUpsertWithoutTagInput
    connect?: patchWhereUniqueInput
    update?: XOR<XOR<patchUpdateToOneWithWhereWithoutTagInput, patchUpdateWithoutTagInput>, patchUncheckedUpdateWithoutTagInput>
  }

  export type patch_tagUpdateOneRequiredWithoutPatch_relationNestedInput = {
    create?: XOR<patch_tagCreateWithoutPatch_relationInput, patch_tagUncheckedCreateWithoutPatch_relationInput>
    connectOrCreate?: patch_tagCreateOrConnectWithoutPatch_relationInput
    upsert?: patch_tagUpsertWithoutPatch_relationInput
    connect?: patch_tagWhereUniqueInput
    update?: XOR<XOR<patch_tagUpdateToOneWithWhereWithoutPatch_relationInput, patch_tagUpdateWithoutPatch_relationInput>, patch_tagUncheckedUpdateWithoutPatch_relationInput>
  }

  export type patch_resourceCreatetypeInput = {
    set: string[]
  }

  export type patch_resourceCreatelanguageInput = {
    set: string[]
  }

  export type patch_resourceCreateplatformInput = {
    set: string[]
  }

  export type user_patch_resource_like_relationCreateNestedManyWithoutResourceInput = {
    create?: XOR<user_patch_resource_like_relationCreateWithoutResourceInput, user_patch_resource_like_relationUncheckedCreateWithoutResourceInput> | user_patch_resource_like_relationCreateWithoutResourceInput[] | user_patch_resource_like_relationUncheckedCreateWithoutResourceInput[]
    connectOrCreate?: user_patch_resource_like_relationCreateOrConnectWithoutResourceInput | user_patch_resource_like_relationCreateOrConnectWithoutResourceInput[]
    createMany?: user_patch_resource_like_relationCreateManyResourceInputEnvelope
    connect?: user_patch_resource_like_relationWhereUniqueInput | user_patch_resource_like_relationWhereUniqueInput[]
  }

  export type userCreateNestedOneWithoutPatch_resourceInput = {
    create?: XOR<userCreateWithoutPatch_resourceInput, userUncheckedCreateWithoutPatch_resourceInput>
    connectOrCreate?: userCreateOrConnectWithoutPatch_resourceInput
    connect?: userWhereUniqueInput
  }

  export type patchCreateNestedOneWithoutResourceInput = {
    create?: XOR<patchCreateWithoutResourceInput, patchUncheckedCreateWithoutResourceInput>
    connectOrCreate?: patchCreateOrConnectWithoutResourceInput
    connect?: patchWhereUniqueInput
  }

  export type user_patch_resource_like_relationUncheckedCreateNestedManyWithoutResourceInput = {
    create?: XOR<user_patch_resource_like_relationCreateWithoutResourceInput, user_patch_resource_like_relationUncheckedCreateWithoutResourceInput> | user_patch_resource_like_relationCreateWithoutResourceInput[] | user_patch_resource_like_relationUncheckedCreateWithoutResourceInput[]
    connectOrCreate?: user_patch_resource_like_relationCreateOrConnectWithoutResourceInput | user_patch_resource_like_relationCreateOrConnectWithoutResourceInput[]
    createMany?: user_patch_resource_like_relationCreateManyResourceInputEnvelope
    connect?: user_patch_resource_like_relationWhereUniqueInput | user_patch_resource_like_relationWhereUniqueInput[]
  }

  export type patch_resourceUpdatetypeInput = {
    set?: string[]
    push?: string | string[]
  }

  export type patch_resourceUpdatelanguageInput = {
    set?: string[]
    push?: string | string[]
  }

  export type patch_resourceUpdateplatformInput = {
    set?: string[]
    push?: string | string[]
  }

  export type user_patch_resource_like_relationUpdateManyWithoutResourceNestedInput = {
    create?: XOR<user_patch_resource_like_relationCreateWithoutResourceInput, user_patch_resource_like_relationUncheckedCreateWithoutResourceInput> | user_patch_resource_like_relationCreateWithoutResourceInput[] | user_patch_resource_like_relationUncheckedCreateWithoutResourceInput[]
    connectOrCreate?: user_patch_resource_like_relationCreateOrConnectWithoutResourceInput | user_patch_resource_like_relationCreateOrConnectWithoutResourceInput[]
    upsert?: user_patch_resource_like_relationUpsertWithWhereUniqueWithoutResourceInput | user_patch_resource_like_relationUpsertWithWhereUniqueWithoutResourceInput[]
    createMany?: user_patch_resource_like_relationCreateManyResourceInputEnvelope
    set?: user_patch_resource_like_relationWhereUniqueInput | user_patch_resource_like_relationWhereUniqueInput[]
    disconnect?: user_patch_resource_like_relationWhereUniqueInput | user_patch_resource_like_relationWhereUniqueInput[]
    delete?: user_patch_resource_like_relationWhereUniqueInput | user_patch_resource_like_relationWhereUniqueInput[]
    connect?: user_patch_resource_like_relationWhereUniqueInput | user_patch_resource_like_relationWhereUniqueInput[]
    update?: user_patch_resource_like_relationUpdateWithWhereUniqueWithoutResourceInput | user_patch_resource_like_relationUpdateWithWhereUniqueWithoutResourceInput[]
    updateMany?: user_patch_resource_like_relationUpdateManyWithWhereWithoutResourceInput | user_patch_resource_like_relationUpdateManyWithWhereWithoutResourceInput[]
    deleteMany?: user_patch_resource_like_relationScalarWhereInput | user_patch_resource_like_relationScalarWhereInput[]
  }

  export type userUpdateOneRequiredWithoutPatch_resourceNestedInput = {
    create?: XOR<userCreateWithoutPatch_resourceInput, userUncheckedCreateWithoutPatch_resourceInput>
    connectOrCreate?: userCreateOrConnectWithoutPatch_resourceInput
    upsert?: userUpsertWithoutPatch_resourceInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutPatch_resourceInput, userUpdateWithoutPatch_resourceInput>, userUncheckedUpdateWithoutPatch_resourceInput>
  }

  export type patchUpdateOneRequiredWithoutResourceNestedInput = {
    create?: XOR<patchCreateWithoutResourceInput, patchUncheckedCreateWithoutResourceInput>
    connectOrCreate?: patchCreateOrConnectWithoutResourceInput
    upsert?: patchUpsertWithoutResourceInput
    connect?: patchWhereUniqueInput
    update?: XOR<XOR<patchUpdateToOneWithWhereWithoutResourceInput, patchUpdateWithoutResourceInput>, patchUncheckedUpdateWithoutResourceInput>
  }

  export type user_patch_resource_like_relationUncheckedUpdateManyWithoutResourceNestedInput = {
    create?: XOR<user_patch_resource_like_relationCreateWithoutResourceInput, user_patch_resource_like_relationUncheckedCreateWithoutResourceInput> | user_patch_resource_like_relationCreateWithoutResourceInput[] | user_patch_resource_like_relationUncheckedCreateWithoutResourceInput[]
    connectOrCreate?: user_patch_resource_like_relationCreateOrConnectWithoutResourceInput | user_patch_resource_like_relationCreateOrConnectWithoutResourceInput[]
    upsert?: user_patch_resource_like_relationUpsertWithWhereUniqueWithoutResourceInput | user_patch_resource_like_relationUpsertWithWhereUniqueWithoutResourceInput[]
    createMany?: user_patch_resource_like_relationCreateManyResourceInputEnvelope
    set?: user_patch_resource_like_relationWhereUniqueInput | user_patch_resource_like_relationWhereUniqueInput[]
    disconnect?: user_patch_resource_like_relationWhereUniqueInput | user_patch_resource_like_relationWhereUniqueInput[]
    delete?: user_patch_resource_like_relationWhereUniqueInput | user_patch_resource_like_relationWhereUniqueInput[]
    connect?: user_patch_resource_like_relationWhereUniqueInput | user_patch_resource_like_relationWhereUniqueInput[]
    update?: user_patch_resource_like_relationUpdateWithWhereUniqueWithoutResourceInput | user_patch_resource_like_relationUpdateWithWhereUniqueWithoutResourceInput[]
    updateMany?: user_patch_resource_like_relationUpdateManyWithWhereWithoutResourceInput | user_patch_resource_like_relationUpdateManyWithWhereWithoutResourceInput[]
    deleteMany?: user_patch_resource_like_relationScalarWhereInput | user_patch_resource_like_relationScalarWhereInput[]
  }

  export type user_patch_comment_like_relationCreateNestedManyWithoutCommentInput = {
    create?: XOR<user_patch_comment_like_relationCreateWithoutCommentInput, user_patch_comment_like_relationUncheckedCreateWithoutCommentInput> | user_patch_comment_like_relationCreateWithoutCommentInput[] | user_patch_comment_like_relationUncheckedCreateWithoutCommentInput[]
    connectOrCreate?: user_patch_comment_like_relationCreateOrConnectWithoutCommentInput | user_patch_comment_like_relationCreateOrConnectWithoutCommentInput[]
    createMany?: user_patch_comment_like_relationCreateManyCommentInputEnvelope
    connect?: user_patch_comment_like_relationWhereUniqueInput | user_patch_comment_like_relationWhereUniqueInput[]
  }

  export type patch_commentCreateNestedManyWithoutParentInput = {
    create?: XOR<patch_commentCreateWithoutParentInput, patch_commentUncheckedCreateWithoutParentInput> | patch_commentCreateWithoutParentInput[] | patch_commentUncheckedCreateWithoutParentInput[]
    connectOrCreate?: patch_commentCreateOrConnectWithoutParentInput | patch_commentCreateOrConnectWithoutParentInput[]
    createMany?: patch_commentCreateManyParentInputEnvelope
    connect?: patch_commentWhereUniqueInput | patch_commentWhereUniqueInput[]
  }

  export type patch_commentCreateNestedOneWithoutReplyInput = {
    create?: XOR<patch_commentCreateWithoutReplyInput, patch_commentUncheckedCreateWithoutReplyInput>
    connectOrCreate?: patch_commentCreateOrConnectWithoutReplyInput
    connect?: patch_commentWhereUniqueInput
  }

  export type userCreateNestedOneWithoutPatch_commentInput = {
    create?: XOR<userCreateWithoutPatch_commentInput, userUncheckedCreateWithoutPatch_commentInput>
    connectOrCreate?: userCreateOrConnectWithoutPatch_commentInput
    connect?: userWhereUniqueInput
  }

  export type patchCreateNestedOneWithoutCommentInput = {
    create?: XOR<patchCreateWithoutCommentInput, patchUncheckedCreateWithoutCommentInput>
    connectOrCreate?: patchCreateOrConnectWithoutCommentInput
    connect?: patchWhereUniqueInput
  }

  export type user_patch_comment_like_relationUncheckedCreateNestedManyWithoutCommentInput = {
    create?: XOR<user_patch_comment_like_relationCreateWithoutCommentInput, user_patch_comment_like_relationUncheckedCreateWithoutCommentInput> | user_patch_comment_like_relationCreateWithoutCommentInput[] | user_patch_comment_like_relationUncheckedCreateWithoutCommentInput[]
    connectOrCreate?: user_patch_comment_like_relationCreateOrConnectWithoutCommentInput | user_patch_comment_like_relationCreateOrConnectWithoutCommentInput[]
    createMany?: user_patch_comment_like_relationCreateManyCommentInputEnvelope
    connect?: user_patch_comment_like_relationWhereUniqueInput | user_patch_comment_like_relationWhereUniqueInput[]
  }

  export type patch_commentUncheckedCreateNestedManyWithoutParentInput = {
    create?: XOR<patch_commentCreateWithoutParentInput, patch_commentUncheckedCreateWithoutParentInput> | patch_commentCreateWithoutParentInput[] | patch_commentUncheckedCreateWithoutParentInput[]
    connectOrCreate?: patch_commentCreateOrConnectWithoutParentInput | patch_commentCreateOrConnectWithoutParentInput[]
    createMany?: patch_commentCreateManyParentInputEnvelope
    connect?: patch_commentWhereUniqueInput | patch_commentWhereUniqueInput[]
  }

  export type user_patch_comment_like_relationUpdateManyWithoutCommentNestedInput = {
    create?: XOR<user_patch_comment_like_relationCreateWithoutCommentInput, user_patch_comment_like_relationUncheckedCreateWithoutCommentInput> | user_patch_comment_like_relationCreateWithoutCommentInput[] | user_patch_comment_like_relationUncheckedCreateWithoutCommentInput[]
    connectOrCreate?: user_patch_comment_like_relationCreateOrConnectWithoutCommentInput | user_patch_comment_like_relationCreateOrConnectWithoutCommentInput[]
    upsert?: user_patch_comment_like_relationUpsertWithWhereUniqueWithoutCommentInput | user_patch_comment_like_relationUpsertWithWhereUniqueWithoutCommentInput[]
    createMany?: user_patch_comment_like_relationCreateManyCommentInputEnvelope
    set?: user_patch_comment_like_relationWhereUniqueInput | user_patch_comment_like_relationWhereUniqueInput[]
    disconnect?: user_patch_comment_like_relationWhereUniqueInput | user_patch_comment_like_relationWhereUniqueInput[]
    delete?: user_patch_comment_like_relationWhereUniqueInput | user_patch_comment_like_relationWhereUniqueInput[]
    connect?: user_patch_comment_like_relationWhereUniqueInput | user_patch_comment_like_relationWhereUniqueInput[]
    update?: user_patch_comment_like_relationUpdateWithWhereUniqueWithoutCommentInput | user_patch_comment_like_relationUpdateWithWhereUniqueWithoutCommentInput[]
    updateMany?: user_patch_comment_like_relationUpdateManyWithWhereWithoutCommentInput | user_patch_comment_like_relationUpdateManyWithWhereWithoutCommentInput[]
    deleteMany?: user_patch_comment_like_relationScalarWhereInput | user_patch_comment_like_relationScalarWhereInput[]
  }

  export type patch_commentUpdateManyWithoutParentNestedInput = {
    create?: XOR<patch_commentCreateWithoutParentInput, patch_commentUncheckedCreateWithoutParentInput> | patch_commentCreateWithoutParentInput[] | patch_commentUncheckedCreateWithoutParentInput[]
    connectOrCreate?: patch_commentCreateOrConnectWithoutParentInput | patch_commentCreateOrConnectWithoutParentInput[]
    upsert?: patch_commentUpsertWithWhereUniqueWithoutParentInput | patch_commentUpsertWithWhereUniqueWithoutParentInput[]
    createMany?: patch_commentCreateManyParentInputEnvelope
    set?: patch_commentWhereUniqueInput | patch_commentWhereUniqueInput[]
    disconnect?: patch_commentWhereUniqueInput | patch_commentWhereUniqueInput[]
    delete?: patch_commentWhereUniqueInput | patch_commentWhereUniqueInput[]
    connect?: patch_commentWhereUniqueInput | patch_commentWhereUniqueInput[]
    update?: patch_commentUpdateWithWhereUniqueWithoutParentInput | patch_commentUpdateWithWhereUniqueWithoutParentInput[]
    updateMany?: patch_commentUpdateManyWithWhereWithoutParentInput | patch_commentUpdateManyWithWhereWithoutParentInput[]
    deleteMany?: patch_commentScalarWhereInput | patch_commentScalarWhereInput[]
  }

  export type patch_commentUpdateOneWithoutReplyNestedInput = {
    create?: XOR<patch_commentCreateWithoutReplyInput, patch_commentUncheckedCreateWithoutReplyInput>
    connectOrCreate?: patch_commentCreateOrConnectWithoutReplyInput
    upsert?: patch_commentUpsertWithoutReplyInput
    disconnect?: patch_commentWhereInput | boolean
    delete?: patch_commentWhereInput | boolean
    connect?: patch_commentWhereUniqueInput
    update?: XOR<XOR<patch_commentUpdateToOneWithWhereWithoutReplyInput, patch_commentUpdateWithoutReplyInput>, patch_commentUncheckedUpdateWithoutReplyInput>
  }

  export type userUpdateOneRequiredWithoutPatch_commentNestedInput = {
    create?: XOR<userCreateWithoutPatch_commentInput, userUncheckedCreateWithoutPatch_commentInput>
    connectOrCreate?: userCreateOrConnectWithoutPatch_commentInput
    upsert?: userUpsertWithoutPatch_commentInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutPatch_commentInput, userUpdateWithoutPatch_commentInput>, userUncheckedUpdateWithoutPatch_commentInput>
  }

  export type patchUpdateOneRequiredWithoutCommentNestedInput = {
    create?: XOR<patchCreateWithoutCommentInput, patchUncheckedCreateWithoutCommentInput>
    connectOrCreate?: patchCreateOrConnectWithoutCommentInput
    upsert?: patchUpsertWithoutCommentInput
    connect?: patchWhereUniqueInput
    update?: XOR<XOR<patchUpdateToOneWithWhereWithoutCommentInput, patchUpdateWithoutCommentInput>, patchUncheckedUpdateWithoutCommentInput>
  }

  export type user_patch_comment_like_relationUncheckedUpdateManyWithoutCommentNestedInput = {
    create?: XOR<user_patch_comment_like_relationCreateWithoutCommentInput, user_patch_comment_like_relationUncheckedCreateWithoutCommentInput> | user_patch_comment_like_relationCreateWithoutCommentInput[] | user_patch_comment_like_relationUncheckedCreateWithoutCommentInput[]
    connectOrCreate?: user_patch_comment_like_relationCreateOrConnectWithoutCommentInput | user_patch_comment_like_relationCreateOrConnectWithoutCommentInput[]
    upsert?: user_patch_comment_like_relationUpsertWithWhereUniqueWithoutCommentInput | user_patch_comment_like_relationUpsertWithWhereUniqueWithoutCommentInput[]
    createMany?: user_patch_comment_like_relationCreateManyCommentInputEnvelope
    set?: user_patch_comment_like_relationWhereUniqueInput | user_patch_comment_like_relationWhereUniqueInput[]
    disconnect?: user_patch_comment_like_relationWhereUniqueInput | user_patch_comment_like_relationWhereUniqueInput[]
    delete?: user_patch_comment_like_relationWhereUniqueInput | user_patch_comment_like_relationWhereUniqueInput[]
    connect?: user_patch_comment_like_relationWhereUniqueInput | user_patch_comment_like_relationWhereUniqueInput[]
    update?: user_patch_comment_like_relationUpdateWithWhereUniqueWithoutCommentInput | user_patch_comment_like_relationUpdateWithWhereUniqueWithoutCommentInput[]
    updateMany?: user_patch_comment_like_relationUpdateManyWithWhereWithoutCommentInput | user_patch_comment_like_relationUpdateManyWithWhereWithoutCommentInput[]
    deleteMany?: user_patch_comment_like_relationScalarWhereInput | user_patch_comment_like_relationScalarWhereInput[]
  }

  export type patch_commentUncheckedUpdateManyWithoutParentNestedInput = {
    create?: XOR<patch_commentCreateWithoutParentInput, patch_commentUncheckedCreateWithoutParentInput> | patch_commentCreateWithoutParentInput[] | patch_commentUncheckedCreateWithoutParentInput[]
    connectOrCreate?: patch_commentCreateOrConnectWithoutParentInput | patch_commentCreateOrConnectWithoutParentInput[]
    upsert?: patch_commentUpsertWithWhereUniqueWithoutParentInput | patch_commentUpsertWithWhereUniqueWithoutParentInput[]
    createMany?: patch_commentCreateManyParentInputEnvelope
    set?: patch_commentWhereUniqueInput | patch_commentWhereUniqueInput[]
    disconnect?: patch_commentWhereUniqueInput | patch_commentWhereUniqueInput[]
    delete?: patch_commentWhereUniqueInput | patch_commentWhereUniqueInput[]
    connect?: patch_commentWhereUniqueInput | patch_commentWhereUniqueInput[]
    update?: patch_commentUpdateWithWhereUniqueWithoutParentInput | patch_commentUpdateWithWhereUniqueWithoutParentInput[]
    updateMany?: patch_commentUpdateManyWithWhereWithoutParentInput | patch_commentUpdateManyWithWhereWithoutParentInput[]
    deleteMany?: patch_commentScalarWhereInput | patch_commentScalarWhereInput[]
  }

  export type patch_characterCreatetraitsInput = {
    set: string[]
  }

  export type patch_characterCreatealiasInput = {
    set: string[]
  }

  export type patch_characterCreatehobbyInput = {
    set: string[]
  }

  export type patch_characterCreatefavoriteInput = {
    set: string[]
  }

  export type patch_characterCreatepersonalityInput = {
    set: string[]
  }

  export type patch_characterCreateNestedOneWithoutNew_versionsInput = {
    create?: XOR<patch_characterCreateWithoutNew_versionsInput, patch_characterUncheckedCreateWithoutNew_versionsInput>
    connectOrCreate?: patch_characterCreateOrConnectWithoutNew_versionsInput
    connect?: patch_characterWhereUniqueInput
  }

  export type patch_characterCreateNestedManyWithoutOriginalInput = {
    create?: XOR<patch_characterCreateWithoutOriginalInput, patch_characterUncheckedCreateWithoutOriginalInput> | patch_characterCreateWithoutOriginalInput[] | patch_characterUncheckedCreateWithoutOriginalInput[]
    connectOrCreate?: patch_characterCreateOrConnectWithoutOriginalInput | patch_characterCreateOrConnectWithoutOriginalInput[]
    createMany?: patch_characterCreateManyOriginalInputEnvelope
    connect?: patch_characterWhereUniqueInput | patch_characterWhereUniqueInput[]
  }

  export type userCreateNestedOneWithoutPatch_characterInput = {
    create?: XOR<userCreateWithoutPatch_characterInput, userUncheckedCreateWithoutPatch_characterInput>
    connectOrCreate?: userCreateOrConnectWithoutPatch_characterInput
    connect?: userWhereUniqueInput
  }

  export type patchCreateNestedOneWithoutCharactersInput = {
    create?: XOR<patchCreateWithoutCharactersInput, patchUncheckedCreateWithoutCharactersInput>
    connectOrCreate?: patchCreateOrConnectWithoutCharactersInput
    connect?: patchWhereUniqueInput
  }

  export type patch_characterUncheckedCreateNestedManyWithoutOriginalInput = {
    create?: XOR<patch_characterCreateWithoutOriginalInput, patch_characterUncheckedCreateWithoutOriginalInput> | patch_characterCreateWithoutOriginalInput[] | patch_characterUncheckedCreateWithoutOriginalInput[]
    connectOrCreate?: patch_characterCreateOrConnectWithoutOriginalInput | patch_characterCreateOrConnectWithoutOriginalInput[]
    createMany?: patch_characterCreateManyOriginalInputEnvelope
    connect?: patch_characterWhereUniqueInput | patch_characterWhereUniqueInput[]
  }

  export type patch_characterUpdatetraitsInput = {
    set?: string[]
    push?: string | string[]
  }

  export type patch_characterUpdatealiasInput = {
    set?: string[]
    push?: string | string[]
  }

  export type patch_characterUpdatehobbyInput = {
    set?: string[]
    push?: string | string[]
  }

  export type patch_characterUpdatefavoriteInput = {
    set?: string[]
    push?: string | string[]
  }

  export type patch_characterUpdatepersonalityInput = {
    set?: string[]
    push?: string | string[]
  }

  export type patch_characterUpdateOneWithoutNew_versionsNestedInput = {
    create?: XOR<patch_characterCreateWithoutNew_versionsInput, patch_characterUncheckedCreateWithoutNew_versionsInput>
    connectOrCreate?: patch_characterCreateOrConnectWithoutNew_versionsInput
    upsert?: patch_characterUpsertWithoutNew_versionsInput
    disconnect?: patch_characterWhereInput | boolean
    delete?: patch_characterWhereInput | boolean
    connect?: patch_characterWhereUniqueInput
    update?: XOR<XOR<patch_characterUpdateToOneWithWhereWithoutNew_versionsInput, patch_characterUpdateWithoutNew_versionsInput>, patch_characterUncheckedUpdateWithoutNew_versionsInput>
  }

  export type patch_characterUpdateManyWithoutOriginalNestedInput = {
    create?: XOR<patch_characterCreateWithoutOriginalInput, patch_characterUncheckedCreateWithoutOriginalInput> | patch_characterCreateWithoutOriginalInput[] | patch_characterUncheckedCreateWithoutOriginalInput[]
    connectOrCreate?: patch_characterCreateOrConnectWithoutOriginalInput | patch_characterCreateOrConnectWithoutOriginalInput[]
    upsert?: patch_characterUpsertWithWhereUniqueWithoutOriginalInput | patch_characterUpsertWithWhereUniqueWithoutOriginalInput[]
    createMany?: patch_characterCreateManyOriginalInputEnvelope
    set?: patch_characterWhereUniqueInput | patch_characterWhereUniqueInput[]
    disconnect?: patch_characterWhereUniqueInput | patch_characterWhereUniqueInput[]
    delete?: patch_characterWhereUniqueInput | patch_characterWhereUniqueInput[]
    connect?: patch_characterWhereUniqueInput | patch_characterWhereUniqueInput[]
    update?: patch_characterUpdateWithWhereUniqueWithoutOriginalInput | patch_characterUpdateWithWhereUniqueWithoutOriginalInput[]
    updateMany?: patch_characterUpdateManyWithWhereWithoutOriginalInput | patch_characterUpdateManyWithWhereWithoutOriginalInput[]
    deleteMany?: patch_characterScalarWhereInput | patch_characterScalarWhereInput[]
  }

  export type userUpdateOneRequiredWithoutPatch_characterNestedInput = {
    create?: XOR<userCreateWithoutPatch_characterInput, userUncheckedCreateWithoutPatch_characterInput>
    connectOrCreate?: userCreateOrConnectWithoutPatch_characterInput
    upsert?: userUpsertWithoutPatch_characterInput
    connect?: userWhereUniqueInput
    update?: XOR<XOR<userUpdateToOneWithWhereWithoutPatch_characterInput, userUpdateWithoutPatch_characterInput>, userUncheckedUpdateWithoutPatch_characterInput>
  }

  export type patchUpdateOneRequiredWithoutCharactersNestedInput = {
    create?: XOR<patchCreateWithoutCharactersInput, patchUncheckedCreateWithoutCharactersInput>
    connectOrCreate?: patchCreateOrConnectWithoutCharactersInput
    upsert?: patchUpsertWithoutCharactersInput
    connect?: patchWhereUniqueInput
    update?: XOR<XOR<patchUpdateToOneWithWhereWithoutCharactersInput, patchUpdateWithoutCharactersInput>, patchUncheckedUpdateWithoutCharactersInput>
  }

  export type patch_characterUncheckedUpdateManyWithoutOriginalNestedInput = {
    create?: XOR<patch_characterCreateWithoutOriginalInput, patch_characterUncheckedCreateWithoutOriginalInput> | patch_characterCreateWithoutOriginalInput[] | patch_characterUncheckedCreateWithoutOriginalInput[]
    connectOrCreate?: patch_characterCreateOrConnectWithoutOriginalInput | patch_characterCreateOrConnectWithoutOriginalInput[]
    upsert?: patch_characterUpsertWithWhereUniqueWithoutOriginalInput | patch_characterUpsertWithWhereUniqueWithoutOriginalInput[]
    createMany?: patch_characterCreateManyOriginalInputEnvelope
    set?: patch_characterWhereUniqueInput | patch_characterWhereUniqueInput[]
    disconnect?: patch_characterWhereUniqueInput | patch_characterWhereUniqueInput[]
    delete?: patch_characterWhereUniqueInput | patch_characterWhereUniqueInput[]
    connect?: patch_characterWhereUniqueInput | patch_characterWhereUniqueInput[]
    update?: patch_characterUpdateWithWhereUniqueWithoutOriginalInput | patch_characterUpdateWithWhereUniqueWithoutOriginalInput[]
    updateMany?: patch_characterUpdateManyWithWhereWithoutOriginalInput | patch_characterUpdateManyWithWhereWithoutOriginalInput[]
    deleteMany?: patch_characterScalarWhereInput | patch_characterScalarWhereInput[]
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type admin_logCreateWithoutUserInput = {
    type: string
    content: string
    status?: number
    created?: Date | string
    updated?: Date | string
  }

  export type admin_logUncheckedCreateWithoutUserInput = {
    id?: number
    type: string
    content: string
    status?: number
    created?: Date | string
    updated?: Date | string
  }

  export type admin_logCreateOrConnectWithoutUserInput = {
    where: admin_logWhereUniqueInput
    create: XOR<admin_logCreateWithoutUserInput, admin_logUncheckedCreateWithoutUserInput>
  }

  export type admin_logCreateManyUserInputEnvelope = {
    data: admin_logCreateManyUserInput | admin_logCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type patch_tagCreateWithoutUserInput = {
    name: string
    introduction?: string
    count?: number
    alias?: patch_tagCreatealiasInput | string[]
    created?: Date | string
    updated?: Date | string
    patch_relation?: patch_tag_relationCreateNestedManyWithoutTagInput
  }

  export type patch_tagUncheckedCreateWithoutUserInput = {
    id?: number
    name: string
    introduction?: string
    count?: number
    alias?: patch_tagCreatealiasInput | string[]
    created?: Date | string
    updated?: Date | string
    patch_relation?: patch_tag_relationUncheckedCreateNestedManyWithoutTagInput
  }

  export type patch_tagCreateOrConnectWithoutUserInput = {
    where: patch_tagWhereUniqueInput
    create: XOR<patch_tagCreateWithoutUserInput, patch_tagUncheckedCreateWithoutUserInput>
  }

  export type patch_tagCreateManyUserInputEnvelope = {
    data: patch_tagCreateManyUserInput | patch_tagCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type user_patch_comment_like_relationCreateWithoutUserInput = {
    created?: Date | string
    updated?: Date | string
    comment: patch_commentCreateNestedOneWithoutLike_byInput
  }

  export type user_patch_comment_like_relationUncheckedCreateWithoutUserInput = {
    id?: number
    comment_id: number
    created?: Date | string
    updated?: Date | string
  }

  export type user_patch_comment_like_relationCreateOrConnectWithoutUserInput = {
    where: user_patch_comment_like_relationWhereUniqueInput
    create: XOR<user_patch_comment_like_relationCreateWithoutUserInput, user_patch_comment_like_relationUncheckedCreateWithoutUserInput>
  }

  export type user_patch_comment_like_relationCreateManyUserInputEnvelope = {
    data: user_patch_comment_like_relationCreateManyUserInput | user_patch_comment_like_relationCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type user_patch_resource_like_relationCreateWithoutUserInput = {
    created?: Date | string
    updated?: Date | string
    resource: patch_resourceCreateNestedOneWithoutLike_byInput
  }

  export type user_patch_resource_like_relationUncheckedCreateWithoutUserInput = {
    id?: number
    resource_id: number
    created?: Date | string
    updated?: Date | string
  }

  export type user_patch_resource_like_relationCreateOrConnectWithoutUserInput = {
    where: user_patch_resource_like_relationWhereUniqueInput
    create: XOR<user_patch_resource_like_relationCreateWithoutUserInput, user_patch_resource_like_relationUncheckedCreateWithoutUserInput>
  }

  export type user_patch_resource_like_relationCreateManyUserInputEnvelope = {
    data: user_patch_resource_like_relationCreateManyUserInput | user_patch_resource_like_relationCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type user_patch_favorite_folderCreateWithoutUserInput = {
    name: string
    description?: string
    is_public?: boolean
    created?: Date | string
    updated?: Date | string
    patch?: user_patch_favorite_folder_relationCreateNestedManyWithoutFolderInput
  }

  export type user_patch_favorite_folderUncheckedCreateWithoutUserInput = {
    id?: number
    name: string
    description?: string
    is_public?: boolean
    created?: Date | string
    updated?: Date | string
    patch?: user_patch_favorite_folder_relationUncheckedCreateNestedManyWithoutFolderInput
  }

  export type user_patch_favorite_folderCreateOrConnectWithoutUserInput = {
    where: user_patch_favorite_folderWhereUniqueInput
    create: XOR<user_patch_favorite_folderCreateWithoutUserInput, user_patch_favorite_folderUncheckedCreateWithoutUserInput>
  }

  export type user_patch_favorite_folderCreateManyUserInputEnvelope = {
    data: user_patch_favorite_folderCreateManyUserInput | user_patch_favorite_folderCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type user_follow_relationCreateWithoutFollowingInput = {
    follower: userCreateNestedOneWithoutFollowerInput
  }

  export type user_follow_relationUncheckedCreateWithoutFollowingInput = {
    id?: number
    follower_id: number
  }

  export type user_follow_relationCreateOrConnectWithoutFollowingInput = {
    where: user_follow_relationWhereUniqueInput
    create: XOR<user_follow_relationCreateWithoutFollowingInput, user_follow_relationUncheckedCreateWithoutFollowingInput>
  }

  export type user_follow_relationCreateManyFollowingInputEnvelope = {
    data: user_follow_relationCreateManyFollowingInput | user_follow_relationCreateManyFollowingInput[]
    skipDuplicates?: boolean
  }

  export type user_follow_relationCreateWithoutFollowerInput = {
    following: userCreateNestedOneWithoutFollowingInput
  }

  export type user_follow_relationUncheckedCreateWithoutFollowerInput = {
    id?: number
    following_id: number
  }

  export type user_follow_relationCreateOrConnectWithoutFollowerInput = {
    where: user_follow_relationWhereUniqueInput
    create: XOR<user_follow_relationCreateWithoutFollowerInput, user_follow_relationUncheckedCreateWithoutFollowerInput>
  }

  export type user_follow_relationCreateManyFollowerInputEnvelope = {
    data: user_follow_relationCreateManyFollowerInput | user_follow_relationCreateManyFollowerInput[]
    skipDuplicates?: boolean
  }

  export type patchCreateWithoutUserInput = {
    unique_id: string
    name: string
    vndb_id?: string | null
    banner?: string
    introduction?: string
    released?: string
    content_limit?: string
    status?: number
    download?: number
    view?: number
    resource_update_time?: Date | string
    type?: patchCreatetypeInput | string[]
    language?: patchCreatelanguageInput | string[]
    engine?: patchCreateengineInput | string[]
    platform?: patchCreateplatformInput | string[]
    created?: Date | string
    updated?: Date | string
    alias?: patch_aliasCreateNestedManyWithoutPatchInput
    tag?: patch_tag_relationCreateNestedManyWithoutPatchInput
    favorite_folder?: user_patch_favorite_folder_relationCreateNestedManyWithoutPatchInput
    resource?: patch_resourceCreateNestedManyWithoutPatchInput
    comment?: patch_commentCreateNestedManyWithoutPatchInput
    characters?: patch_characterCreateNestedManyWithoutPatchInput
  }

  export type patchUncheckedCreateWithoutUserInput = {
    id?: number
    unique_id: string
    name: string
    vndb_id?: string | null
    banner?: string
    introduction?: string
    released?: string
    content_limit?: string
    status?: number
    download?: number
    view?: number
    resource_update_time?: Date | string
    type?: patchCreatetypeInput | string[]
    language?: patchCreatelanguageInput | string[]
    engine?: patchCreateengineInput | string[]
    platform?: patchCreateplatformInput | string[]
    created?: Date | string
    updated?: Date | string
    alias?: patch_aliasUncheckedCreateNestedManyWithoutPatchInput
    tag?: patch_tag_relationUncheckedCreateNestedManyWithoutPatchInput
    favorite_folder?: user_patch_favorite_folder_relationUncheckedCreateNestedManyWithoutPatchInput
    resource?: patch_resourceUncheckedCreateNestedManyWithoutPatchInput
    comment?: patch_commentUncheckedCreateNestedManyWithoutPatchInput
    characters?: patch_characterUncheckedCreateNestedManyWithoutPatchInput
  }

  export type patchCreateOrConnectWithoutUserInput = {
    where: patchWhereUniqueInput
    create: XOR<patchCreateWithoutUserInput, patchUncheckedCreateWithoutUserInput>
  }

  export type patchCreateManyUserInputEnvelope = {
    data: patchCreateManyUserInput | patchCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type patch_commentCreateWithoutUserInput = {
    content?: string
    edit?: string
    created?: Date | string
    updated?: Date | string
    like_by?: user_patch_comment_like_relationCreateNestedManyWithoutCommentInput
    reply?: patch_commentCreateNestedManyWithoutParentInput
    parent?: patch_commentCreateNestedOneWithoutReplyInput
    patch: patchCreateNestedOneWithoutCommentInput
  }

  export type patch_commentUncheckedCreateWithoutUserInput = {
    id?: number
    content?: string
    edit?: string
    parent_id?: number | null
    patch_id: number
    created?: Date | string
    updated?: Date | string
    like_by?: user_patch_comment_like_relationUncheckedCreateNestedManyWithoutCommentInput
    reply?: patch_commentUncheckedCreateNestedManyWithoutParentInput
  }

  export type patch_commentCreateOrConnectWithoutUserInput = {
    where: patch_commentWhereUniqueInput
    create: XOR<patch_commentCreateWithoutUserInput, patch_commentUncheckedCreateWithoutUserInput>
  }

  export type patch_commentCreateManyUserInputEnvelope = {
    data: patch_commentCreateManyUserInput | patch_commentCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type patch_resourceCreateWithoutUserInput = {
    storage: string
    section: string
    name?: string
    size?: string
    code?: string
    password?: string
    note?: string
    hash?: string
    content?: string
    type?: patch_resourceCreatetypeInput | string[]
    language?: patch_resourceCreatelanguageInput | string[]
    platform?: patch_resourceCreateplatformInput | string[]
    download?: number
    status?: number
    created?: Date | string
    updated?: Date | string
    like_by?: user_patch_resource_like_relationCreateNestedManyWithoutResourceInput
    patch: patchCreateNestedOneWithoutResourceInput
  }

  export type patch_resourceUncheckedCreateWithoutUserInput = {
    id?: number
    storage: string
    section: string
    name?: string
    size?: string
    code?: string
    password?: string
    note?: string
    hash?: string
    content?: string
    type?: patch_resourceCreatetypeInput | string[]
    language?: patch_resourceCreatelanguageInput | string[]
    platform?: patch_resourceCreateplatformInput | string[]
    download?: number
    status?: number
    patch_id: number
    created?: Date | string
    updated?: Date | string
    like_by?: user_patch_resource_like_relationUncheckedCreateNestedManyWithoutResourceInput
  }

  export type patch_resourceCreateOrConnectWithoutUserInput = {
    where: patch_resourceWhereUniqueInput
    create: XOR<patch_resourceCreateWithoutUserInput, patch_resourceUncheckedCreateWithoutUserInput>
  }

  export type patch_resourceCreateManyUserInputEnvelope = {
    data: patch_resourceCreateManyUserInput | patch_resourceCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type patch_characterCreateWithoutUserInput = {
    name: string
    image: string
    description?: string
    status?: number
    traits?: patch_characterCreatetraitsInput | string[]
    voice_actor?: string
    alias?: patch_characterCreatealiasInput | string[]
    age?: string
    height?: string
    birthday?: string
    blood_type?: string
    three_sizes?: string
    hobby?: patch_characterCreatehobbyInput | string[]
    favorite?: patch_characterCreatefavoriteInput | string[]
    role_type?: string
    personality?: patch_characterCreatepersonalityInput | string[]
    relationship?: string
    is_latest?: boolean
    created?: Date | string
    updated?: Date | string
    original?: patch_characterCreateNestedOneWithoutNew_versionsInput
    new_versions?: patch_characterCreateNestedManyWithoutOriginalInput
    patch: patchCreateNestedOneWithoutCharactersInput
  }

  export type patch_characterUncheckedCreateWithoutUserInput = {
    id?: number
    name: string
    image: string
    description?: string
    status?: number
    traits?: patch_characterCreatetraitsInput | string[]
    voice_actor?: string
    alias?: patch_characterCreatealiasInput | string[]
    age?: string
    height?: string
    birthday?: string
    blood_type?: string
    three_sizes?: string
    hobby?: patch_characterCreatehobbyInput | string[]
    favorite?: patch_characterCreatefavoriteInput | string[]
    role_type?: string
    personality?: patch_characterCreatepersonalityInput | string[]
    relationship?: string
    is_latest?: boolean
    original_id?: number | null
    patch_id: number
    created?: Date | string
    updated?: Date | string
    new_versions?: patch_characterUncheckedCreateNestedManyWithoutOriginalInput
  }

  export type patch_characterCreateOrConnectWithoutUserInput = {
    where: patch_characterWhereUniqueInput
    create: XOR<patch_characterCreateWithoutUserInput, patch_characterUncheckedCreateWithoutUserInput>
  }

  export type patch_characterCreateManyUserInputEnvelope = {
    data: patch_characterCreateManyUserInput | patch_characterCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type user_messageCreateWithoutSenderInput = {
    type: string
    content: string
    status?: number
    link?: string
    created?: Date | string
    updated?: Date | string
    recipient?: userCreateNestedOneWithoutReceive_messageInput
  }

  export type user_messageUncheckedCreateWithoutSenderInput = {
    id?: number
    type: string
    content: string
    status?: number
    link?: string
    recipient_id?: number | null
    created?: Date | string
    updated?: Date | string
  }

  export type user_messageCreateOrConnectWithoutSenderInput = {
    where: user_messageWhereUniqueInput
    create: XOR<user_messageCreateWithoutSenderInput, user_messageUncheckedCreateWithoutSenderInput>
  }

  export type user_messageCreateManySenderInputEnvelope = {
    data: user_messageCreateManySenderInput | user_messageCreateManySenderInput[]
    skipDuplicates?: boolean
  }

  export type user_messageCreateWithoutRecipientInput = {
    type: string
    content: string
    status?: number
    link?: string
    created?: Date | string
    updated?: Date | string
    sender?: userCreateNestedOneWithoutSend_messageInput
  }

  export type user_messageUncheckedCreateWithoutRecipientInput = {
    id?: number
    type: string
    content: string
    status?: number
    link?: string
    sender_id?: number | null
    created?: Date | string
    updated?: Date | string
  }

  export type user_messageCreateOrConnectWithoutRecipientInput = {
    where: user_messageWhereUniqueInput
    create: XOR<user_messageCreateWithoutRecipientInput, user_messageUncheckedCreateWithoutRecipientInput>
  }

  export type user_messageCreateManyRecipientInputEnvelope = {
    data: user_messageCreateManyRecipientInput | user_messageCreateManyRecipientInput[]
    skipDuplicates?: boolean
  }

  export type admin_logUpsertWithWhereUniqueWithoutUserInput = {
    where: admin_logWhereUniqueInput
    update: XOR<admin_logUpdateWithoutUserInput, admin_logUncheckedUpdateWithoutUserInput>
    create: XOR<admin_logCreateWithoutUserInput, admin_logUncheckedCreateWithoutUserInput>
  }

  export type admin_logUpdateWithWhereUniqueWithoutUserInput = {
    where: admin_logWhereUniqueInput
    data: XOR<admin_logUpdateWithoutUserInput, admin_logUncheckedUpdateWithoutUserInput>
  }

  export type admin_logUpdateManyWithWhereWithoutUserInput = {
    where: admin_logScalarWhereInput
    data: XOR<admin_logUpdateManyMutationInput, admin_logUncheckedUpdateManyWithoutUserInput>
  }

  export type admin_logScalarWhereInput = {
    AND?: admin_logScalarWhereInput | admin_logScalarWhereInput[]
    OR?: admin_logScalarWhereInput[]
    NOT?: admin_logScalarWhereInput | admin_logScalarWhereInput[]
    id?: IntFilter<"admin_log"> | number
    type?: StringFilter<"admin_log"> | string
    content?: StringFilter<"admin_log"> | string
    status?: IntFilter<"admin_log"> | number
    user_id?: IntFilter<"admin_log"> | number
    created?: DateTimeFilter<"admin_log"> | Date | string
    updated?: DateTimeFilter<"admin_log"> | Date | string
  }

  export type patch_tagUpsertWithWhereUniqueWithoutUserInput = {
    where: patch_tagWhereUniqueInput
    update: XOR<patch_tagUpdateWithoutUserInput, patch_tagUncheckedUpdateWithoutUserInput>
    create: XOR<patch_tagCreateWithoutUserInput, patch_tagUncheckedCreateWithoutUserInput>
  }

  export type patch_tagUpdateWithWhereUniqueWithoutUserInput = {
    where: patch_tagWhereUniqueInput
    data: XOR<patch_tagUpdateWithoutUserInput, patch_tagUncheckedUpdateWithoutUserInput>
  }

  export type patch_tagUpdateManyWithWhereWithoutUserInput = {
    where: patch_tagScalarWhereInput
    data: XOR<patch_tagUpdateManyMutationInput, patch_tagUncheckedUpdateManyWithoutUserInput>
  }

  export type patch_tagScalarWhereInput = {
    AND?: patch_tagScalarWhereInput | patch_tagScalarWhereInput[]
    OR?: patch_tagScalarWhereInput[]
    NOT?: patch_tagScalarWhereInput | patch_tagScalarWhereInput[]
    id?: IntFilter<"patch_tag"> | number
    name?: StringFilter<"patch_tag"> | string
    introduction?: StringFilter<"patch_tag"> | string
    count?: IntFilter<"patch_tag"> | number
    alias?: StringNullableListFilter<"patch_tag">
    user_id?: IntFilter<"patch_tag"> | number
    created?: DateTimeFilter<"patch_tag"> | Date | string
    updated?: DateTimeFilter<"patch_tag"> | Date | string
  }

  export type user_patch_comment_like_relationUpsertWithWhereUniqueWithoutUserInput = {
    where: user_patch_comment_like_relationWhereUniqueInput
    update: XOR<user_patch_comment_like_relationUpdateWithoutUserInput, user_patch_comment_like_relationUncheckedUpdateWithoutUserInput>
    create: XOR<user_patch_comment_like_relationCreateWithoutUserInput, user_patch_comment_like_relationUncheckedCreateWithoutUserInput>
  }

  export type user_patch_comment_like_relationUpdateWithWhereUniqueWithoutUserInput = {
    where: user_patch_comment_like_relationWhereUniqueInput
    data: XOR<user_patch_comment_like_relationUpdateWithoutUserInput, user_patch_comment_like_relationUncheckedUpdateWithoutUserInput>
  }

  export type user_patch_comment_like_relationUpdateManyWithWhereWithoutUserInput = {
    where: user_patch_comment_like_relationScalarWhereInput
    data: XOR<user_patch_comment_like_relationUpdateManyMutationInput, user_patch_comment_like_relationUncheckedUpdateManyWithoutUserInput>
  }

  export type user_patch_comment_like_relationScalarWhereInput = {
    AND?: user_patch_comment_like_relationScalarWhereInput | user_patch_comment_like_relationScalarWhereInput[]
    OR?: user_patch_comment_like_relationScalarWhereInput[]
    NOT?: user_patch_comment_like_relationScalarWhereInput | user_patch_comment_like_relationScalarWhereInput[]
    id?: IntFilter<"user_patch_comment_like_relation"> | number
    user_id?: IntFilter<"user_patch_comment_like_relation"> | number
    comment_id?: IntFilter<"user_patch_comment_like_relation"> | number
    created?: DateTimeFilter<"user_patch_comment_like_relation"> | Date | string
    updated?: DateTimeFilter<"user_patch_comment_like_relation"> | Date | string
  }

  export type user_patch_resource_like_relationUpsertWithWhereUniqueWithoutUserInput = {
    where: user_patch_resource_like_relationWhereUniqueInput
    update: XOR<user_patch_resource_like_relationUpdateWithoutUserInput, user_patch_resource_like_relationUncheckedUpdateWithoutUserInput>
    create: XOR<user_patch_resource_like_relationCreateWithoutUserInput, user_patch_resource_like_relationUncheckedCreateWithoutUserInput>
  }

  export type user_patch_resource_like_relationUpdateWithWhereUniqueWithoutUserInput = {
    where: user_patch_resource_like_relationWhereUniqueInput
    data: XOR<user_patch_resource_like_relationUpdateWithoutUserInput, user_patch_resource_like_relationUncheckedUpdateWithoutUserInput>
  }

  export type user_patch_resource_like_relationUpdateManyWithWhereWithoutUserInput = {
    where: user_patch_resource_like_relationScalarWhereInput
    data: XOR<user_patch_resource_like_relationUpdateManyMutationInput, user_patch_resource_like_relationUncheckedUpdateManyWithoutUserInput>
  }

  export type user_patch_resource_like_relationScalarWhereInput = {
    AND?: user_patch_resource_like_relationScalarWhereInput | user_patch_resource_like_relationScalarWhereInput[]
    OR?: user_patch_resource_like_relationScalarWhereInput[]
    NOT?: user_patch_resource_like_relationScalarWhereInput | user_patch_resource_like_relationScalarWhereInput[]
    id?: IntFilter<"user_patch_resource_like_relation"> | number
    user_id?: IntFilter<"user_patch_resource_like_relation"> | number
    resource_id?: IntFilter<"user_patch_resource_like_relation"> | number
    created?: DateTimeFilter<"user_patch_resource_like_relation"> | Date | string
    updated?: DateTimeFilter<"user_patch_resource_like_relation"> | Date | string
  }

  export type user_patch_favorite_folderUpsertWithWhereUniqueWithoutUserInput = {
    where: user_patch_favorite_folderWhereUniqueInput
    update: XOR<user_patch_favorite_folderUpdateWithoutUserInput, user_patch_favorite_folderUncheckedUpdateWithoutUserInput>
    create: XOR<user_patch_favorite_folderCreateWithoutUserInput, user_patch_favorite_folderUncheckedCreateWithoutUserInput>
  }

  export type user_patch_favorite_folderUpdateWithWhereUniqueWithoutUserInput = {
    where: user_patch_favorite_folderWhereUniqueInput
    data: XOR<user_patch_favorite_folderUpdateWithoutUserInput, user_patch_favorite_folderUncheckedUpdateWithoutUserInput>
  }

  export type user_patch_favorite_folderUpdateManyWithWhereWithoutUserInput = {
    where: user_patch_favorite_folderScalarWhereInput
    data: XOR<user_patch_favorite_folderUpdateManyMutationInput, user_patch_favorite_folderUncheckedUpdateManyWithoutUserInput>
  }

  export type user_patch_favorite_folderScalarWhereInput = {
    AND?: user_patch_favorite_folderScalarWhereInput | user_patch_favorite_folderScalarWhereInput[]
    OR?: user_patch_favorite_folderScalarWhereInput[]
    NOT?: user_patch_favorite_folderScalarWhereInput | user_patch_favorite_folderScalarWhereInput[]
    id?: IntFilter<"user_patch_favorite_folder"> | number
    name?: StringFilter<"user_patch_favorite_folder"> | string
    description?: StringFilter<"user_patch_favorite_folder"> | string
    is_public?: BoolFilter<"user_patch_favorite_folder"> | boolean
    user_id?: IntFilter<"user_patch_favorite_folder"> | number
    created?: DateTimeFilter<"user_patch_favorite_folder"> | Date | string
    updated?: DateTimeFilter<"user_patch_favorite_folder"> | Date | string
  }

  export type user_follow_relationUpsertWithWhereUniqueWithoutFollowingInput = {
    where: user_follow_relationWhereUniqueInput
    update: XOR<user_follow_relationUpdateWithoutFollowingInput, user_follow_relationUncheckedUpdateWithoutFollowingInput>
    create: XOR<user_follow_relationCreateWithoutFollowingInput, user_follow_relationUncheckedCreateWithoutFollowingInput>
  }

  export type user_follow_relationUpdateWithWhereUniqueWithoutFollowingInput = {
    where: user_follow_relationWhereUniqueInput
    data: XOR<user_follow_relationUpdateWithoutFollowingInput, user_follow_relationUncheckedUpdateWithoutFollowingInput>
  }

  export type user_follow_relationUpdateManyWithWhereWithoutFollowingInput = {
    where: user_follow_relationScalarWhereInput
    data: XOR<user_follow_relationUpdateManyMutationInput, user_follow_relationUncheckedUpdateManyWithoutFollowingInput>
  }

  export type user_follow_relationScalarWhereInput = {
    AND?: user_follow_relationScalarWhereInput | user_follow_relationScalarWhereInput[]
    OR?: user_follow_relationScalarWhereInput[]
    NOT?: user_follow_relationScalarWhereInput | user_follow_relationScalarWhereInput[]
    id?: IntFilter<"user_follow_relation"> | number
    follower_id?: IntFilter<"user_follow_relation"> | number
    following_id?: IntFilter<"user_follow_relation"> | number
  }

  export type user_follow_relationUpsertWithWhereUniqueWithoutFollowerInput = {
    where: user_follow_relationWhereUniqueInput
    update: XOR<user_follow_relationUpdateWithoutFollowerInput, user_follow_relationUncheckedUpdateWithoutFollowerInput>
    create: XOR<user_follow_relationCreateWithoutFollowerInput, user_follow_relationUncheckedCreateWithoutFollowerInput>
  }

  export type user_follow_relationUpdateWithWhereUniqueWithoutFollowerInput = {
    where: user_follow_relationWhereUniqueInput
    data: XOR<user_follow_relationUpdateWithoutFollowerInput, user_follow_relationUncheckedUpdateWithoutFollowerInput>
  }

  export type user_follow_relationUpdateManyWithWhereWithoutFollowerInput = {
    where: user_follow_relationScalarWhereInput
    data: XOR<user_follow_relationUpdateManyMutationInput, user_follow_relationUncheckedUpdateManyWithoutFollowerInput>
  }

  export type patchUpsertWithWhereUniqueWithoutUserInput = {
    where: patchWhereUniqueInput
    update: XOR<patchUpdateWithoutUserInput, patchUncheckedUpdateWithoutUserInput>
    create: XOR<patchCreateWithoutUserInput, patchUncheckedCreateWithoutUserInput>
  }

  export type patchUpdateWithWhereUniqueWithoutUserInput = {
    where: patchWhereUniqueInput
    data: XOR<patchUpdateWithoutUserInput, patchUncheckedUpdateWithoutUserInput>
  }

  export type patchUpdateManyWithWhereWithoutUserInput = {
    where: patchScalarWhereInput
    data: XOR<patchUpdateManyMutationInput, patchUncheckedUpdateManyWithoutUserInput>
  }

  export type patchScalarWhereInput = {
    AND?: patchScalarWhereInput | patchScalarWhereInput[]
    OR?: patchScalarWhereInput[]
    NOT?: patchScalarWhereInput | patchScalarWhereInput[]
    id?: IntFilter<"patch"> | number
    unique_id?: StringFilter<"patch"> | string
    name?: StringFilter<"patch"> | string
    vndb_id?: StringNullableFilter<"patch"> | string | null
    banner?: StringFilter<"patch"> | string
    introduction?: StringFilter<"patch"> | string
    released?: StringFilter<"patch"> | string
    content_limit?: StringFilter<"patch"> | string
    status?: IntFilter<"patch"> | number
    download?: IntFilter<"patch"> | number
    view?: IntFilter<"patch"> | number
    resource_update_time?: DateTimeFilter<"patch"> | Date | string
    type?: StringNullableListFilter<"patch">
    language?: StringNullableListFilter<"patch">
    engine?: StringNullableListFilter<"patch">
    platform?: StringNullableListFilter<"patch">
    user_id?: IntFilter<"patch"> | number
    created?: DateTimeFilter<"patch"> | Date | string
    updated?: DateTimeFilter<"patch"> | Date | string
  }

  export type patch_commentUpsertWithWhereUniqueWithoutUserInput = {
    where: patch_commentWhereUniqueInput
    update: XOR<patch_commentUpdateWithoutUserInput, patch_commentUncheckedUpdateWithoutUserInput>
    create: XOR<patch_commentCreateWithoutUserInput, patch_commentUncheckedCreateWithoutUserInput>
  }

  export type patch_commentUpdateWithWhereUniqueWithoutUserInput = {
    where: patch_commentWhereUniqueInput
    data: XOR<patch_commentUpdateWithoutUserInput, patch_commentUncheckedUpdateWithoutUserInput>
  }

  export type patch_commentUpdateManyWithWhereWithoutUserInput = {
    where: patch_commentScalarWhereInput
    data: XOR<patch_commentUpdateManyMutationInput, patch_commentUncheckedUpdateManyWithoutUserInput>
  }

  export type patch_commentScalarWhereInput = {
    AND?: patch_commentScalarWhereInput | patch_commentScalarWhereInput[]
    OR?: patch_commentScalarWhereInput[]
    NOT?: patch_commentScalarWhereInput | patch_commentScalarWhereInput[]
    id?: IntFilter<"patch_comment"> | number
    content?: StringFilter<"patch_comment"> | string
    edit?: StringFilter<"patch_comment"> | string
    parent_id?: IntNullableFilter<"patch_comment"> | number | null
    user_id?: IntFilter<"patch_comment"> | number
    patch_id?: IntFilter<"patch_comment"> | number
    created?: DateTimeFilter<"patch_comment"> | Date | string
    updated?: DateTimeFilter<"patch_comment"> | Date | string
  }

  export type patch_resourceUpsertWithWhereUniqueWithoutUserInput = {
    where: patch_resourceWhereUniqueInput
    update: XOR<patch_resourceUpdateWithoutUserInput, patch_resourceUncheckedUpdateWithoutUserInput>
    create: XOR<patch_resourceCreateWithoutUserInput, patch_resourceUncheckedCreateWithoutUserInput>
  }

  export type patch_resourceUpdateWithWhereUniqueWithoutUserInput = {
    where: patch_resourceWhereUniqueInput
    data: XOR<patch_resourceUpdateWithoutUserInput, patch_resourceUncheckedUpdateWithoutUserInput>
  }

  export type patch_resourceUpdateManyWithWhereWithoutUserInput = {
    where: patch_resourceScalarWhereInput
    data: XOR<patch_resourceUpdateManyMutationInput, patch_resourceUncheckedUpdateManyWithoutUserInput>
  }

  export type patch_resourceScalarWhereInput = {
    AND?: patch_resourceScalarWhereInput | patch_resourceScalarWhereInput[]
    OR?: patch_resourceScalarWhereInput[]
    NOT?: patch_resourceScalarWhereInput | patch_resourceScalarWhereInput[]
    id?: IntFilter<"patch_resource"> | number
    storage?: StringFilter<"patch_resource"> | string
    section?: StringFilter<"patch_resource"> | string
    name?: StringFilter<"patch_resource"> | string
    size?: StringFilter<"patch_resource"> | string
    code?: StringFilter<"patch_resource"> | string
    password?: StringFilter<"patch_resource"> | string
    note?: StringFilter<"patch_resource"> | string
    hash?: StringFilter<"patch_resource"> | string
    content?: StringFilter<"patch_resource"> | string
    type?: StringNullableListFilter<"patch_resource">
    language?: StringNullableListFilter<"patch_resource">
    platform?: StringNullableListFilter<"patch_resource">
    download?: IntFilter<"patch_resource"> | number
    status?: IntFilter<"patch_resource"> | number
    user_id?: IntFilter<"patch_resource"> | number
    patch_id?: IntFilter<"patch_resource"> | number
    created?: DateTimeFilter<"patch_resource"> | Date | string
    updated?: DateTimeFilter<"patch_resource"> | Date | string
  }

  export type patch_characterUpsertWithWhereUniqueWithoutUserInput = {
    where: patch_characterWhereUniqueInput
    update: XOR<patch_characterUpdateWithoutUserInput, patch_characterUncheckedUpdateWithoutUserInput>
    create: XOR<patch_characterCreateWithoutUserInput, patch_characterUncheckedCreateWithoutUserInput>
  }

  export type patch_characterUpdateWithWhereUniqueWithoutUserInput = {
    where: patch_characterWhereUniqueInput
    data: XOR<patch_characterUpdateWithoutUserInput, patch_characterUncheckedUpdateWithoutUserInput>
  }

  export type patch_characterUpdateManyWithWhereWithoutUserInput = {
    where: patch_characterScalarWhereInput
    data: XOR<patch_characterUpdateManyMutationInput, patch_characterUncheckedUpdateManyWithoutUserInput>
  }

  export type patch_characterScalarWhereInput = {
    AND?: patch_characterScalarWhereInput | patch_characterScalarWhereInput[]
    OR?: patch_characterScalarWhereInput[]
    NOT?: patch_characterScalarWhereInput | patch_characterScalarWhereInput[]
    id?: IntFilter<"patch_character"> | number
    name?: StringFilter<"patch_character"> | string
    image?: StringFilter<"patch_character"> | string
    description?: StringFilter<"patch_character"> | string
    status?: IntFilter<"patch_character"> | number
    traits?: StringNullableListFilter<"patch_character">
    voice_actor?: StringFilter<"patch_character"> | string
    alias?: StringNullableListFilter<"patch_character">
    age?: StringFilter<"patch_character"> | string
    height?: StringFilter<"patch_character"> | string
    birthday?: StringFilter<"patch_character"> | string
    blood_type?: StringFilter<"patch_character"> | string
    three_sizes?: StringFilter<"patch_character"> | string
    hobby?: StringNullableListFilter<"patch_character">
    favorite?: StringNullableListFilter<"patch_character">
    role_type?: StringFilter<"patch_character"> | string
    personality?: StringNullableListFilter<"patch_character">
    relationship?: StringFilter<"patch_character"> | string
    is_latest?: BoolFilter<"patch_character"> | boolean
    original_id?: IntNullableFilter<"patch_character"> | number | null
    user_id?: IntFilter<"patch_character"> | number
    patch_id?: IntFilter<"patch_character"> | number
    created?: DateTimeFilter<"patch_character"> | Date | string
    updated?: DateTimeFilter<"patch_character"> | Date | string
  }

  export type user_messageUpsertWithWhereUniqueWithoutSenderInput = {
    where: user_messageWhereUniqueInput
    update: XOR<user_messageUpdateWithoutSenderInput, user_messageUncheckedUpdateWithoutSenderInput>
    create: XOR<user_messageCreateWithoutSenderInput, user_messageUncheckedCreateWithoutSenderInput>
  }

  export type user_messageUpdateWithWhereUniqueWithoutSenderInput = {
    where: user_messageWhereUniqueInput
    data: XOR<user_messageUpdateWithoutSenderInput, user_messageUncheckedUpdateWithoutSenderInput>
  }

  export type user_messageUpdateManyWithWhereWithoutSenderInput = {
    where: user_messageScalarWhereInput
    data: XOR<user_messageUpdateManyMutationInput, user_messageUncheckedUpdateManyWithoutSenderInput>
  }

  export type user_messageScalarWhereInput = {
    AND?: user_messageScalarWhereInput | user_messageScalarWhereInput[]
    OR?: user_messageScalarWhereInput[]
    NOT?: user_messageScalarWhereInput | user_messageScalarWhereInput[]
    id?: IntFilter<"user_message"> | number
    type?: StringFilter<"user_message"> | string
    content?: StringFilter<"user_message"> | string
    status?: IntFilter<"user_message"> | number
    link?: StringFilter<"user_message"> | string
    sender_id?: IntNullableFilter<"user_message"> | number | null
    recipient_id?: IntNullableFilter<"user_message"> | number | null
    created?: DateTimeFilter<"user_message"> | Date | string
    updated?: DateTimeFilter<"user_message"> | Date | string
  }

  export type user_messageUpsertWithWhereUniqueWithoutRecipientInput = {
    where: user_messageWhereUniqueInput
    update: XOR<user_messageUpdateWithoutRecipientInput, user_messageUncheckedUpdateWithoutRecipientInput>
    create: XOR<user_messageCreateWithoutRecipientInput, user_messageUncheckedCreateWithoutRecipientInput>
  }

  export type user_messageUpdateWithWhereUniqueWithoutRecipientInput = {
    where: user_messageWhereUniqueInput
    data: XOR<user_messageUpdateWithoutRecipientInput, user_messageUncheckedUpdateWithoutRecipientInput>
  }

  export type user_messageUpdateManyWithWhereWithoutRecipientInput = {
    where: user_messageScalarWhereInput
    data: XOR<user_messageUpdateManyMutationInput, user_messageUncheckedUpdateManyWithoutRecipientInput>
  }

  export type userCreateWithoutAdmin_logInput = {
    name: string
    email: string
    password: string
    ip?: string
    avatar?: string
    role?: number
    status?: number
    register_time?: Date | string
    moemoepoint?: number
    bio?: string
    claimed_tasks?: userCreateclaimed_tasksInput | string[]
    enable_email_notice?: boolean
    daily_image_count?: number
    daily_check_in?: number
    daily_upload_size?: number
    last_login_time?: string
    created?: Date | string
    updated?: Date | string
    patch_tag?: patch_tagCreateNestedManyWithoutUserInput
    patch_comment_like?: user_patch_comment_like_relationCreateNestedManyWithoutUserInput
    patch_resource_like?: user_patch_resource_like_relationCreateNestedManyWithoutUserInput
    patch_favorite_folder?: user_patch_favorite_folderCreateNestedManyWithoutUserInput
    following?: user_follow_relationCreateNestedManyWithoutFollowingInput
    follower?: user_follow_relationCreateNestedManyWithoutFollowerInput
    patch?: patchCreateNestedManyWithoutUserInput
    patch_comment?: patch_commentCreateNestedManyWithoutUserInput
    patch_resource?: patch_resourceCreateNestedManyWithoutUserInput
    patch_character?: patch_characterCreateNestedManyWithoutUserInput
    send_message?: user_messageCreateNestedManyWithoutSenderInput
    receive_message?: user_messageCreateNestedManyWithoutRecipientInput
  }

  export type userUncheckedCreateWithoutAdmin_logInput = {
    id?: number
    name: string
    email: string
    password: string
    ip?: string
    avatar?: string
    role?: number
    status?: number
    register_time?: Date | string
    moemoepoint?: number
    bio?: string
    claimed_tasks?: userCreateclaimed_tasksInput | string[]
    enable_email_notice?: boolean
    daily_image_count?: number
    daily_check_in?: number
    daily_upload_size?: number
    last_login_time?: string
    created?: Date | string
    updated?: Date | string
    patch_tag?: patch_tagUncheckedCreateNestedManyWithoutUserInput
    patch_comment_like?: user_patch_comment_like_relationUncheckedCreateNestedManyWithoutUserInput
    patch_resource_like?: user_patch_resource_like_relationUncheckedCreateNestedManyWithoutUserInput
    patch_favorite_folder?: user_patch_favorite_folderUncheckedCreateNestedManyWithoutUserInput
    following?: user_follow_relationUncheckedCreateNestedManyWithoutFollowingInput
    follower?: user_follow_relationUncheckedCreateNestedManyWithoutFollowerInput
    patch?: patchUncheckedCreateNestedManyWithoutUserInput
    patch_comment?: patch_commentUncheckedCreateNestedManyWithoutUserInput
    patch_resource?: patch_resourceUncheckedCreateNestedManyWithoutUserInput
    patch_character?: patch_characterUncheckedCreateNestedManyWithoutUserInput
    send_message?: user_messageUncheckedCreateNestedManyWithoutSenderInput
    receive_message?: user_messageUncheckedCreateNestedManyWithoutRecipientInput
  }

  export type userCreateOrConnectWithoutAdmin_logInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutAdmin_logInput, userUncheckedCreateWithoutAdmin_logInput>
  }

  export type userUpsertWithoutAdmin_logInput = {
    update: XOR<userUpdateWithoutAdmin_logInput, userUncheckedUpdateWithoutAdmin_logInput>
    create: XOR<userCreateWithoutAdmin_logInput, userUncheckedCreateWithoutAdmin_logInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutAdmin_logInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutAdmin_logInput, userUncheckedUpdateWithoutAdmin_logInput>
  }

  export type userUpdateWithoutAdmin_logInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    ip?: StringFieldUpdateOperationsInput | string
    avatar?: StringFieldUpdateOperationsInput | string
    role?: IntFieldUpdateOperationsInput | number
    status?: IntFieldUpdateOperationsInput | number
    register_time?: DateTimeFieldUpdateOperationsInput | Date | string
    moemoepoint?: IntFieldUpdateOperationsInput | number
    bio?: StringFieldUpdateOperationsInput | string
    claimed_tasks?: userUpdateclaimed_tasksInput | string[]
    enable_email_notice?: BoolFieldUpdateOperationsInput | boolean
    daily_image_count?: IntFieldUpdateOperationsInput | number
    daily_check_in?: IntFieldUpdateOperationsInput | number
    daily_upload_size?: FloatFieldUpdateOperationsInput | number
    last_login_time?: StringFieldUpdateOperationsInput | string
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    patch_tag?: patch_tagUpdateManyWithoutUserNestedInput
    patch_comment_like?: user_patch_comment_like_relationUpdateManyWithoutUserNestedInput
    patch_resource_like?: user_patch_resource_like_relationUpdateManyWithoutUserNestedInput
    patch_favorite_folder?: user_patch_favorite_folderUpdateManyWithoutUserNestedInput
    following?: user_follow_relationUpdateManyWithoutFollowingNestedInput
    follower?: user_follow_relationUpdateManyWithoutFollowerNestedInput
    patch?: patchUpdateManyWithoutUserNestedInput
    patch_comment?: patch_commentUpdateManyWithoutUserNestedInput
    patch_resource?: patch_resourceUpdateManyWithoutUserNestedInput
    patch_character?: patch_characterUpdateManyWithoutUserNestedInput
    send_message?: user_messageUpdateManyWithoutSenderNestedInput
    receive_message?: user_messageUpdateManyWithoutRecipientNestedInput
  }

  export type userUncheckedUpdateWithoutAdmin_logInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    ip?: StringFieldUpdateOperationsInput | string
    avatar?: StringFieldUpdateOperationsInput | string
    role?: IntFieldUpdateOperationsInput | number
    status?: IntFieldUpdateOperationsInput | number
    register_time?: DateTimeFieldUpdateOperationsInput | Date | string
    moemoepoint?: IntFieldUpdateOperationsInput | number
    bio?: StringFieldUpdateOperationsInput | string
    claimed_tasks?: userUpdateclaimed_tasksInput | string[]
    enable_email_notice?: BoolFieldUpdateOperationsInput | boolean
    daily_image_count?: IntFieldUpdateOperationsInput | number
    daily_check_in?: IntFieldUpdateOperationsInput | number
    daily_upload_size?: FloatFieldUpdateOperationsInput | number
    last_login_time?: StringFieldUpdateOperationsInput | string
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    patch_tag?: patch_tagUncheckedUpdateManyWithoutUserNestedInput
    patch_comment_like?: user_patch_comment_like_relationUncheckedUpdateManyWithoutUserNestedInput
    patch_resource_like?: user_patch_resource_like_relationUncheckedUpdateManyWithoutUserNestedInput
    patch_favorite_folder?: user_patch_favorite_folderUncheckedUpdateManyWithoutUserNestedInput
    following?: user_follow_relationUncheckedUpdateManyWithoutFollowingNestedInput
    follower?: user_follow_relationUncheckedUpdateManyWithoutFollowerNestedInput
    patch?: patchUncheckedUpdateManyWithoutUserNestedInput
    patch_comment?: patch_commentUncheckedUpdateManyWithoutUserNestedInput
    patch_resource?: patch_resourceUncheckedUpdateManyWithoutUserNestedInput
    patch_character?: patch_characterUncheckedUpdateManyWithoutUserNestedInput
    send_message?: user_messageUncheckedUpdateManyWithoutSenderNestedInput
    receive_message?: user_messageUncheckedUpdateManyWithoutRecipientNestedInput
  }

  export type userCreateWithoutFollowerInput = {
    name: string
    email: string
    password: string
    ip?: string
    avatar?: string
    role?: number
    status?: number
    register_time?: Date | string
    moemoepoint?: number
    bio?: string
    claimed_tasks?: userCreateclaimed_tasksInput | string[]
    enable_email_notice?: boolean
    daily_image_count?: number
    daily_check_in?: number
    daily_upload_size?: number
    last_login_time?: string
    created?: Date | string
    updated?: Date | string
    admin_log?: admin_logCreateNestedManyWithoutUserInput
    patch_tag?: patch_tagCreateNestedManyWithoutUserInput
    patch_comment_like?: user_patch_comment_like_relationCreateNestedManyWithoutUserInput
    patch_resource_like?: user_patch_resource_like_relationCreateNestedManyWithoutUserInput
    patch_favorite_folder?: user_patch_favorite_folderCreateNestedManyWithoutUserInput
    following?: user_follow_relationCreateNestedManyWithoutFollowingInput
    patch?: patchCreateNestedManyWithoutUserInput
    patch_comment?: patch_commentCreateNestedManyWithoutUserInput
    patch_resource?: patch_resourceCreateNestedManyWithoutUserInput
    patch_character?: patch_characterCreateNestedManyWithoutUserInput
    send_message?: user_messageCreateNestedManyWithoutSenderInput
    receive_message?: user_messageCreateNestedManyWithoutRecipientInput
  }

  export type userUncheckedCreateWithoutFollowerInput = {
    id?: number
    name: string
    email: string
    password: string
    ip?: string
    avatar?: string
    role?: number
    status?: number
    register_time?: Date | string
    moemoepoint?: number
    bio?: string
    claimed_tasks?: userCreateclaimed_tasksInput | string[]
    enable_email_notice?: boolean
    daily_image_count?: number
    daily_check_in?: number
    daily_upload_size?: number
    last_login_time?: string
    created?: Date | string
    updated?: Date | string
    admin_log?: admin_logUncheckedCreateNestedManyWithoutUserInput
    patch_tag?: patch_tagUncheckedCreateNestedManyWithoutUserInput
    patch_comment_like?: user_patch_comment_like_relationUncheckedCreateNestedManyWithoutUserInput
    patch_resource_like?: user_patch_resource_like_relationUncheckedCreateNestedManyWithoutUserInput
    patch_favorite_folder?: user_patch_favorite_folderUncheckedCreateNestedManyWithoutUserInput
    following?: user_follow_relationUncheckedCreateNestedManyWithoutFollowingInput
    patch?: patchUncheckedCreateNestedManyWithoutUserInput
    patch_comment?: patch_commentUncheckedCreateNestedManyWithoutUserInput
    patch_resource?: patch_resourceUncheckedCreateNestedManyWithoutUserInput
    patch_character?: patch_characterUncheckedCreateNestedManyWithoutUserInput
    send_message?: user_messageUncheckedCreateNestedManyWithoutSenderInput
    receive_message?: user_messageUncheckedCreateNestedManyWithoutRecipientInput
  }

  export type userCreateOrConnectWithoutFollowerInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutFollowerInput, userUncheckedCreateWithoutFollowerInput>
  }

  export type userCreateWithoutFollowingInput = {
    name: string
    email: string
    password: string
    ip?: string
    avatar?: string
    role?: number
    status?: number
    register_time?: Date | string
    moemoepoint?: number
    bio?: string
    claimed_tasks?: userCreateclaimed_tasksInput | string[]
    enable_email_notice?: boolean
    daily_image_count?: number
    daily_check_in?: number
    daily_upload_size?: number
    last_login_time?: string
    created?: Date | string
    updated?: Date | string
    admin_log?: admin_logCreateNestedManyWithoutUserInput
    patch_tag?: patch_tagCreateNestedManyWithoutUserInput
    patch_comment_like?: user_patch_comment_like_relationCreateNestedManyWithoutUserInput
    patch_resource_like?: user_patch_resource_like_relationCreateNestedManyWithoutUserInput
    patch_favorite_folder?: user_patch_favorite_folderCreateNestedManyWithoutUserInput
    follower?: user_follow_relationCreateNestedManyWithoutFollowerInput
    patch?: patchCreateNestedManyWithoutUserInput
    patch_comment?: patch_commentCreateNestedManyWithoutUserInput
    patch_resource?: patch_resourceCreateNestedManyWithoutUserInput
    patch_character?: patch_characterCreateNestedManyWithoutUserInput
    send_message?: user_messageCreateNestedManyWithoutSenderInput
    receive_message?: user_messageCreateNestedManyWithoutRecipientInput
  }

  export type userUncheckedCreateWithoutFollowingInput = {
    id?: number
    name: string
    email: string
    password: string
    ip?: string
    avatar?: string
    role?: number
    status?: number
    register_time?: Date | string
    moemoepoint?: number
    bio?: string
    claimed_tasks?: userCreateclaimed_tasksInput | string[]
    enable_email_notice?: boolean
    daily_image_count?: number
    daily_check_in?: number
    daily_upload_size?: number
    last_login_time?: string
    created?: Date | string
    updated?: Date | string
    admin_log?: admin_logUncheckedCreateNestedManyWithoutUserInput
    patch_tag?: patch_tagUncheckedCreateNestedManyWithoutUserInput
    patch_comment_like?: user_patch_comment_like_relationUncheckedCreateNestedManyWithoutUserInput
    patch_resource_like?: user_patch_resource_like_relationUncheckedCreateNestedManyWithoutUserInput
    patch_favorite_folder?: user_patch_favorite_folderUncheckedCreateNestedManyWithoutUserInput
    follower?: user_follow_relationUncheckedCreateNestedManyWithoutFollowerInput
    patch?: patchUncheckedCreateNestedManyWithoutUserInput
    patch_comment?: patch_commentUncheckedCreateNestedManyWithoutUserInput
    patch_resource?: patch_resourceUncheckedCreateNestedManyWithoutUserInput
    patch_character?: patch_characterUncheckedCreateNestedManyWithoutUserInput
    send_message?: user_messageUncheckedCreateNestedManyWithoutSenderInput
    receive_message?: user_messageUncheckedCreateNestedManyWithoutRecipientInput
  }

  export type userCreateOrConnectWithoutFollowingInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutFollowingInput, userUncheckedCreateWithoutFollowingInput>
  }

  export type userUpsertWithoutFollowerInput = {
    update: XOR<userUpdateWithoutFollowerInput, userUncheckedUpdateWithoutFollowerInput>
    create: XOR<userCreateWithoutFollowerInput, userUncheckedCreateWithoutFollowerInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutFollowerInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutFollowerInput, userUncheckedUpdateWithoutFollowerInput>
  }

  export type userUpdateWithoutFollowerInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    ip?: StringFieldUpdateOperationsInput | string
    avatar?: StringFieldUpdateOperationsInput | string
    role?: IntFieldUpdateOperationsInput | number
    status?: IntFieldUpdateOperationsInput | number
    register_time?: DateTimeFieldUpdateOperationsInput | Date | string
    moemoepoint?: IntFieldUpdateOperationsInput | number
    bio?: StringFieldUpdateOperationsInput | string
    claimed_tasks?: userUpdateclaimed_tasksInput | string[]
    enable_email_notice?: BoolFieldUpdateOperationsInput | boolean
    daily_image_count?: IntFieldUpdateOperationsInput | number
    daily_check_in?: IntFieldUpdateOperationsInput | number
    daily_upload_size?: FloatFieldUpdateOperationsInput | number
    last_login_time?: StringFieldUpdateOperationsInput | string
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    admin_log?: admin_logUpdateManyWithoutUserNestedInput
    patch_tag?: patch_tagUpdateManyWithoutUserNestedInput
    patch_comment_like?: user_patch_comment_like_relationUpdateManyWithoutUserNestedInput
    patch_resource_like?: user_patch_resource_like_relationUpdateManyWithoutUserNestedInput
    patch_favorite_folder?: user_patch_favorite_folderUpdateManyWithoutUserNestedInput
    following?: user_follow_relationUpdateManyWithoutFollowingNestedInput
    patch?: patchUpdateManyWithoutUserNestedInput
    patch_comment?: patch_commentUpdateManyWithoutUserNestedInput
    patch_resource?: patch_resourceUpdateManyWithoutUserNestedInput
    patch_character?: patch_characterUpdateManyWithoutUserNestedInput
    send_message?: user_messageUpdateManyWithoutSenderNestedInput
    receive_message?: user_messageUpdateManyWithoutRecipientNestedInput
  }

  export type userUncheckedUpdateWithoutFollowerInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    ip?: StringFieldUpdateOperationsInput | string
    avatar?: StringFieldUpdateOperationsInput | string
    role?: IntFieldUpdateOperationsInput | number
    status?: IntFieldUpdateOperationsInput | number
    register_time?: DateTimeFieldUpdateOperationsInput | Date | string
    moemoepoint?: IntFieldUpdateOperationsInput | number
    bio?: StringFieldUpdateOperationsInput | string
    claimed_tasks?: userUpdateclaimed_tasksInput | string[]
    enable_email_notice?: BoolFieldUpdateOperationsInput | boolean
    daily_image_count?: IntFieldUpdateOperationsInput | number
    daily_check_in?: IntFieldUpdateOperationsInput | number
    daily_upload_size?: FloatFieldUpdateOperationsInput | number
    last_login_time?: StringFieldUpdateOperationsInput | string
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    admin_log?: admin_logUncheckedUpdateManyWithoutUserNestedInput
    patch_tag?: patch_tagUncheckedUpdateManyWithoutUserNestedInput
    patch_comment_like?: user_patch_comment_like_relationUncheckedUpdateManyWithoutUserNestedInput
    patch_resource_like?: user_patch_resource_like_relationUncheckedUpdateManyWithoutUserNestedInput
    patch_favorite_folder?: user_patch_favorite_folderUncheckedUpdateManyWithoutUserNestedInput
    following?: user_follow_relationUncheckedUpdateManyWithoutFollowingNestedInput
    patch?: patchUncheckedUpdateManyWithoutUserNestedInput
    patch_comment?: patch_commentUncheckedUpdateManyWithoutUserNestedInput
    patch_resource?: patch_resourceUncheckedUpdateManyWithoutUserNestedInput
    patch_character?: patch_characterUncheckedUpdateManyWithoutUserNestedInput
    send_message?: user_messageUncheckedUpdateManyWithoutSenderNestedInput
    receive_message?: user_messageUncheckedUpdateManyWithoutRecipientNestedInput
  }

  export type userUpsertWithoutFollowingInput = {
    update: XOR<userUpdateWithoutFollowingInput, userUncheckedUpdateWithoutFollowingInput>
    create: XOR<userCreateWithoutFollowingInput, userUncheckedCreateWithoutFollowingInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutFollowingInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutFollowingInput, userUncheckedUpdateWithoutFollowingInput>
  }

  export type userUpdateWithoutFollowingInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    ip?: StringFieldUpdateOperationsInput | string
    avatar?: StringFieldUpdateOperationsInput | string
    role?: IntFieldUpdateOperationsInput | number
    status?: IntFieldUpdateOperationsInput | number
    register_time?: DateTimeFieldUpdateOperationsInput | Date | string
    moemoepoint?: IntFieldUpdateOperationsInput | number
    bio?: StringFieldUpdateOperationsInput | string
    claimed_tasks?: userUpdateclaimed_tasksInput | string[]
    enable_email_notice?: BoolFieldUpdateOperationsInput | boolean
    daily_image_count?: IntFieldUpdateOperationsInput | number
    daily_check_in?: IntFieldUpdateOperationsInput | number
    daily_upload_size?: FloatFieldUpdateOperationsInput | number
    last_login_time?: StringFieldUpdateOperationsInput | string
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    admin_log?: admin_logUpdateManyWithoutUserNestedInput
    patch_tag?: patch_tagUpdateManyWithoutUserNestedInput
    patch_comment_like?: user_patch_comment_like_relationUpdateManyWithoutUserNestedInput
    patch_resource_like?: user_patch_resource_like_relationUpdateManyWithoutUserNestedInput
    patch_favorite_folder?: user_patch_favorite_folderUpdateManyWithoutUserNestedInput
    follower?: user_follow_relationUpdateManyWithoutFollowerNestedInput
    patch?: patchUpdateManyWithoutUserNestedInput
    patch_comment?: patch_commentUpdateManyWithoutUserNestedInput
    patch_resource?: patch_resourceUpdateManyWithoutUserNestedInput
    patch_character?: patch_characterUpdateManyWithoutUserNestedInput
    send_message?: user_messageUpdateManyWithoutSenderNestedInput
    receive_message?: user_messageUpdateManyWithoutRecipientNestedInput
  }

  export type userUncheckedUpdateWithoutFollowingInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    ip?: StringFieldUpdateOperationsInput | string
    avatar?: StringFieldUpdateOperationsInput | string
    role?: IntFieldUpdateOperationsInput | number
    status?: IntFieldUpdateOperationsInput | number
    register_time?: DateTimeFieldUpdateOperationsInput | Date | string
    moemoepoint?: IntFieldUpdateOperationsInput | number
    bio?: StringFieldUpdateOperationsInput | string
    claimed_tasks?: userUpdateclaimed_tasksInput | string[]
    enable_email_notice?: BoolFieldUpdateOperationsInput | boolean
    daily_image_count?: IntFieldUpdateOperationsInput | number
    daily_check_in?: IntFieldUpdateOperationsInput | number
    daily_upload_size?: FloatFieldUpdateOperationsInput | number
    last_login_time?: StringFieldUpdateOperationsInput | string
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    admin_log?: admin_logUncheckedUpdateManyWithoutUserNestedInput
    patch_tag?: patch_tagUncheckedUpdateManyWithoutUserNestedInput
    patch_comment_like?: user_patch_comment_like_relationUncheckedUpdateManyWithoutUserNestedInput
    patch_resource_like?: user_patch_resource_like_relationUncheckedUpdateManyWithoutUserNestedInput
    patch_favorite_folder?: user_patch_favorite_folderUncheckedUpdateManyWithoutUserNestedInput
    follower?: user_follow_relationUncheckedUpdateManyWithoutFollowerNestedInput
    patch?: patchUncheckedUpdateManyWithoutUserNestedInput
    patch_comment?: patch_commentUncheckedUpdateManyWithoutUserNestedInput
    patch_resource?: patch_resourceUncheckedUpdateManyWithoutUserNestedInput
    patch_character?: patch_characterUncheckedUpdateManyWithoutUserNestedInput
    send_message?: user_messageUncheckedUpdateManyWithoutSenderNestedInput
    receive_message?: user_messageUncheckedUpdateManyWithoutRecipientNestedInput
  }

  export type userCreateWithoutSend_messageInput = {
    name: string
    email: string
    password: string
    ip?: string
    avatar?: string
    role?: number
    status?: number
    register_time?: Date | string
    moemoepoint?: number
    bio?: string
    claimed_tasks?: userCreateclaimed_tasksInput | string[]
    enable_email_notice?: boolean
    daily_image_count?: number
    daily_check_in?: number
    daily_upload_size?: number
    last_login_time?: string
    created?: Date | string
    updated?: Date | string
    admin_log?: admin_logCreateNestedManyWithoutUserInput
    patch_tag?: patch_tagCreateNestedManyWithoutUserInput
    patch_comment_like?: user_patch_comment_like_relationCreateNestedManyWithoutUserInput
    patch_resource_like?: user_patch_resource_like_relationCreateNestedManyWithoutUserInput
    patch_favorite_folder?: user_patch_favorite_folderCreateNestedManyWithoutUserInput
    following?: user_follow_relationCreateNestedManyWithoutFollowingInput
    follower?: user_follow_relationCreateNestedManyWithoutFollowerInput
    patch?: patchCreateNestedManyWithoutUserInput
    patch_comment?: patch_commentCreateNestedManyWithoutUserInput
    patch_resource?: patch_resourceCreateNestedManyWithoutUserInput
    patch_character?: patch_characterCreateNestedManyWithoutUserInput
    receive_message?: user_messageCreateNestedManyWithoutRecipientInput
  }

  export type userUncheckedCreateWithoutSend_messageInput = {
    id?: number
    name: string
    email: string
    password: string
    ip?: string
    avatar?: string
    role?: number
    status?: number
    register_time?: Date | string
    moemoepoint?: number
    bio?: string
    claimed_tasks?: userCreateclaimed_tasksInput | string[]
    enable_email_notice?: boolean
    daily_image_count?: number
    daily_check_in?: number
    daily_upload_size?: number
    last_login_time?: string
    created?: Date | string
    updated?: Date | string
    admin_log?: admin_logUncheckedCreateNestedManyWithoutUserInput
    patch_tag?: patch_tagUncheckedCreateNestedManyWithoutUserInput
    patch_comment_like?: user_patch_comment_like_relationUncheckedCreateNestedManyWithoutUserInput
    patch_resource_like?: user_patch_resource_like_relationUncheckedCreateNestedManyWithoutUserInput
    patch_favorite_folder?: user_patch_favorite_folderUncheckedCreateNestedManyWithoutUserInput
    following?: user_follow_relationUncheckedCreateNestedManyWithoutFollowingInput
    follower?: user_follow_relationUncheckedCreateNestedManyWithoutFollowerInput
    patch?: patchUncheckedCreateNestedManyWithoutUserInput
    patch_comment?: patch_commentUncheckedCreateNestedManyWithoutUserInput
    patch_resource?: patch_resourceUncheckedCreateNestedManyWithoutUserInput
    patch_character?: patch_characterUncheckedCreateNestedManyWithoutUserInput
    receive_message?: user_messageUncheckedCreateNestedManyWithoutRecipientInput
  }

  export type userCreateOrConnectWithoutSend_messageInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutSend_messageInput, userUncheckedCreateWithoutSend_messageInput>
  }

  export type userCreateWithoutReceive_messageInput = {
    name: string
    email: string
    password: string
    ip?: string
    avatar?: string
    role?: number
    status?: number
    register_time?: Date | string
    moemoepoint?: number
    bio?: string
    claimed_tasks?: userCreateclaimed_tasksInput | string[]
    enable_email_notice?: boolean
    daily_image_count?: number
    daily_check_in?: number
    daily_upload_size?: number
    last_login_time?: string
    created?: Date | string
    updated?: Date | string
    admin_log?: admin_logCreateNestedManyWithoutUserInput
    patch_tag?: patch_tagCreateNestedManyWithoutUserInput
    patch_comment_like?: user_patch_comment_like_relationCreateNestedManyWithoutUserInput
    patch_resource_like?: user_patch_resource_like_relationCreateNestedManyWithoutUserInput
    patch_favorite_folder?: user_patch_favorite_folderCreateNestedManyWithoutUserInput
    following?: user_follow_relationCreateNestedManyWithoutFollowingInput
    follower?: user_follow_relationCreateNestedManyWithoutFollowerInput
    patch?: patchCreateNestedManyWithoutUserInput
    patch_comment?: patch_commentCreateNestedManyWithoutUserInput
    patch_resource?: patch_resourceCreateNestedManyWithoutUserInput
    patch_character?: patch_characterCreateNestedManyWithoutUserInput
    send_message?: user_messageCreateNestedManyWithoutSenderInput
  }

  export type userUncheckedCreateWithoutReceive_messageInput = {
    id?: number
    name: string
    email: string
    password: string
    ip?: string
    avatar?: string
    role?: number
    status?: number
    register_time?: Date | string
    moemoepoint?: number
    bio?: string
    claimed_tasks?: userCreateclaimed_tasksInput | string[]
    enable_email_notice?: boolean
    daily_image_count?: number
    daily_check_in?: number
    daily_upload_size?: number
    last_login_time?: string
    created?: Date | string
    updated?: Date | string
    admin_log?: admin_logUncheckedCreateNestedManyWithoutUserInput
    patch_tag?: patch_tagUncheckedCreateNestedManyWithoutUserInput
    patch_comment_like?: user_patch_comment_like_relationUncheckedCreateNestedManyWithoutUserInput
    patch_resource_like?: user_patch_resource_like_relationUncheckedCreateNestedManyWithoutUserInput
    patch_favorite_folder?: user_patch_favorite_folderUncheckedCreateNestedManyWithoutUserInput
    following?: user_follow_relationUncheckedCreateNestedManyWithoutFollowingInput
    follower?: user_follow_relationUncheckedCreateNestedManyWithoutFollowerInput
    patch?: patchUncheckedCreateNestedManyWithoutUserInput
    patch_comment?: patch_commentUncheckedCreateNestedManyWithoutUserInput
    patch_resource?: patch_resourceUncheckedCreateNestedManyWithoutUserInput
    patch_character?: patch_characterUncheckedCreateNestedManyWithoutUserInput
    send_message?: user_messageUncheckedCreateNestedManyWithoutSenderInput
  }

  export type userCreateOrConnectWithoutReceive_messageInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutReceive_messageInput, userUncheckedCreateWithoutReceive_messageInput>
  }

  export type userUpsertWithoutSend_messageInput = {
    update: XOR<userUpdateWithoutSend_messageInput, userUncheckedUpdateWithoutSend_messageInput>
    create: XOR<userCreateWithoutSend_messageInput, userUncheckedCreateWithoutSend_messageInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutSend_messageInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutSend_messageInput, userUncheckedUpdateWithoutSend_messageInput>
  }

  export type userUpdateWithoutSend_messageInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    ip?: StringFieldUpdateOperationsInput | string
    avatar?: StringFieldUpdateOperationsInput | string
    role?: IntFieldUpdateOperationsInput | number
    status?: IntFieldUpdateOperationsInput | number
    register_time?: DateTimeFieldUpdateOperationsInput | Date | string
    moemoepoint?: IntFieldUpdateOperationsInput | number
    bio?: StringFieldUpdateOperationsInput | string
    claimed_tasks?: userUpdateclaimed_tasksInput | string[]
    enable_email_notice?: BoolFieldUpdateOperationsInput | boolean
    daily_image_count?: IntFieldUpdateOperationsInput | number
    daily_check_in?: IntFieldUpdateOperationsInput | number
    daily_upload_size?: FloatFieldUpdateOperationsInput | number
    last_login_time?: StringFieldUpdateOperationsInput | string
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    admin_log?: admin_logUpdateManyWithoutUserNestedInput
    patch_tag?: patch_tagUpdateManyWithoutUserNestedInput
    patch_comment_like?: user_patch_comment_like_relationUpdateManyWithoutUserNestedInput
    patch_resource_like?: user_patch_resource_like_relationUpdateManyWithoutUserNestedInput
    patch_favorite_folder?: user_patch_favorite_folderUpdateManyWithoutUserNestedInput
    following?: user_follow_relationUpdateManyWithoutFollowingNestedInput
    follower?: user_follow_relationUpdateManyWithoutFollowerNestedInput
    patch?: patchUpdateManyWithoutUserNestedInput
    patch_comment?: patch_commentUpdateManyWithoutUserNestedInput
    patch_resource?: patch_resourceUpdateManyWithoutUserNestedInput
    patch_character?: patch_characterUpdateManyWithoutUserNestedInput
    receive_message?: user_messageUpdateManyWithoutRecipientNestedInput
  }

  export type userUncheckedUpdateWithoutSend_messageInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    ip?: StringFieldUpdateOperationsInput | string
    avatar?: StringFieldUpdateOperationsInput | string
    role?: IntFieldUpdateOperationsInput | number
    status?: IntFieldUpdateOperationsInput | number
    register_time?: DateTimeFieldUpdateOperationsInput | Date | string
    moemoepoint?: IntFieldUpdateOperationsInput | number
    bio?: StringFieldUpdateOperationsInput | string
    claimed_tasks?: userUpdateclaimed_tasksInput | string[]
    enable_email_notice?: BoolFieldUpdateOperationsInput | boolean
    daily_image_count?: IntFieldUpdateOperationsInput | number
    daily_check_in?: IntFieldUpdateOperationsInput | number
    daily_upload_size?: FloatFieldUpdateOperationsInput | number
    last_login_time?: StringFieldUpdateOperationsInput | string
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    admin_log?: admin_logUncheckedUpdateManyWithoutUserNestedInput
    patch_tag?: patch_tagUncheckedUpdateManyWithoutUserNestedInput
    patch_comment_like?: user_patch_comment_like_relationUncheckedUpdateManyWithoutUserNestedInput
    patch_resource_like?: user_patch_resource_like_relationUncheckedUpdateManyWithoutUserNestedInput
    patch_favorite_folder?: user_patch_favorite_folderUncheckedUpdateManyWithoutUserNestedInput
    following?: user_follow_relationUncheckedUpdateManyWithoutFollowingNestedInput
    follower?: user_follow_relationUncheckedUpdateManyWithoutFollowerNestedInput
    patch?: patchUncheckedUpdateManyWithoutUserNestedInput
    patch_comment?: patch_commentUncheckedUpdateManyWithoutUserNestedInput
    patch_resource?: patch_resourceUncheckedUpdateManyWithoutUserNestedInput
    patch_character?: patch_characterUncheckedUpdateManyWithoutUserNestedInput
    receive_message?: user_messageUncheckedUpdateManyWithoutRecipientNestedInput
  }

  export type userUpsertWithoutReceive_messageInput = {
    update: XOR<userUpdateWithoutReceive_messageInput, userUncheckedUpdateWithoutReceive_messageInput>
    create: XOR<userCreateWithoutReceive_messageInput, userUncheckedCreateWithoutReceive_messageInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutReceive_messageInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutReceive_messageInput, userUncheckedUpdateWithoutReceive_messageInput>
  }

  export type userUpdateWithoutReceive_messageInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    ip?: StringFieldUpdateOperationsInput | string
    avatar?: StringFieldUpdateOperationsInput | string
    role?: IntFieldUpdateOperationsInput | number
    status?: IntFieldUpdateOperationsInput | number
    register_time?: DateTimeFieldUpdateOperationsInput | Date | string
    moemoepoint?: IntFieldUpdateOperationsInput | number
    bio?: StringFieldUpdateOperationsInput | string
    claimed_tasks?: userUpdateclaimed_tasksInput | string[]
    enable_email_notice?: BoolFieldUpdateOperationsInput | boolean
    daily_image_count?: IntFieldUpdateOperationsInput | number
    daily_check_in?: IntFieldUpdateOperationsInput | number
    daily_upload_size?: FloatFieldUpdateOperationsInput | number
    last_login_time?: StringFieldUpdateOperationsInput | string
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    admin_log?: admin_logUpdateManyWithoutUserNestedInput
    patch_tag?: patch_tagUpdateManyWithoutUserNestedInput
    patch_comment_like?: user_patch_comment_like_relationUpdateManyWithoutUserNestedInput
    patch_resource_like?: user_patch_resource_like_relationUpdateManyWithoutUserNestedInput
    patch_favorite_folder?: user_patch_favorite_folderUpdateManyWithoutUserNestedInput
    following?: user_follow_relationUpdateManyWithoutFollowingNestedInput
    follower?: user_follow_relationUpdateManyWithoutFollowerNestedInput
    patch?: patchUpdateManyWithoutUserNestedInput
    patch_comment?: patch_commentUpdateManyWithoutUserNestedInput
    patch_resource?: patch_resourceUpdateManyWithoutUserNestedInput
    patch_character?: patch_characterUpdateManyWithoutUserNestedInput
    send_message?: user_messageUpdateManyWithoutSenderNestedInput
  }

  export type userUncheckedUpdateWithoutReceive_messageInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    ip?: StringFieldUpdateOperationsInput | string
    avatar?: StringFieldUpdateOperationsInput | string
    role?: IntFieldUpdateOperationsInput | number
    status?: IntFieldUpdateOperationsInput | number
    register_time?: DateTimeFieldUpdateOperationsInput | Date | string
    moemoepoint?: IntFieldUpdateOperationsInput | number
    bio?: StringFieldUpdateOperationsInput | string
    claimed_tasks?: userUpdateclaimed_tasksInput | string[]
    enable_email_notice?: BoolFieldUpdateOperationsInput | boolean
    daily_image_count?: IntFieldUpdateOperationsInput | number
    daily_check_in?: IntFieldUpdateOperationsInput | number
    daily_upload_size?: FloatFieldUpdateOperationsInput | number
    last_login_time?: StringFieldUpdateOperationsInput | string
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    admin_log?: admin_logUncheckedUpdateManyWithoutUserNestedInput
    patch_tag?: patch_tagUncheckedUpdateManyWithoutUserNestedInput
    patch_comment_like?: user_patch_comment_like_relationUncheckedUpdateManyWithoutUserNestedInput
    patch_resource_like?: user_patch_resource_like_relationUncheckedUpdateManyWithoutUserNestedInput
    patch_favorite_folder?: user_patch_favorite_folderUncheckedUpdateManyWithoutUserNestedInput
    following?: user_follow_relationUncheckedUpdateManyWithoutFollowingNestedInput
    follower?: user_follow_relationUncheckedUpdateManyWithoutFollowerNestedInput
    patch?: patchUncheckedUpdateManyWithoutUserNestedInput
    patch_comment?: patch_commentUncheckedUpdateManyWithoutUserNestedInput
    patch_resource?: patch_resourceUncheckedUpdateManyWithoutUserNestedInput
    patch_character?: patch_characterUncheckedUpdateManyWithoutUserNestedInput
    send_message?: user_messageUncheckedUpdateManyWithoutSenderNestedInput
  }

  export type userCreateWithoutPatch_favorite_folderInput = {
    name: string
    email: string
    password: string
    ip?: string
    avatar?: string
    role?: number
    status?: number
    register_time?: Date | string
    moemoepoint?: number
    bio?: string
    claimed_tasks?: userCreateclaimed_tasksInput | string[]
    enable_email_notice?: boolean
    daily_image_count?: number
    daily_check_in?: number
    daily_upload_size?: number
    last_login_time?: string
    created?: Date | string
    updated?: Date | string
    admin_log?: admin_logCreateNestedManyWithoutUserInput
    patch_tag?: patch_tagCreateNestedManyWithoutUserInput
    patch_comment_like?: user_patch_comment_like_relationCreateNestedManyWithoutUserInput
    patch_resource_like?: user_patch_resource_like_relationCreateNestedManyWithoutUserInput
    following?: user_follow_relationCreateNestedManyWithoutFollowingInput
    follower?: user_follow_relationCreateNestedManyWithoutFollowerInput
    patch?: patchCreateNestedManyWithoutUserInput
    patch_comment?: patch_commentCreateNestedManyWithoutUserInput
    patch_resource?: patch_resourceCreateNestedManyWithoutUserInput
    patch_character?: patch_characterCreateNestedManyWithoutUserInput
    send_message?: user_messageCreateNestedManyWithoutSenderInput
    receive_message?: user_messageCreateNestedManyWithoutRecipientInput
  }

  export type userUncheckedCreateWithoutPatch_favorite_folderInput = {
    id?: number
    name: string
    email: string
    password: string
    ip?: string
    avatar?: string
    role?: number
    status?: number
    register_time?: Date | string
    moemoepoint?: number
    bio?: string
    claimed_tasks?: userCreateclaimed_tasksInput | string[]
    enable_email_notice?: boolean
    daily_image_count?: number
    daily_check_in?: number
    daily_upload_size?: number
    last_login_time?: string
    created?: Date | string
    updated?: Date | string
    admin_log?: admin_logUncheckedCreateNestedManyWithoutUserInput
    patch_tag?: patch_tagUncheckedCreateNestedManyWithoutUserInput
    patch_comment_like?: user_patch_comment_like_relationUncheckedCreateNestedManyWithoutUserInput
    patch_resource_like?: user_patch_resource_like_relationUncheckedCreateNestedManyWithoutUserInput
    following?: user_follow_relationUncheckedCreateNestedManyWithoutFollowingInput
    follower?: user_follow_relationUncheckedCreateNestedManyWithoutFollowerInput
    patch?: patchUncheckedCreateNestedManyWithoutUserInput
    patch_comment?: patch_commentUncheckedCreateNestedManyWithoutUserInput
    patch_resource?: patch_resourceUncheckedCreateNestedManyWithoutUserInput
    patch_character?: patch_characterUncheckedCreateNestedManyWithoutUserInput
    send_message?: user_messageUncheckedCreateNestedManyWithoutSenderInput
    receive_message?: user_messageUncheckedCreateNestedManyWithoutRecipientInput
  }

  export type userCreateOrConnectWithoutPatch_favorite_folderInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutPatch_favorite_folderInput, userUncheckedCreateWithoutPatch_favorite_folderInput>
  }

  export type user_patch_favorite_folder_relationCreateWithoutFolderInput = {
    created?: Date | string
    updated?: Date | string
    patch: patchCreateNestedOneWithoutFavorite_folderInput
  }

  export type user_patch_favorite_folder_relationUncheckedCreateWithoutFolderInput = {
    id?: number
    patch_id: number
    created?: Date | string
    updated?: Date | string
  }

  export type user_patch_favorite_folder_relationCreateOrConnectWithoutFolderInput = {
    where: user_patch_favorite_folder_relationWhereUniqueInput
    create: XOR<user_patch_favorite_folder_relationCreateWithoutFolderInput, user_patch_favorite_folder_relationUncheckedCreateWithoutFolderInput>
  }

  export type user_patch_favorite_folder_relationCreateManyFolderInputEnvelope = {
    data: user_patch_favorite_folder_relationCreateManyFolderInput | user_patch_favorite_folder_relationCreateManyFolderInput[]
    skipDuplicates?: boolean
  }

  export type userUpsertWithoutPatch_favorite_folderInput = {
    update: XOR<userUpdateWithoutPatch_favorite_folderInput, userUncheckedUpdateWithoutPatch_favorite_folderInput>
    create: XOR<userCreateWithoutPatch_favorite_folderInput, userUncheckedCreateWithoutPatch_favorite_folderInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutPatch_favorite_folderInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutPatch_favorite_folderInput, userUncheckedUpdateWithoutPatch_favorite_folderInput>
  }

  export type userUpdateWithoutPatch_favorite_folderInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    ip?: StringFieldUpdateOperationsInput | string
    avatar?: StringFieldUpdateOperationsInput | string
    role?: IntFieldUpdateOperationsInput | number
    status?: IntFieldUpdateOperationsInput | number
    register_time?: DateTimeFieldUpdateOperationsInput | Date | string
    moemoepoint?: IntFieldUpdateOperationsInput | number
    bio?: StringFieldUpdateOperationsInput | string
    claimed_tasks?: userUpdateclaimed_tasksInput | string[]
    enable_email_notice?: BoolFieldUpdateOperationsInput | boolean
    daily_image_count?: IntFieldUpdateOperationsInput | number
    daily_check_in?: IntFieldUpdateOperationsInput | number
    daily_upload_size?: FloatFieldUpdateOperationsInput | number
    last_login_time?: StringFieldUpdateOperationsInput | string
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    admin_log?: admin_logUpdateManyWithoutUserNestedInput
    patch_tag?: patch_tagUpdateManyWithoutUserNestedInput
    patch_comment_like?: user_patch_comment_like_relationUpdateManyWithoutUserNestedInput
    patch_resource_like?: user_patch_resource_like_relationUpdateManyWithoutUserNestedInput
    following?: user_follow_relationUpdateManyWithoutFollowingNestedInput
    follower?: user_follow_relationUpdateManyWithoutFollowerNestedInput
    patch?: patchUpdateManyWithoutUserNestedInput
    patch_comment?: patch_commentUpdateManyWithoutUserNestedInput
    patch_resource?: patch_resourceUpdateManyWithoutUserNestedInput
    patch_character?: patch_characterUpdateManyWithoutUserNestedInput
    send_message?: user_messageUpdateManyWithoutSenderNestedInput
    receive_message?: user_messageUpdateManyWithoutRecipientNestedInput
  }

  export type userUncheckedUpdateWithoutPatch_favorite_folderInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    ip?: StringFieldUpdateOperationsInput | string
    avatar?: StringFieldUpdateOperationsInput | string
    role?: IntFieldUpdateOperationsInput | number
    status?: IntFieldUpdateOperationsInput | number
    register_time?: DateTimeFieldUpdateOperationsInput | Date | string
    moemoepoint?: IntFieldUpdateOperationsInput | number
    bio?: StringFieldUpdateOperationsInput | string
    claimed_tasks?: userUpdateclaimed_tasksInput | string[]
    enable_email_notice?: BoolFieldUpdateOperationsInput | boolean
    daily_image_count?: IntFieldUpdateOperationsInput | number
    daily_check_in?: IntFieldUpdateOperationsInput | number
    daily_upload_size?: FloatFieldUpdateOperationsInput | number
    last_login_time?: StringFieldUpdateOperationsInput | string
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    admin_log?: admin_logUncheckedUpdateManyWithoutUserNestedInput
    patch_tag?: patch_tagUncheckedUpdateManyWithoutUserNestedInput
    patch_comment_like?: user_patch_comment_like_relationUncheckedUpdateManyWithoutUserNestedInput
    patch_resource_like?: user_patch_resource_like_relationUncheckedUpdateManyWithoutUserNestedInput
    following?: user_follow_relationUncheckedUpdateManyWithoutFollowingNestedInput
    follower?: user_follow_relationUncheckedUpdateManyWithoutFollowerNestedInput
    patch?: patchUncheckedUpdateManyWithoutUserNestedInput
    patch_comment?: patch_commentUncheckedUpdateManyWithoutUserNestedInput
    patch_resource?: patch_resourceUncheckedUpdateManyWithoutUserNestedInput
    patch_character?: patch_characterUncheckedUpdateManyWithoutUserNestedInput
    send_message?: user_messageUncheckedUpdateManyWithoutSenderNestedInput
    receive_message?: user_messageUncheckedUpdateManyWithoutRecipientNestedInput
  }

  export type user_patch_favorite_folder_relationUpsertWithWhereUniqueWithoutFolderInput = {
    where: user_patch_favorite_folder_relationWhereUniqueInput
    update: XOR<user_patch_favorite_folder_relationUpdateWithoutFolderInput, user_patch_favorite_folder_relationUncheckedUpdateWithoutFolderInput>
    create: XOR<user_patch_favorite_folder_relationCreateWithoutFolderInput, user_patch_favorite_folder_relationUncheckedCreateWithoutFolderInput>
  }

  export type user_patch_favorite_folder_relationUpdateWithWhereUniqueWithoutFolderInput = {
    where: user_patch_favorite_folder_relationWhereUniqueInput
    data: XOR<user_patch_favorite_folder_relationUpdateWithoutFolderInput, user_patch_favorite_folder_relationUncheckedUpdateWithoutFolderInput>
  }

  export type user_patch_favorite_folder_relationUpdateManyWithWhereWithoutFolderInput = {
    where: user_patch_favorite_folder_relationScalarWhereInput
    data: XOR<user_patch_favorite_folder_relationUpdateManyMutationInput, user_patch_favorite_folder_relationUncheckedUpdateManyWithoutFolderInput>
  }

  export type user_patch_favorite_folder_relationScalarWhereInput = {
    AND?: user_patch_favorite_folder_relationScalarWhereInput | user_patch_favorite_folder_relationScalarWhereInput[]
    OR?: user_patch_favorite_folder_relationScalarWhereInput[]
    NOT?: user_patch_favorite_folder_relationScalarWhereInput | user_patch_favorite_folder_relationScalarWhereInput[]
    id?: IntFilter<"user_patch_favorite_folder_relation"> | number
    folder_id?: IntFilter<"user_patch_favorite_folder_relation"> | number
    patch_id?: IntFilter<"user_patch_favorite_folder_relation"> | number
    created?: DateTimeFilter<"user_patch_favorite_folder_relation"> | Date | string
    updated?: DateTimeFilter<"user_patch_favorite_folder_relation"> | Date | string
  }

  export type user_patch_favorite_folderCreateWithoutPatchInput = {
    name: string
    description?: string
    is_public?: boolean
    created?: Date | string
    updated?: Date | string
    user: userCreateNestedOneWithoutPatch_favorite_folderInput
  }

  export type user_patch_favorite_folderUncheckedCreateWithoutPatchInput = {
    id?: number
    name: string
    description?: string
    is_public?: boolean
    user_id: number
    created?: Date | string
    updated?: Date | string
  }

  export type user_patch_favorite_folderCreateOrConnectWithoutPatchInput = {
    where: user_patch_favorite_folderWhereUniqueInput
    create: XOR<user_patch_favorite_folderCreateWithoutPatchInput, user_patch_favorite_folderUncheckedCreateWithoutPatchInput>
  }

  export type patchCreateWithoutFavorite_folderInput = {
    unique_id: string
    name: string
    vndb_id?: string | null
    banner?: string
    introduction?: string
    released?: string
    content_limit?: string
    status?: number
    download?: number
    view?: number
    resource_update_time?: Date | string
    type?: patchCreatetypeInput | string[]
    language?: patchCreatelanguageInput | string[]
    engine?: patchCreateengineInput | string[]
    platform?: patchCreateplatformInput | string[]
    created?: Date | string
    updated?: Date | string
    user: userCreateNestedOneWithoutPatchInput
    alias?: patch_aliasCreateNestedManyWithoutPatchInput
    tag?: patch_tag_relationCreateNestedManyWithoutPatchInput
    resource?: patch_resourceCreateNestedManyWithoutPatchInput
    comment?: patch_commentCreateNestedManyWithoutPatchInput
    characters?: patch_characterCreateNestedManyWithoutPatchInput
  }

  export type patchUncheckedCreateWithoutFavorite_folderInput = {
    id?: number
    unique_id: string
    name: string
    vndb_id?: string | null
    banner?: string
    introduction?: string
    released?: string
    content_limit?: string
    status?: number
    download?: number
    view?: number
    resource_update_time?: Date | string
    type?: patchCreatetypeInput | string[]
    language?: patchCreatelanguageInput | string[]
    engine?: patchCreateengineInput | string[]
    platform?: patchCreateplatformInput | string[]
    user_id: number
    created?: Date | string
    updated?: Date | string
    alias?: patch_aliasUncheckedCreateNestedManyWithoutPatchInput
    tag?: patch_tag_relationUncheckedCreateNestedManyWithoutPatchInput
    resource?: patch_resourceUncheckedCreateNestedManyWithoutPatchInput
    comment?: patch_commentUncheckedCreateNestedManyWithoutPatchInput
    characters?: patch_characterUncheckedCreateNestedManyWithoutPatchInput
  }

  export type patchCreateOrConnectWithoutFavorite_folderInput = {
    where: patchWhereUniqueInput
    create: XOR<patchCreateWithoutFavorite_folderInput, patchUncheckedCreateWithoutFavorite_folderInput>
  }

  export type user_patch_favorite_folderUpsertWithoutPatchInput = {
    update: XOR<user_patch_favorite_folderUpdateWithoutPatchInput, user_patch_favorite_folderUncheckedUpdateWithoutPatchInput>
    create: XOR<user_patch_favorite_folderCreateWithoutPatchInput, user_patch_favorite_folderUncheckedCreateWithoutPatchInput>
    where?: user_patch_favorite_folderWhereInput
  }

  export type user_patch_favorite_folderUpdateToOneWithWhereWithoutPatchInput = {
    where?: user_patch_favorite_folderWhereInput
    data: XOR<user_patch_favorite_folderUpdateWithoutPatchInput, user_patch_favorite_folderUncheckedUpdateWithoutPatchInput>
  }

  export type user_patch_favorite_folderUpdateWithoutPatchInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    is_public?: BoolFieldUpdateOperationsInput | boolean
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: userUpdateOneRequiredWithoutPatch_favorite_folderNestedInput
  }

  export type user_patch_favorite_folderUncheckedUpdateWithoutPatchInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    is_public?: BoolFieldUpdateOperationsInput | boolean
    user_id?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type patchUpsertWithoutFavorite_folderInput = {
    update: XOR<patchUpdateWithoutFavorite_folderInput, patchUncheckedUpdateWithoutFavorite_folderInput>
    create: XOR<patchCreateWithoutFavorite_folderInput, patchUncheckedCreateWithoutFavorite_folderInput>
    where?: patchWhereInput
  }

  export type patchUpdateToOneWithWhereWithoutFavorite_folderInput = {
    where?: patchWhereInput
    data: XOR<patchUpdateWithoutFavorite_folderInput, patchUncheckedUpdateWithoutFavorite_folderInput>
  }

  export type patchUpdateWithoutFavorite_folderInput = {
    unique_id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    vndb_id?: NullableStringFieldUpdateOperationsInput | string | null
    banner?: StringFieldUpdateOperationsInput | string
    introduction?: StringFieldUpdateOperationsInput | string
    released?: StringFieldUpdateOperationsInput | string
    content_limit?: StringFieldUpdateOperationsInput | string
    status?: IntFieldUpdateOperationsInput | number
    download?: IntFieldUpdateOperationsInput | number
    view?: IntFieldUpdateOperationsInput | number
    resource_update_time?: DateTimeFieldUpdateOperationsInput | Date | string
    type?: patchUpdatetypeInput | string[]
    language?: patchUpdatelanguageInput | string[]
    engine?: patchUpdateengineInput | string[]
    platform?: patchUpdateplatformInput | string[]
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: userUpdateOneRequiredWithoutPatchNestedInput
    alias?: patch_aliasUpdateManyWithoutPatchNestedInput
    tag?: patch_tag_relationUpdateManyWithoutPatchNestedInput
    resource?: patch_resourceUpdateManyWithoutPatchNestedInput
    comment?: patch_commentUpdateManyWithoutPatchNestedInput
    characters?: patch_characterUpdateManyWithoutPatchNestedInput
  }

  export type patchUncheckedUpdateWithoutFavorite_folderInput = {
    id?: IntFieldUpdateOperationsInput | number
    unique_id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    vndb_id?: NullableStringFieldUpdateOperationsInput | string | null
    banner?: StringFieldUpdateOperationsInput | string
    introduction?: StringFieldUpdateOperationsInput | string
    released?: StringFieldUpdateOperationsInput | string
    content_limit?: StringFieldUpdateOperationsInput | string
    status?: IntFieldUpdateOperationsInput | number
    download?: IntFieldUpdateOperationsInput | number
    view?: IntFieldUpdateOperationsInput | number
    resource_update_time?: DateTimeFieldUpdateOperationsInput | Date | string
    type?: patchUpdatetypeInput | string[]
    language?: patchUpdatelanguageInput | string[]
    engine?: patchUpdateengineInput | string[]
    platform?: patchUpdateplatformInput | string[]
    user_id?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    alias?: patch_aliasUncheckedUpdateManyWithoutPatchNestedInput
    tag?: patch_tag_relationUncheckedUpdateManyWithoutPatchNestedInput
    resource?: patch_resourceUncheckedUpdateManyWithoutPatchNestedInput
    comment?: patch_commentUncheckedUpdateManyWithoutPatchNestedInput
    characters?: patch_characterUncheckedUpdateManyWithoutPatchNestedInput
  }

  export type userCreateWithoutPatch_comment_likeInput = {
    name: string
    email: string
    password: string
    ip?: string
    avatar?: string
    role?: number
    status?: number
    register_time?: Date | string
    moemoepoint?: number
    bio?: string
    claimed_tasks?: userCreateclaimed_tasksInput | string[]
    enable_email_notice?: boolean
    daily_image_count?: number
    daily_check_in?: number
    daily_upload_size?: number
    last_login_time?: string
    created?: Date | string
    updated?: Date | string
    admin_log?: admin_logCreateNestedManyWithoutUserInput
    patch_tag?: patch_tagCreateNestedManyWithoutUserInput
    patch_resource_like?: user_patch_resource_like_relationCreateNestedManyWithoutUserInput
    patch_favorite_folder?: user_patch_favorite_folderCreateNestedManyWithoutUserInput
    following?: user_follow_relationCreateNestedManyWithoutFollowingInput
    follower?: user_follow_relationCreateNestedManyWithoutFollowerInput
    patch?: patchCreateNestedManyWithoutUserInput
    patch_comment?: patch_commentCreateNestedManyWithoutUserInput
    patch_resource?: patch_resourceCreateNestedManyWithoutUserInput
    patch_character?: patch_characterCreateNestedManyWithoutUserInput
    send_message?: user_messageCreateNestedManyWithoutSenderInput
    receive_message?: user_messageCreateNestedManyWithoutRecipientInput
  }

  export type userUncheckedCreateWithoutPatch_comment_likeInput = {
    id?: number
    name: string
    email: string
    password: string
    ip?: string
    avatar?: string
    role?: number
    status?: number
    register_time?: Date | string
    moemoepoint?: number
    bio?: string
    claimed_tasks?: userCreateclaimed_tasksInput | string[]
    enable_email_notice?: boolean
    daily_image_count?: number
    daily_check_in?: number
    daily_upload_size?: number
    last_login_time?: string
    created?: Date | string
    updated?: Date | string
    admin_log?: admin_logUncheckedCreateNestedManyWithoutUserInput
    patch_tag?: patch_tagUncheckedCreateNestedManyWithoutUserInput
    patch_resource_like?: user_patch_resource_like_relationUncheckedCreateNestedManyWithoutUserInput
    patch_favorite_folder?: user_patch_favorite_folderUncheckedCreateNestedManyWithoutUserInput
    following?: user_follow_relationUncheckedCreateNestedManyWithoutFollowingInput
    follower?: user_follow_relationUncheckedCreateNestedManyWithoutFollowerInput
    patch?: patchUncheckedCreateNestedManyWithoutUserInput
    patch_comment?: patch_commentUncheckedCreateNestedManyWithoutUserInput
    patch_resource?: patch_resourceUncheckedCreateNestedManyWithoutUserInput
    patch_character?: patch_characterUncheckedCreateNestedManyWithoutUserInput
    send_message?: user_messageUncheckedCreateNestedManyWithoutSenderInput
    receive_message?: user_messageUncheckedCreateNestedManyWithoutRecipientInput
  }

  export type userCreateOrConnectWithoutPatch_comment_likeInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutPatch_comment_likeInput, userUncheckedCreateWithoutPatch_comment_likeInput>
  }

  export type patch_commentCreateWithoutLike_byInput = {
    content?: string
    edit?: string
    created?: Date | string
    updated?: Date | string
    reply?: patch_commentCreateNestedManyWithoutParentInput
    parent?: patch_commentCreateNestedOneWithoutReplyInput
    user: userCreateNestedOneWithoutPatch_commentInput
    patch: patchCreateNestedOneWithoutCommentInput
  }

  export type patch_commentUncheckedCreateWithoutLike_byInput = {
    id?: number
    content?: string
    edit?: string
    parent_id?: number | null
    user_id: number
    patch_id: number
    created?: Date | string
    updated?: Date | string
    reply?: patch_commentUncheckedCreateNestedManyWithoutParentInput
  }

  export type patch_commentCreateOrConnectWithoutLike_byInput = {
    where: patch_commentWhereUniqueInput
    create: XOR<patch_commentCreateWithoutLike_byInput, patch_commentUncheckedCreateWithoutLike_byInput>
  }

  export type userUpsertWithoutPatch_comment_likeInput = {
    update: XOR<userUpdateWithoutPatch_comment_likeInput, userUncheckedUpdateWithoutPatch_comment_likeInput>
    create: XOR<userCreateWithoutPatch_comment_likeInput, userUncheckedCreateWithoutPatch_comment_likeInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutPatch_comment_likeInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutPatch_comment_likeInput, userUncheckedUpdateWithoutPatch_comment_likeInput>
  }

  export type userUpdateWithoutPatch_comment_likeInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    ip?: StringFieldUpdateOperationsInput | string
    avatar?: StringFieldUpdateOperationsInput | string
    role?: IntFieldUpdateOperationsInput | number
    status?: IntFieldUpdateOperationsInput | number
    register_time?: DateTimeFieldUpdateOperationsInput | Date | string
    moemoepoint?: IntFieldUpdateOperationsInput | number
    bio?: StringFieldUpdateOperationsInput | string
    claimed_tasks?: userUpdateclaimed_tasksInput | string[]
    enable_email_notice?: BoolFieldUpdateOperationsInput | boolean
    daily_image_count?: IntFieldUpdateOperationsInput | number
    daily_check_in?: IntFieldUpdateOperationsInput | number
    daily_upload_size?: FloatFieldUpdateOperationsInput | number
    last_login_time?: StringFieldUpdateOperationsInput | string
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    admin_log?: admin_logUpdateManyWithoutUserNestedInput
    patch_tag?: patch_tagUpdateManyWithoutUserNestedInput
    patch_resource_like?: user_patch_resource_like_relationUpdateManyWithoutUserNestedInput
    patch_favorite_folder?: user_patch_favorite_folderUpdateManyWithoutUserNestedInput
    following?: user_follow_relationUpdateManyWithoutFollowingNestedInput
    follower?: user_follow_relationUpdateManyWithoutFollowerNestedInput
    patch?: patchUpdateManyWithoutUserNestedInput
    patch_comment?: patch_commentUpdateManyWithoutUserNestedInput
    patch_resource?: patch_resourceUpdateManyWithoutUserNestedInput
    patch_character?: patch_characterUpdateManyWithoutUserNestedInput
    send_message?: user_messageUpdateManyWithoutSenderNestedInput
    receive_message?: user_messageUpdateManyWithoutRecipientNestedInput
  }

  export type userUncheckedUpdateWithoutPatch_comment_likeInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    ip?: StringFieldUpdateOperationsInput | string
    avatar?: StringFieldUpdateOperationsInput | string
    role?: IntFieldUpdateOperationsInput | number
    status?: IntFieldUpdateOperationsInput | number
    register_time?: DateTimeFieldUpdateOperationsInput | Date | string
    moemoepoint?: IntFieldUpdateOperationsInput | number
    bio?: StringFieldUpdateOperationsInput | string
    claimed_tasks?: userUpdateclaimed_tasksInput | string[]
    enable_email_notice?: BoolFieldUpdateOperationsInput | boolean
    daily_image_count?: IntFieldUpdateOperationsInput | number
    daily_check_in?: IntFieldUpdateOperationsInput | number
    daily_upload_size?: FloatFieldUpdateOperationsInput | number
    last_login_time?: StringFieldUpdateOperationsInput | string
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    admin_log?: admin_logUncheckedUpdateManyWithoutUserNestedInput
    patch_tag?: patch_tagUncheckedUpdateManyWithoutUserNestedInput
    patch_resource_like?: user_patch_resource_like_relationUncheckedUpdateManyWithoutUserNestedInput
    patch_favorite_folder?: user_patch_favorite_folderUncheckedUpdateManyWithoutUserNestedInput
    following?: user_follow_relationUncheckedUpdateManyWithoutFollowingNestedInput
    follower?: user_follow_relationUncheckedUpdateManyWithoutFollowerNestedInput
    patch?: patchUncheckedUpdateManyWithoutUserNestedInput
    patch_comment?: patch_commentUncheckedUpdateManyWithoutUserNestedInput
    patch_resource?: patch_resourceUncheckedUpdateManyWithoutUserNestedInput
    patch_character?: patch_characterUncheckedUpdateManyWithoutUserNestedInput
    send_message?: user_messageUncheckedUpdateManyWithoutSenderNestedInput
    receive_message?: user_messageUncheckedUpdateManyWithoutRecipientNestedInput
  }

  export type patch_commentUpsertWithoutLike_byInput = {
    update: XOR<patch_commentUpdateWithoutLike_byInput, patch_commentUncheckedUpdateWithoutLike_byInput>
    create: XOR<patch_commentCreateWithoutLike_byInput, patch_commentUncheckedCreateWithoutLike_byInput>
    where?: patch_commentWhereInput
  }

  export type patch_commentUpdateToOneWithWhereWithoutLike_byInput = {
    where?: patch_commentWhereInput
    data: XOR<patch_commentUpdateWithoutLike_byInput, patch_commentUncheckedUpdateWithoutLike_byInput>
  }

  export type patch_commentUpdateWithoutLike_byInput = {
    content?: StringFieldUpdateOperationsInput | string
    edit?: StringFieldUpdateOperationsInput | string
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    reply?: patch_commentUpdateManyWithoutParentNestedInput
    parent?: patch_commentUpdateOneWithoutReplyNestedInput
    user?: userUpdateOneRequiredWithoutPatch_commentNestedInput
    patch?: patchUpdateOneRequiredWithoutCommentNestedInput
  }

  export type patch_commentUncheckedUpdateWithoutLike_byInput = {
    id?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    edit?: StringFieldUpdateOperationsInput | string
    parent_id?: NullableIntFieldUpdateOperationsInput | number | null
    user_id?: IntFieldUpdateOperationsInput | number
    patch_id?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    reply?: patch_commentUncheckedUpdateManyWithoutParentNestedInput
  }

  export type userCreateWithoutPatch_resource_likeInput = {
    name: string
    email: string
    password: string
    ip?: string
    avatar?: string
    role?: number
    status?: number
    register_time?: Date | string
    moemoepoint?: number
    bio?: string
    claimed_tasks?: userCreateclaimed_tasksInput | string[]
    enable_email_notice?: boolean
    daily_image_count?: number
    daily_check_in?: number
    daily_upload_size?: number
    last_login_time?: string
    created?: Date | string
    updated?: Date | string
    admin_log?: admin_logCreateNestedManyWithoutUserInput
    patch_tag?: patch_tagCreateNestedManyWithoutUserInput
    patch_comment_like?: user_patch_comment_like_relationCreateNestedManyWithoutUserInput
    patch_favorite_folder?: user_patch_favorite_folderCreateNestedManyWithoutUserInput
    following?: user_follow_relationCreateNestedManyWithoutFollowingInput
    follower?: user_follow_relationCreateNestedManyWithoutFollowerInput
    patch?: patchCreateNestedManyWithoutUserInput
    patch_comment?: patch_commentCreateNestedManyWithoutUserInput
    patch_resource?: patch_resourceCreateNestedManyWithoutUserInput
    patch_character?: patch_characterCreateNestedManyWithoutUserInput
    send_message?: user_messageCreateNestedManyWithoutSenderInput
    receive_message?: user_messageCreateNestedManyWithoutRecipientInput
  }

  export type userUncheckedCreateWithoutPatch_resource_likeInput = {
    id?: number
    name: string
    email: string
    password: string
    ip?: string
    avatar?: string
    role?: number
    status?: number
    register_time?: Date | string
    moemoepoint?: number
    bio?: string
    claimed_tasks?: userCreateclaimed_tasksInput | string[]
    enable_email_notice?: boolean
    daily_image_count?: number
    daily_check_in?: number
    daily_upload_size?: number
    last_login_time?: string
    created?: Date | string
    updated?: Date | string
    admin_log?: admin_logUncheckedCreateNestedManyWithoutUserInput
    patch_tag?: patch_tagUncheckedCreateNestedManyWithoutUserInput
    patch_comment_like?: user_patch_comment_like_relationUncheckedCreateNestedManyWithoutUserInput
    patch_favorite_folder?: user_patch_favorite_folderUncheckedCreateNestedManyWithoutUserInput
    following?: user_follow_relationUncheckedCreateNestedManyWithoutFollowingInput
    follower?: user_follow_relationUncheckedCreateNestedManyWithoutFollowerInput
    patch?: patchUncheckedCreateNestedManyWithoutUserInput
    patch_comment?: patch_commentUncheckedCreateNestedManyWithoutUserInput
    patch_resource?: patch_resourceUncheckedCreateNestedManyWithoutUserInput
    patch_character?: patch_characterUncheckedCreateNestedManyWithoutUserInput
    send_message?: user_messageUncheckedCreateNestedManyWithoutSenderInput
    receive_message?: user_messageUncheckedCreateNestedManyWithoutRecipientInput
  }

  export type userCreateOrConnectWithoutPatch_resource_likeInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutPatch_resource_likeInput, userUncheckedCreateWithoutPatch_resource_likeInput>
  }

  export type patch_resourceCreateWithoutLike_byInput = {
    storage: string
    section: string
    name?: string
    size?: string
    code?: string
    password?: string
    note?: string
    hash?: string
    content?: string
    type?: patch_resourceCreatetypeInput | string[]
    language?: patch_resourceCreatelanguageInput | string[]
    platform?: patch_resourceCreateplatformInput | string[]
    download?: number
    status?: number
    created?: Date | string
    updated?: Date | string
    user: userCreateNestedOneWithoutPatch_resourceInput
    patch: patchCreateNestedOneWithoutResourceInput
  }

  export type patch_resourceUncheckedCreateWithoutLike_byInput = {
    id?: number
    storage: string
    section: string
    name?: string
    size?: string
    code?: string
    password?: string
    note?: string
    hash?: string
    content?: string
    type?: patch_resourceCreatetypeInput | string[]
    language?: patch_resourceCreatelanguageInput | string[]
    platform?: patch_resourceCreateplatformInput | string[]
    download?: number
    status?: number
    user_id: number
    patch_id: number
    created?: Date | string
    updated?: Date | string
  }

  export type patch_resourceCreateOrConnectWithoutLike_byInput = {
    where: patch_resourceWhereUniqueInput
    create: XOR<patch_resourceCreateWithoutLike_byInput, patch_resourceUncheckedCreateWithoutLike_byInput>
  }

  export type userUpsertWithoutPatch_resource_likeInput = {
    update: XOR<userUpdateWithoutPatch_resource_likeInput, userUncheckedUpdateWithoutPatch_resource_likeInput>
    create: XOR<userCreateWithoutPatch_resource_likeInput, userUncheckedCreateWithoutPatch_resource_likeInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutPatch_resource_likeInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutPatch_resource_likeInput, userUncheckedUpdateWithoutPatch_resource_likeInput>
  }

  export type userUpdateWithoutPatch_resource_likeInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    ip?: StringFieldUpdateOperationsInput | string
    avatar?: StringFieldUpdateOperationsInput | string
    role?: IntFieldUpdateOperationsInput | number
    status?: IntFieldUpdateOperationsInput | number
    register_time?: DateTimeFieldUpdateOperationsInput | Date | string
    moemoepoint?: IntFieldUpdateOperationsInput | number
    bio?: StringFieldUpdateOperationsInput | string
    claimed_tasks?: userUpdateclaimed_tasksInput | string[]
    enable_email_notice?: BoolFieldUpdateOperationsInput | boolean
    daily_image_count?: IntFieldUpdateOperationsInput | number
    daily_check_in?: IntFieldUpdateOperationsInput | number
    daily_upload_size?: FloatFieldUpdateOperationsInput | number
    last_login_time?: StringFieldUpdateOperationsInput | string
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    admin_log?: admin_logUpdateManyWithoutUserNestedInput
    patch_tag?: patch_tagUpdateManyWithoutUserNestedInput
    patch_comment_like?: user_patch_comment_like_relationUpdateManyWithoutUserNestedInput
    patch_favorite_folder?: user_patch_favorite_folderUpdateManyWithoutUserNestedInput
    following?: user_follow_relationUpdateManyWithoutFollowingNestedInput
    follower?: user_follow_relationUpdateManyWithoutFollowerNestedInput
    patch?: patchUpdateManyWithoutUserNestedInput
    patch_comment?: patch_commentUpdateManyWithoutUserNestedInput
    patch_resource?: patch_resourceUpdateManyWithoutUserNestedInput
    patch_character?: patch_characterUpdateManyWithoutUserNestedInput
    send_message?: user_messageUpdateManyWithoutSenderNestedInput
    receive_message?: user_messageUpdateManyWithoutRecipientNestedInput
  }

  export type userUncheckedUpdateWithoutPatch_resource_likeInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    ip?: StringFieldUpdateOperationsInput | string
    avatar?: StringFieldUpdateOperationsInput | string
    role?: IntFieldUpdateOperationsInput | number
    status?: IntFieldUpdateOperationsInput | number
    register_time?: DateTimeFieldUpdateOperationsInput | Date | string
    moemoepoint?: IntFieldUpdateOperationsInput | number
    bio?: StringFieldUpdateOperationsInput | string
    claimed_tasks?: userUpdateclaimed_tasksInput | string[]
    enable_email_notice?: BoolFieldUpdateOperationsInput | boolean
    daily_image_count?: IntFieldUpdateOperationsInput | number
    daily_check_in?: IntFieldUpdateOperationsInput | number
    daily_upload_size?: FloatFieldUpdateOperationsInput | number
    last_login_time?: StringFieldUpdateOperationsInput | string
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    admin_log?: admin_logUncheckedUpdateManyWithoutUserNestedInput
    patch_tag?: patch_tagUncheckedUpdateManyWithoutUserNestedInput
    patch_comment_like?: user_patch_comment_like_relationUncheckedUpdateManyWithoutUserNestedInput
    patch_favorite_folder?: user_patch_favorite_folderUncheckedUpdateManyWithoutUserNestedInput
    following?: user_follow_relationUncheckedUpdateManyWithoutFollowingNestedInput
    follower?: user_follow_relationUncheckedUpdateManyWithoutFollowerNestedInput
    patch?: patchUncheckedUpdateManyWithoutUserNestedInput
    patch_comment?: patch_commentUncheckedUpdateManyWithoutUserNestedInput
    patch_resource?: patch_resourceUncheckedUpdateManyWithoutUserNestedInput
    patch_character?: patch_characterUncheckedUpdateManyWithoutUserNestedInput
    send_message?: user_messageUncheckedUpdateManyWithoutSenderNestedInput
    receive_message?: user_messageUncheckedUpdateManyWithoutRecipientNestedInput
  }

  export type patch_resourceUpsertWithoutLike_byInput = {
    update: XOR<patch_resourceUpdateWithoutLike_byInput, patch_resourceUncheckedUpdateWithoutLike_byInput>
    create: XOR<patch_resourceCreateWithoutLike_byInput, patch_resourceUncheckedCreateWithoutLike_byInput>
    where?: patch_resourceWhereInput
  }

  export type patch_resourceUpdateToOneWithWhereWithoutLike_byInput = {
    where?: patch_resourceWhereInput
    data: XOR<patch_resourceUpdateWithoutLike_byInput, patch_resourceUncheckedUpdateWithoutLike_byInput>
  }

  export type patch_resourceUpdateWithoutLike_byInput = {
    storage?: StringFieldUpdateOperationsInput | string
    section?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    size?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    note?: StringFieldUpdateOperationsInput | string
    hash?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    type?: patch_resourceUpdatetypeInput | string[]
    language?: patch_resourceUpdatelanguageInput | string[]
    platform?: patch_resourceUpdateplatformInput | string[]
    download?: IntFieldUpdateOperationsInput | number
    status?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: userUpdateOneRequiredWithoutPatch_resourceNestedInput
    patch?: patchUpdateOneRequiredWithoutResourceNestedInput
  }

  export type patch_resourceUncheckedUpdateWithoutLike_byInput = {
    id?: IntFieldUpdateOperationsInput | number
    storage?: StringFieldUpdateOperationsInput | string
    section?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    size?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    note?: StringFieldUpdateOperationsInput | string
    hash?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    type?: patch_resourceUpdatetypeInput | string[]
    language?: patch_resourceUpdatelanguageInput | string[]
    platform?: patch_resourceUpdateplatformInput | string[]
    download?: IntFieldUpdateOperationsInput | number
    status?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    patch_id?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type userCreateWithoutPatchInput = {
    name: string
    email: string
    password: string
    ip?: string
    avatar?: string
    role?: number
    status?: number
    register_time?: Date | string
    moemoepoint?: number
    bio?: string
    claimed_tasks?: userCreateclaimed_tasksInput | string[]
    enable_email_notice?: boolean
    daily_image_count?: number
    daily_check_in?: number
    daily_upload_size?: number
    last_login_time?: string
    created?: Date | string
    updated?: Date | string
    admin_log?: admin_logCreateNestedManyWithoutUserInput
    patch_tag?: patch_tagCreateNestedManyWithoutUserInput
    patch_comment_like?: user_patch_comment_like_relationCreateNestedManyWithoutUserInput
    patch_resource_like?: user_patch_resource_like_relationCreateNestedManyWithoutUserInput
    patch_favorite_folder?: user_patch_favorite_folderCreateNestedManyWithoutUserInput
    following?: user_follow_relationCreateNestedManyWithoutFollowingInput
    follower?: user_follow_relationCreateNestedManyWithoutFollowerInput
    patch_comment?: patch_commentCreateNestedManyWithoutUserInput
    patch_resource?: patch_resourceCreateNestedManyWithoutUserInput
    patch_character?: patch_characterCreateNestedManyWithoutUserInput
    send_message?: user_messageCreateNestedManyWithoutSenderInput
    receive_message?: user_messageCreateNestedManyWithoutRecipientInput
  }

  export type userUncheckedCreateWithoutPatchInput = {
    id?: number
    name: string
    email: string
    password: string
    ip?: string
    avatar?: string
    role?: number
    status?: number
    register_time?: Date | string
    moemoepoint?: number
    bio?: string
    claimed_tasks?: userCreateclaimed_tasksInput | string[]
    enable_email_notice?: boolean
    daily_image_count?: number
    daily_check_in?: number
    daily_upload_size?: number
    last_login_time?: string
    created?: Date | string
    updated?: Date | string
    admin_log?: admin_logUncheckedCreateNestedManyWithoutUserInput
    patch_tag?: patch_tagUncheckedCreateNestedManyWithoutUserInput
    patch_comment_like?: user_patch_comment_like_relationUncheckedCreateNestedManyWithoutUserInput
    patch_resource_like?: user_patch_resource_like_relationUncheckedCreateNestedManyWithoutUserInput
    patch_favorite_folder?: user_patch_favorite_folderUncheckedCreateNestedManyWithoutUserInput
    following?: user_follow_relationUncheckedCreateNestedManyWithoutFollowingInput
    follower?: user_follow_relationUncheckedCreateNestedManyWithoutFollowerInput
    patch_comment?: patch_commentUncheckedCreateNestedManyWithoutUserInput
    patch_resource?: patch_resourceUncheckedCreateNestedManyWithoutUserInput
    patch_character?: patch_characterUncheckedCreateNestedManyWithoutUserInput
    send_message?: user_messageUncheckedCreateNestedManyWithoutSenderInput
    receive_message?: user_messageUncheckedCreateNestedManyWithoutRecipientInput
  }

  export type userCreateOrConnectWithoutPatchInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutPatchInput, userUncheckedCreateWithoutPatchInput>
  }

  export type patch_aliasCreateWithoutPatchInput = {
    name: string
    created?: Date | string
    updated?: Date | string
  }

  export type patch_aliasUncheckedCreateWithoutPatchInput = {
    id?: number
    name: string
    created?: Date | string
    updated?: Date | string
  }

  export type patch_aliasCreateOrConnectWithoutPatchInput = {
    where: patch_aliasWhereUniqueInput
    create: XOR<patch_aliasCreateWithoutPatchInput, patch_aliasUncheckedCreateWithoutPatchInput>
  }

  export type patch_aliasCreateManyPatchInputEnvelope = {
    data: patch_aliasCreateManyPatchInput | patch_aliasCreateManyPatchInput[]
    skipDuplicates?: boolean
  }

  export type patch_tag_relationCreateWithoutPatchInput = {
    created?: Date | string
    updated?: Date | string
    tag: patch_tagCreateNestedOneWithoutPatch_relationInput
  }

  export type patch_tag_relationUncheckedCreateWithoutPatchInput = {
    id?: number
    tag_id: number
    created?: Date | string
    updated?: Date | string
  }

  export type patch_tag_relationCreateOrConnectWithoutPatchInput = {
    where: patch_tag_relationWhereUniqueInput
    create: XOR<patch_tag_relationCreateWithoutPatchInput, patch_tag_relationUncheckedCreateWithoutPatchInput>
  }

  export type patch_tag_relationCreateManyPatchInputEnvelope = {
    data: patch_tag_relationCreateManyPatchInput | patch_tag_relationCreateManyPatchInput[]
    skipDuplicates?: boolean
  }

  export type user_patch_favorite_folder_relationCreateWithoutPatchInput = {
    created?: Date | string
    updated?: Date | string
    folder: user_patch_favorite_folderCreateNestedOneWithoutPatchInput
  }

  export type user_patch_favorite_folder_relationUncheckedCreateWithoutPatchInput = {
    id?: number
    folder_id: number
    created?: Date | string
    updated?: Date | string
  }

  export type user_patch_favorite_folder_relationCreateOrConnectWithoutPatchInput = {
    where: user_patch_favorite_folder_relationWhereUniqueInput
    create: XOR<user_patch_favorite_folder_relationCreateWithoutPatchInput, user_patch_favorite_folder_relationUncheckedCreateWithoutPatchInput>
  }

  export type user_patch_favorite_folder_relationCreateManyPatchInputEnvelope = {
    data: user_patch_favorite_folder_relationCreateManyPatchInput | user_patch_favorite_folder_relationCreateManyPatchInput[]
    skipDuplicates?: boolean
  }

  export type patch_resourceCreateWithoutPatchInput = {
    storage: string
    section: string
    name?: string
    size?: string
    code?: string
    password?: string
    note?: string
    hash?: string
    content?: string
    type?: patch_resourceCreatetypeInput | string[]
    language?: patch_resourceCreatelanguageInput | string[]
    platform?: patch_resourceCreateplatformInput | string[]
    download?: number
    status?: number
    created?: Date | string
    updated?: Date | string
    like_by?: user_patch_resource_like_relationCreateNestedManyWithoutResourceInput
    user: userCreateNestedOneWithoutPatch_resourceInput
  }

  export type patch_resourceUncheckedCreateWithoutPatchInput = {
    id?: number
    storage: string
    section: string
    name?: string
    size?: string
    code?: string
    password?: string
    note?: string
    hash?: string
    content?: string
    type?: patch_resourceCreatetypeInput | string[]
    language?: patch_resourceCreatelanguageInput | string[]
    platform?: patch_resourceCreateplatformInput | string[]
    download?: number
    status?: number
    user_id: number
    created?: Date | string
    updated?: Date | string
    like_by?: user_patch_resource_like_relationUncheckedCreateNestedManyWithoutResourceInput
  }

  export type patch_resourceCreateOrConnectWithoutPatchInput = {
    where: patch_resourceWhereUniqueInput
    create: XOR<patch_resourceCreateWithoutPatchInput, patch_resourceUncheckedCreateWithoutPatchInput>
  }

  export type patch_resourceCreateManyPatchInputEnvelope = {
    data: patch_resourceCreateManyPatchInput | patch_resourceCreateManyPatchInput[]
    skipDuplicates?: boolean
  }

  export type patch_commentCreateWithoutPatchInput = {
    content?: string
    edit?: string
    created?: Date | string
    updated?: Date | string
    like_by?: user_patch_comment_like_relationCreateNestedManyWithoutCommentInput
    reply?: patch_commentCreateNestedManyWithoutParentInput
    parent?: patch_commentCreateNestedOneWithoutReplyInput
    user: userCreateNestedOneWithoutPatch_commentInput
  }

  export type patch_commentUncheckedCreateWithoutPatchInput = {
    id?: number
    content?: string
    edit?: string
    parent_id?: number | null
    user_id: number
    created?: Date | string
    updated?: Date | string
    like_by?: user_patch_comment_like_relationUncheckedCreateNestedManyWithoutCommentInput
    reply?: patch_commentUncheckedCreateNestedManyWithoutParentInput
  }

  export type patch_commentCreateOrConnectWithoutPatchInput = {
    where: patch_commentWhereUniqueInput
    create: XOR<patch_commentCreateWithoutPatchInput, patch_commentUncheckedCreateWithoutPatchInput>
  }

  export type patch_commentCreateManyPatchInputEnvelope = {
    data: patch_commentCreateManyPatchInput | patch_commentCreateManyPatchInput[]
    skipDuplicates?: boolean
  }

  export type patch_characterCreateWithoutPatchInput = {
    name: string
    image: string
    description?: string
    status?: number
    traits?: patch_characterCreatetraitsInput | string[]
    voice_actor?: string
    alias?: patch_characterCreatealiasInput | string[]
    age?: string
    height?: string
    birthday?: string
    blood_type?: string
    three_sizes?: string
    hobby?: patch_characterCreatehobbyInput | string[]
    favorite?: patch_characterCreatefavoriteInput | string[]
    role_type?: string
    personality?: patch_characterCreatepersonalityInput | string[]
    relationship?: string
    is_latest?: boolean
    created?: Date | string
    updated?: Date | string
    original?: patch_characterCreateNestedOneWithoutNew_versionsInput
    new_versions?: patch_characterCreateNestedManyWithoutOriginalInput
    user: userCreateNestedOneWithoutPatch_characterInput
  }

  export type patch_characterUncheckedCreateWithoutPatchInput = {
    id?: number
    name: string
    image: string
    description?: string
    status?: number
    traits?: patch_characterCreatetraitsInput | string[]
    voice_actor?: string
    alias?: patch_characterCreatealiasInput | string[]
    age?: string
    height?: string
    birthday?: string
    blood_type?: string
    three_sizes?: string
    hobby?: patch_characterCreatehobbyInput | string[]
    favorite?: patch_characterCreatefavoriteInput | string[]
    role_type?: string
    personality?: patch_characterCreatepersonalityInput | string[]
    relationship?: string
    is_latest?: boolean
    original_id?: number | null
    user_id: number
    created?: Date | string
    updated?: Date | string
    new_versions?: patch_characterUncheckedCreateNestedManyWithoutOriginalInput
  }

  export type patch_characterCreateOrConnectWithoutPatchInput = {
    where: patch_characterWhereUniqueInput
    create: XOR<patch_characterCreateWithoutPatchInput, patch_characterUncheckedCreateWithoutPatchInput>
  }

  export type patch_characterCreateManyPatchInputEnvelope = {
    data: patch_characterCreateManyPatchInput | patch_characterCreateManyPatchInput[]
    skipDuplicates?: boolean
  }

  export type userUpsertWithoutPatchInput = {
    update: XOR<userUpdateWithoutPatchInput, userUncheckedUpdateWithoutPatchInput>
    create: XOR<userCreateWithoutPatchInput, userUncheckedCreateWithoutPatchInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutPatchInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutPatchInput, userUncheckedUpdateWithoutPatchInput>
  }

  export type userUpdateWithoutPatchInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    ip?: StringFieldUpdateOperationsInput | string
    avatar?: StringFieldUpdateOperationsInput | string
    role?: IntFieldUpdateOperationsInput | number
    status?: IntFieldUpdateOperationsInput | number
    register_time?: DateTimeFieldUpdateOperationsInput | Date | string
    moemoepoint?: IntFieldUpdateOperationsInput | number
    bio?: StringFieldUpdateOperationsInput | string
    claimed_tasks?: userUpdateclaimed_tasksInput | string[]
    enable_email_notice?: BoolFieldUpdateOperationsInput | boolean
    daily_image_count?: IntFieldUpdateOperationsInput | number
    daily_check_in?: IntFieldUpdateOperationsInput | number
    daily_upload_size?: FloatFieldUpdateOperationsInput | number
    last_login_time?: StringFieldUpdateOperationsInput | string
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    admin_log?: admin_logUpdateManyWithoutUserNestedInput
    patch_tag?: patch_tagUpdateManyWithoutUserNestedInput
    patch_comment_like?: user_patch_comment_like_relationUpdateManyWithoutUserNestedInput
    patch_resource_like?: user_patch_resource_like_relationUpdateManyWithoutUserNestedInput
    patch_favorite_folder?: user_patch_favorite_folderUpdateManyWithoutUserNestedInput
    following?: user_follow_relationUpdateManyWithoutFollowingNestedInput
    follower?: user_follow_relationUpdateManyWithoutFollowerNestedInput
    patch_comment?: patch_commentUpdateManyWithoutUserNestedInput
    patch_resource?: patch_resourceUpdateManyWithoutUserNestedInput
    patch_character?: patch_characterUpdateManyWithoutUserNestedInput
    send_message?: user_messageUpdateManyWithoutSenderNestedInput
    receive_message?: user_messageUpdateManyWithoutRecipientNestedInput
  }

  export type userUncheckedUpdateWithoutPatchInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    ip?: StringFieldUpdateOperationsInput | string
    avatar?: StringFieldUpdateOperationsInput | string
    role?: IntFieldUpdateOperationsInput | number
    status?: IntFieldUpdateOperationsInput | number
    register_time?: DateTimeFieldUpdateOperationsInput | Date | string
    moemoepoint?: IntFieldUpdateOperationsInput | number
    bio?: StringFieldUpdateOperationsInput | string
    claimed_tasks?: userUpdateclaimed_tasksInput | string[]
    enable_email_notice?: BoolFieldUpdateOperationsInput | boolean
    daily_image_count?: IntFieldUpdateOperationsInput | number
    daily_check_in?: IntFieldUpdateOperationsInput | number
    daily_upload_size?: FloatFieldUpdateOperationsInput | number
    last_login_time?: StringFieldUpdateOperationsInput | string
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    admin_log?: admin_logUncheckedUpdateManyWithoutUserNestedInput
    patch_tag?: patch_tagUncheckedUpdateManyWithoutUserNestedInput
    patch_comment_like?: user_patch_comment_like_relationUncheckedUpdateManyWithoutUserNestedInput
    patch_resource_like?: user_patch_resource_like_relationUncheckedUpdateManyWithoutUserNestedInput
    patch_favorite_folder?: user_patch_favorite_folderUncheckedUpdateManyWithoutUserNestedInput
    following?: user_follow_relationUncheckedUpdateManyWithoutFollowingNestedInput
    follower?: user_follow_relationUncheckedUpdateManyWithoutFollowerNestedInput
    patch_comment?: patch_commentUncheckedUpdateManyWithoutUserNestedInput
    patch_resource?: patch_resourceUncheckedUpdateManyWithoutUserNestedInput
    patch_character?: patch_characterUncheckedUpdateManyWithoutUserNestedInput
    send_message?: user_messageUncheckedUpdateManyWithoutSenderNestedInput
    receive_message?: user_messageUncheckedUpdateManyWithoutRecipientNestedInput
  }

  export type patch_aliasUpsertWithWhereUniqueWithoutPatchInput = {
    where: patch_aliasWhereUniqueInput
    update: XOR<patch_aliasUpdateWithoutPatchInput, patch_aliasUncheckedUpdateWithoutPatchInput>
    create: XOR<patch_aliasCreateWithoutPatchInput, patch_aliasUncheckedCreateWithoutPatchInput>
  }

  export type patch_aliasUpdateWithWhereUniqueWithoutPatchInput = {
    where: patch_aliasWhereUniqueInput
    data: XOR<patch_aliasUpdateWithoutPatchInput, patch_aliasUncheckedUpdateWithoutPatchInput>
  }

  export type patch_aliasUpdateManyWithWhereWithoutPatchInput = {
    where: patch_aliasScalarWhereInput
    data: XOR<patch_aliasUpdateManyMutationInput, patch_aliasUncheckedUpdateManyWithoutPatchInput>
  }

  export type patch_aliasScalarWhereInput = {
    AND?: patch_aliasScalarWhereInput | patch_aliasScalarWhereInput[]
    OR?: patch_aliasScalarWhereInput[]
    NOT?: patch_aliasScalarWhereInput | patch_aliasScalarWhereInput[]
    id?: IntFilter<"patch_alias"> | number
    name?: StringFilter<"patch_alias"> | string
    patch_id?: IntFilter<"patch_alias"> | number
    created?: DateTimeFilter<"patch_alias"> | Date | string
    updated?: DateTimeFilter<"patch_alias"> | Date | string
  }

  export type patch_tag_relationUpsertWithWhereUniqueWithoutPatchInput = {
    where: patch_tag_relationWhereUniqueInput
    update: XOR<patch_tag_relationUpdateWithoutPatchInput, patch_tag_relationUncheckedUpdateWithoutPatchInput>
    create: XOR<patch_tag_relationCreateWithoutPatchInput, patch_tag_relationUncheckedCreateWithoutPatchInput>
  }

  export type patch_tag_relationUpdateWithWhereUniqueWithoutPatchInput = {
    where: patch_tag_relationWhereUniqueInput
    data: XOR<patch_tag_relationUpdateWithoutPatchInput, patch_tag_relationUncheckedUpdateWithoutPatchInput>
  }

  export type patch_tag_relationUpdateManyWithWhereWithoutPatchInput = {
    where: patch_tag_relationScalarWhereInput
    data: XOR<patch_tag_relationUpdateManyMutationInput, patch_tag_relationUncheckedUpdateManyWithoutPatchInput>
  }

  export type patch_tag_relationScalarWhereInput = {
    AND?: patch_tag_relationScalarWhereInput | patch_tag_relationScalarWhereInput[]
    OR?: patch_tag_relationScalarWhereInput[]
    NOT?: patch_tag_relationScalarWhereInput | patch_tag_relationScalarWhereInput[]
    id?: IntFilter<"patch_tag_relation"> | number
    patch_id?: IntFilter<"patch_tag_relation"> | number
    tag_id?: IntFilter<"patch_tag_relation"> | number
    created?: DateTimeFilter<"patch_tag_relation"> | Date | string
    updated?: DateTimeFilter<"patch_tag_relation"> | Date | string
  }

  export type user_patch_favorite_folder_relationUpsertWithWhereUniqueWithoutPatchInput = {
    where: user_patch_favorite_folder_relationWhereUniqueInput
    update: XOR<user_patch_favorite_folder_relationUpdateWithoutPatchInput, user_patch_favorite_folder_relationUncheckedUpdateWithoutPatchInput>
    create: XOR<user_patch_favorite_folder_relationCreateWithoutPatchInput, user_patch_favorite_folder_relationUncheckedCreateWithoutPatchInput>
  }

  export type user_patch_favorite_folder_relationUpdateWithWhereUniqueWithoutPatchInput = {
    where: user_patch_favorite_folder_relationWhereUniqueInput
    data: XOR<user_patch_favorite_folder_relationUpdateWithoutPatchInput, user_patch_favorite_folder_relationUncheckedUpdateWithoutPatchInput>
  }

  export type user_patch_favorite_folder_relationUpdateManyWithWhereWithoutPatchInput = {
    where: user_patch_favorite_folder_relationScalarWhereInput
    data: XOR<user_patch_favorite_folder_relationUpdateManyMutationInput, user_patch_favorite_folder_relationUncheckedUpdateManyWithoutPatchInput>
  }

  export type patch_resourceUpsertWithWhereUniqueWithoutPatchInput = {
    where: patch_resourceWhereUniqueInput
    update: XOR<patch_resourceUpdateWithoutPatchInput, patch_resourceUncheckedUpdateWithoutPatchInput>
    create: XOR<patch_resourceCreateWithoutPatchInput, patch_resourceUncheckedCreateWithoutPatchInput>
  }

  export type patch_resourceUpdateWithWhereUniqueWithoutPatchInput = {
    where: patch_resourceWhereUniqueInput
    data: XOR<patch_resourceUpdateWithoutPatchInput, patch_resourceUncheckedUpdateWithoutPatchInput>
  }

  export type patch_resourceUpdateManyWithWhereWithoutPatchInput = {
    where: patch_resourceScalarWhereInput
    data: XOR<patch_resourceUpdateManyMutationInput, patch_resourceUncheckedUpdateManyWithoutPatchInput>
  }

  export type patch_commentUpsertWithWhereUniqueWithoutPatchInput = {
    where: patch_commentWhereUniqueInput
    update: XOR<patch_commentUpdateWithoutPatchInput, patch_commentUncheckedUpdateWithoutPatchInput>
    create: XOR<patch_commentCreateWithoutPatchInput, patch_commentUncheckedCreateWithoutPatchInput>
  }

  export type patch_commentUpdateWithWhereUniqueWithoutPatchInput = {
    where: patch_commentWhereUniqueInput
    data: XOR<patch_commentUpdateWithoutPatchInput, patch_commentUncheckedUpdateWithoutPatchInput>
  }

  export type patch_commentUpdateManyWithWhereWithoutPatchInput = {
    where: patch_commentScalarWhereInput
    data: XOR<patch_commentUpdateManyMutationInput, patch_commentUncheckedUpdateManyWithoutPatchInput>
  }

  export type patch_characterUpsertWithWhereUniqueWithoutPatchInput = {
    where: patch_characterWhereUniqueInput
    update: XOR<patch_characterUpdateWithoutPatchInput, patch_characterUncheckedUpdateWithoutPatchInput>
    create: XOR<patch_characterCreateWithoutPatchInput, patch_characterUncheckedCreateWithoutPatchInput>
  }

  export type patch_characterUpdateWithWhereUniqueWithoutPatchInput = {
    where: patch_characterWhereUniqueInput
    data: XOR<patch_characterUpdateWithoutPatchInput, patch_characterUncheckedUpdateWithoutPatchInput>
  }

  export type patch_characterUpdateManyWithWhereWithoutPatchInput = {
    where: patch_characterScalarWhereInput
    data: XOR<patch_characterUpdateManyMutationInput, patch_characterUncheckedUpdateManyWithoutPatchInput>
  }

  export type patchCreateWithoutAliasInput = {
    unique_id: string
    name: string
    vndb_id?: string | null
    banner?: string
    introduction?: string
    released?: string
    content_limit?: string
    status?: number
    download?: number
    view?: number
    resource_update_time?: Date | string
    type?: patchCreatetypeInput | string[]
    language?: patchCreatelanguageInput | string[]
    engine?: patchCreateengineInput | string[]
    platform?: patchCreateplatformInput | string[]
    created?: Date | string
    updated?: Date | string
    user: userCreateNestedOneWithoutPatchInput
    tag?: patch_tag_relationCreateNestedManyWithoutPatchInput
    favorite_folder?: user_patch_favorite_folder_relationCreateNestedManyWithoutPatchInput
    resource?: patch_resourceCreateNestedManyWithoutPatchInput
    comment?: patch_commentCreateNestedManyWithoutPatchInput
    characters?: patch_characterCreateNestedManyWithoutPatchInput
  }

  export type patchUncheckedCreateWithoutAliasInput = {
    id?: number
    unique_id: string
    name: string
    vndb_id?: string | null
    banner?: string
    introduction?: string
    released?: string
    content_limit?: string
    status?: number
    download?: number
    view?: number
    resource_update_time?: Date | string
    type?: patchCreatetypeInput | string[]
    language?: patchCreatelanguageInput | string[]
    engine?: patchCreateengineInput | string[]
    platform?: patchCreateplatformInput | string[]
    user_id: number
    created?: Date | string
    updated?: Date | string
    tag?: patch_tag_relationUncheckedCreateNestedManyWithoutPatchInput
    favorite_folder?: user_patch_favorite_folder_relationUncheckedCreateNestedManyWithoutPatchInput
    resource?: patch_resourceUncheckedCreateNestedManyWithoutPatchInput
    comment?: patch_commentUncheckedCreateNestedManyWithoutPatchInput
    characters?: patch_characterUncheckedCreateNestedManyWithoutPatchInput
  }

  export type patchCreateOrConnectWithoutAliasInput = {
    where: patchWhereUniqueInput
    create: XOR<patchCreateWithoutAliasInput, patchUncheckedCreateWithoutAliasInput>
  }

  export type patchUpsertWithoutAliasInput = {
    update: XOR<patchUpdateWithoutAliasInput, patchUncheckedUpdateWithoutAliasInput>
    create: XOR<patchCreateWithoutAliasInput, patchUncheckedCreateWithoutAliasInput>
    where?: patchWhereInput
  }

  export type patchUpdateToOneWithWhereWithoutAliasInput = {
    where?: patchWhereInput
    data: XOR<patchUpdateWithoutAliasInput, patchUncheckedUpdateWithoutAliasInput>
  }

  export type patchUpdateWithoutAliasInput = {
    unique_id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    vndb_id?: NullableStringFieldUpdateOperationsInput | string | null
    banner?: StringFieldUpdateOperationsInput | string
    introduction?: StringFieldUpdateOperationsInput | string
    released?: StringFieldUpdateOperationsInput | string
    content_limit?: StringFieldUpdateOperationsInput | string
    status?: IntFieldUpdateOperationsInput | number
    download?: IntFieldUpdateOperationsInput | number
    view?: IntFieldUpdateOperationsInput | number
    resource_update_time?: DateTimeFieldUpdateOperationsInput | Date | string
    type?: patchUpdatetypeInput | string[]
    language?: patchUpdatelanguageInput | string[]
    engine?: patchUpdateengineInput | string[]
    platform?: patchUpdateplatformInput | string[]
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: userUpdateOneRequiredWithoutPatchNestedInput
    tag?: patch_tag_relationUpdateManyWithoutPatchNestedInput
    favorite_folder?: user_patch_favorite_folder_relationUpdateManyWithoutPatchNestedInput
    resource?: patch_resourceUpdateManyWithoutPatchNestedInput
    comment?: patch_commentUpdateManyWithoutPatchNestedInput
    characters?: patch_characterUpdateManyWithoutPatchNestedInput
  }

  export type patchUncheckedUpdateWithoutAliasInput = {
    id?: IntFieldUpdateOperationsInput | number
    unique_id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    vndb_id?: NullableStringFieldUpdateOperationsInput | string | null
    banner?: StringFieldUpdateOperationsInput | string
    introduction?: StringFieldUpdateOperationsInput | string
    released?: StringFieldUpdateOperationsInput | string
    content_limit?: StringFieldUpdateOperationsInput | string
    status?: IntFieldUpdateOperationsInput | number
    download?: IntFieldUpdateOperationsInput | number
    view?: IntFieldUpdateOperationsInput | number
    resource_update_time?: DateTimeFieldUpdateOperationsInput | Date | string
    type?: patchUpdatetypeInput | string[]
    language?: patchUpdatelanguageInput | string[]
    engine?: patchUpdateengineInput | string[]
    platform?: patchUpdateplatformInput | string[]
    user_id?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    tag?: patch_tag_relationUncheckedUpdateManyWithoutPatchNestedInput
    favorite_folder?: user_patch_favorite_folder_relationUncheckedUpdateManyWithoutPatchNestedInput
    resource?: patch_resourceUncheckedUpdateManyWithoutPatchNestedInput
    comment?: patch_commentUncheckedUpdateManyWithoutPatchNestedInput
    characters?: patch_characterUncheckedUpdateManyWithoutPatchNestedInput
  }

  export type patch_tag_relationCreateWithoutTagInput = {
    created?: Date | string
    updated?: Date | string
    patch: patchCreateNestedOneWithoutTagInput
  }

  export type patch_tag_relationUncheckedCreateWithoutTagInput = {
    id?: number
    patch_id: number
    created?: Date | string
    updated?: Date | string
  }

  export type patch_tag_relationCreateOrConnectWithoutTagInput = {
    where: patch_tag_relationWhereUniqueInput
    create: XOR<patch_tag_relationCreateWithoutTagInput, patch_tag_relationUncheckedCreateWithoutTagInput>
  }

  export type patch_tag_relationCreateManyTagInputEnvelope = {
    data: patch_tag_relationCreateManyTagInput | patch_tag_relationCreateManyTagInput[]
    skipDuplicates?: boolean
  }

  export type userCreateWithoutPatch_tagInput = {
    name: string
    email: string
    password: string
    ip?: string
    avatar?: string
    role?: number
    status?: number
    register_time?: Date | string
    moemoepoint?: number
    bio?: string
    claimed_tasks?: userCreateclaimed_tasksInput | string[]
    enable_email_notice?: boolean
    daily_image_count?: number
    daily_check_in?: number
    daily_upload_size?: number
    last_login_time?: string
    created?: Date | string
    updated?: Date | string
    admin_log?: admin_logCreateNestedManyWithoutUserInput
    patch_comment_like?: user_patch_comment_like_relationCreateNestedManyWithoutUserInput
    patch_resource_like?: user_patch_resource_like_relationCreateNestedManyWithoutUserInput
    patch_favorite_folder?: user_patch_favorite_folderCreateNestedManyWithoutUserInput
    following?: user_follow_relationCreateNestedManyWithoutFollowingInput
    follower?: user_follow_relationCreateNestedManyWithoutFollowerInput
    patch?: patchCreateNestedManyWithoutUserInput
    patch_comment?: patch_commentCreateNestedManyWithoutUserInput
    patch_resource?: patch_resourceCreateNestedManyWithoutUserInput
    patch_character?: patch_characterCreateNestedManyWithoutUserInput
    send_message?: user_messageCreateNestedManyWithoutSenderInput
    receive_message?: user_messageCreateNestedManyWithoutRecipientInput
  }

  export type userUncheckedCreateWithoutPatch_tagInput = {
    id?: number
    name: string
    email: string
    password: string
    ip?: string
    avatar?: string
    role?: number
    status?: number
    register_time?: Date | string
    moemoepoint?: number
    bio?: string
    claimed_tasks?: userCreateclaimed_tasksInput | string[]
    enable_email_notice?: boolean
    daily_image_count?: number
    daily_check_in?: number
    daily_upload_size?: number
    last_login_time?: string
    created?: Date | string
    updated?: Date | string
    admin_log?: admin_logUncheckedCreateNestedManyWithoutUserInput
    patch_comment_like?: user_patch_comment_like_relationUncheckedCreateNestedManyWithoutUserInput
    patch_resource_like?: user_patch_resource_like_relationUncheckedCreateNestedManyWithoutUserInput
    patch_favorite_folder?: user_patch_favorite_folderUncheckedCreateNestedManyWithoutUserInput
    following?: user_follow_relationUncheckedCreateNestedManyWithoutFollowingInput
    follower?: user_follow_relationUncheckedCreateNestedManyWithoutFollowerInput
    patch?: patchUncheckedCreateNestedManyWithoutUserInput
    patch_comment?: patch_commentUncheckedCreateNestedManyWithoutUserInput
    patch_resource?: patch_resourceUncheckedCreateNestedManyWithoutUserInput
    patch_character?: patch_characterUncheckedCreateNestedManyWithoutUserInput
    send_message?: user_messageUncheckedCreateNestedManyWithoutSenderInput
    receive_message?: user_messageUncheckedCreateNestedManyWithoutRecipientInput
  }

  export type userCreateOrConnectWithoutPatch_tagInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutPatch_tagInput, userUncheckedCreateWithoutPatch_tagInput>
  }

  export type patch_tag_relationUpsertWithWhereUniqueWithoutTagInput = {
    where: patch_tag_relationWhereUniqueInput
    update: XOR<patch_tag_relationUpdateWithoutTagInput, patch_tag_relationUncheckedUpdateWithoutTagInput>
    create: XOR<patch_tag_relationCreateWithoutTagInput, patch_tag_relationUncheckedCreateWithoutTagInput>
  }

  export type patch_tag_relationUpdateWithWhereUniqueWithoutTagInput = {
    where: patch_tag_relationWhereUniqueInput
    data: XOR<patch_tag_relationUpdateWithoutTagInput, patch_tag_relationUncheckedUpdateWithoutTagInput>
  }

  export type patch_tag_relationUpdateManyWithWhereWithoutTagInput = {
    where: patch_tag_relationScalarWhereInput
    data: XOR<patch_tag_relationUpdateManyMutationInput, patch_tag_relationUncheckedUpdateManyWithoutTagInput>
  }

  export type userUpsertWithoutPatch_tagInput = {
    update: XOR<userUpdateWithoutPatch_tagInput, userUncheckedUpdateWithoutPatch_tagInput>
    create: XOR<userCreateWithoutPatch_tagInput, userUncheckedCreateWithoutPatch_tagInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutPatch_tagInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutPatch_tagInput, userUncheckedUpdateWithoutPatch_tagInput>
  }

  export type userUpdateWithoutPatch_tagInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    ip?: StringFieldUpdateOperationsInput | string
    avatar?: StringFieldUpdateOperationsInput | string
    role?: IntFieldUpdateOperationsInput | number
    status?: IntFieldUpdateOperationsInput | number
    register_time?: DateTimeFieldUpdateOperationsInput | Date | string
    moemoepoint?: IntFieldUpdateOperationsInput | number
    bio?: StringFieldUpdateOperationsInput | string
    claimed_tasks?: userUpdateclaimed_tasksInput | string[]
    enable_email_notice?: BoolFieldUpdateOperationsInput | boolean
    daily_image_count?: IntFieldUpdateOperationsInput | number
    daily_check_in?: IntFieldUpdateOperationsInput | number
    daily_upload_size?: FloatFieldUpdateOperationsInput | number
    last_login_time?: StringFieldUpdateOperationsInput | string
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    admin_log?: admin_logUpdateManyWithoutUserNestedInput
    patch_comment_like?: user_patch_comment_like_relationUpdateManyWithoutUserNestedInput
    patch_resource_like?: user_patch_resource_like_relationUpdateManyWithoutUserNestedInput
    patch_favorite_folder?: user_patch_favorite_folderUpdateManyWithoutUserNestedInput
    following?: user_follow_relationUpdateManyWithoutFollowingNestedInput
    follower?: user_follow_relationUpdateManyWithoutFollowerNestedInput
    patch?: patchUpdateManyWithoutUserNestedInput
    patch_comment?: patch_commentUpdateManyWithoutUserNestedInput
    patch_resource?: patch_resourceUpdateManyWithoutUserNestedInput
    patch_character?: patch_characterUpdateManyWithoutUserNestedInput
    send_message?: user_messageUpdateManyWithoutSenderNestedInput
    receive_message?: user_messageUpdateManyWithoutRecipientNestedInput
  }

  export type userUncheckedUpdateWithoutPatch_tagInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    ip?: StringFieldUpdateOperationsInput | string
    avatar?: StringFieldUpdateOperationsInput | string
    role?: IntFieldUpdateOperationsInput | number
    status?: IntFieldUpdateOperationsInput | number
    register_time?: DateTimeFieldUpdateOperationsInput | Date | string
    moemoepoint?: IntFieldUpdateOperationsInput | number
    bio?: StringFieldUpdateOperationsInput | string
    claimed_tasks?: userUpdateclaimed_tasksInput | string[]
    enable_email_notice?: BoolFieldUpdateOperationsInput | boolean
    daily_image_count?: IntFieldUpdateOperationsInput | number
    daily_check_in?: IntFieldUpdateOperationsInput | number
    daily_upload_size?: FloatFieldUpdateOperationsInput | number
    last_login_time?: StringFieldUpdateOperationsInput | string
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    admin_log?: admin_logUncheckedUpdateManyWithoutUserNestedInput
    patch_comment_like?: user_patch_comment_like_relationUncheckedUpdateManyWithoutUserNestedInput
    patch_resource_like?: user_patch_resource_like_relationUncheckedUpdateManyWithoutUserNestedInput
    patch_favorite_folder?: user_patch_favorite_folderUncheckedUpdateManyWithoutUserNestedInput
    following?: user_follow_relationUncheckedUpdateManyWithoutFollowingNestedInput
    follower?: user_follow_relationUncheckedUpdateManyWithoutFollowerNestedInput
    patch?: patchUncheckedUpdateManyWithoutUserNestedInput
    patch_comment?: patch_commentUncheckedUpdateManyWithoutUserNestedInput
    patch_resource?: patch_resourceUncheckedUpdateManyWithoutUserNestedInput
    patch_character?: patch_characterUncheckedUpdateManyWithoutUserNestedInput
    send_message?: user_messageUncheckedUpdateManyWithoutSenderNestedInput
    receive_message?: user_messageUncheckedUpdateManyWithoutRecipientNestedInput
  }

  export type patchCreateWithoutTagInput = {
    unique_id: string
    name: string
    vndb_id?: string | null
    banner?: string
    introduction?: string
    released?: string
    content_limit?: string
    status?: number
    download?: number
    view?: number
    resource_update_time?: Date | string
    type?: patchCreatetypeInput | string[]
    language?: patchCreatelanguageInput | string[]
    engine?: patchCreateengineInput | string[]
    platform?: patchCreateplatformInput | string[]
    created?: Date | string
    updated?: Date | string
    user: userCreateNestedOneWithoutPatchInput
    alias?: patch_aliasCreateNestedManyWithoutPatchInput
    favorite_folder?: user_patch_favorite_folder_relationCreateNestedManyWithoutPatchInput
    resource?: patch_resourceCreateNestedManyWithoutPatchInput
    comment?: patch_commentCreateNestedManyWithoutPatchInput
    characters?: patch_characterCreateNestedManyWithoutPatchInput
  }

  export type patchUncheckedCreateWithoutTagInput = {
    id?: number
    unique_id: string
    name: string
    vndb_id?: string | null
    banner?: string
    introduction?: string
    released?: string
    content_limit?: string
    status?: number
    download?: number
    view?: number
    resource_update_time?: Date | string
    type?: patchCreatetypeInput | string[]
    language?: patchCreatelanguageInput | string[]
    engine?: patchCreateengineInput | string[]
    platform?: patchCreateplatformInput | string[]
    user_id: number
    created?: Date | string
    updated?: Date | string
    alias?: patch_aliasUncheckedCreateNestedManyWithoutPatchInput
    favorite_folder?: user_patch_favorite_folder_relationUncheckedCreateNestedManyWithoutPatchInput
    resource?: patch_resourceUncheckedCreateNestedManyWithoutPatchInput
    comment?: patch_commentUncheckedCreateNestedManyWithoutPatchInput
    characters?: patch_characterUncheckedCreateNestedManyWithoutPatchInput
  }

  export type patchCreateOrConnectWithoutTagInput = {
    where: patchWhereUniqueInput
    create: XOR<patchCreateWithoutTagInput, patchUncheckedCreateWithoutTagInput>
  }

  export type patch_tagCreateWithoutPatch_relationInput = {
    name: string
    introduction?: string
    count?: number
    alias?: patch_tagCreatealiasInput | string[]
    created?: Date | string
    updated?: Date | string
    user: userCreateNestedOneWithoutPatch_tagInput
  }

  export type patch_tagUncheckedCreateWithoutPatch_relationInput = {
    id?: number
    name: string
    introduction?: string
    count?: number
    alias?: patch_tagCreatealiasInput | string[]
    user_id: number
    created?: Date | string
    updated?: Date | string
  }

  export type patch_tagCreateOrConnectWithoutPatch_relationInput = {
    where: patch_tagWhereUniqueInput
    create: XOR<patch_tagCreateWithoutPatch_relationInput, patch_tagUncheckedCreateWithoutPatch_relationInput>
  }

  export type patchUpsertWithoutTagInput = {
    update: XOR<patchUpdateWithoutTagInput, patchUncheckedUpdateWithoutTagInput>
    create: XOR<patchCreateWithoutTagInput, patchUncheckedCreateWithoutTagInput>
    where?: patchWhereInput
  }

  export type patchUpdateToOneWithWhereWithoutTagInput = {
    where?: patchWhereInput
    data: XOR<patchUpdateWithoutTagInput, patchUncheckedUpdateWithoutTagInput>
  }

  export type patchUpdateWithoutTagInput = {
    unique_id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    vndb_id?: NullableStringFieldUpdateOperationsInput | string | null
    banner?: StringFieldUpdateOperationsInput | string
    introduction?: StringFieldUpdateOperationsInput | string
    released?: StringFieldUpdateOperationsInput | string
    content_limit?: StringFieldUpdateOperationsInput | string
    status?: IntFieldUpdateOperationsInput | number
    download?: IntFieldUpdateOperationsInput | number
    view?: IntFieldUpdateOperationsInput | number
    resource_update_time?: DateTimeFieldUpdateOperationsInput | Date | string
    type?: patchUpdatetypeInput | string[]
    language?: patchUpdatelanguageInput | string[]
    engine?: patchUpdateengineInput | string[]
    platform?: patchUpdateplatformInput | string[]
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: userUpdateOneRequiredWithoutPatchNestedInput
    alias?: patch_aliasUpdateManyWithoutPatchNestedInput
    favorite_folder?: user_patch_favorite_folder_relationUpdateManyWithoutPatchNestedInput
    resource?: patch_resourceUpdateManyWithoutPatchNestedInput
    comment?: patch_commentUpdateManyWithoutPatchNestedInput
    characters?: patch_characterUpdateManyWithoutPatchNestedInput
  }

  export type patchUncheckedUpdateWithoutTagInput = {
    id?: IntFieldUpdateOperationsInput | number
    unique_id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    vndb_id?: NullableStringFieldUpdateOperationsInput | string | null
    banner?: StringFieldUpdateOperationsInput | string
    introduction?: StringFieldUpdateOperationsInput | string
    released?: StringFieldUpdateOperationsInput | string
    content_limit?: StringFieldUpdateOperationsInput | string
    status?: IntFieldUpdateOperationsInput | number
    download?: IntFieldUpdateOperationsInput | number
    view?: IntFieldUpdateOperationsInput | number
    resource_update_time?: DateTimeFieldUpdateOperationsInput | Date | string
    type?: patchUpdatetypeInput | string[]
    language?: patchUpdatelanguageInput | string[]
    engine?: patchUpdateengineInput | string[]
    platform?: patchUpdateplatformInput | string[]
    user_id?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    alias?: patch_aliasUncheckedUpdateManyWithoutPatchNestedInput
    favorite_folder?: user_patch_favorite_folder_relationUncheckedUpdateManyWithoutPatchNestedInput
    resource?: patch_resourceUncheckedUpdateManyWithoutPatchNestedInput
    comment?: patch_commentUncheckedUpdateManyWithoutPatchNestedInput
    characters?: patch_characterUncheckedUpdateManyWithoutPatchNestedInput
  }

  export type patch_tagUpsertWithoutPatch_relationInput = {
    update: XOR<patch_tagUpdateWithoutPatch_relationInput, patch_tagUncheckedUpdateWithoutPatch_relationInput>
    create: XOR<patch_tagCreateWithoutPatch_relationInput, patch_tagUncheckedCreateWithoutPatch_relationInput>
    where?: patch_tagWhereInput
  }

  export type patch_tagUpdateToOneWithWhereWithoutPatch_relationInput = {
    where?: patch_tagWhereInput
    data: XOR<patch_tagUpdateWithoutPatch_relationInput, patch_tagUncheckedUpdateWithoutPatch_relationInput>
  }

  export type patch_tagUpdateWithoutPatch_relationInput = {
    name?: StringFieldUpdateOperationsInput | string
    introduction?: StringFieldUpdateOperationsInput | string
    count?: IntFieldUpdateOperationsInput | number
    alias?: patch_tagUpdatealiasInput | string[]
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: userUpdateOneRequiredWithoutPatch_tagNestedInput
  }

  export type patch_tagUncheckedUpdateWithoutPatch_relationInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    introduction?: StringFieldUpdateOperationsInput | string
    count?: IntFieldUpdateOperationsInput | number
    alias?: patch_tagUpdatealiasInput | string[]
    user_id?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_patch_resource_like_relationCreateWithoutResourceInput = {
    created?: Date | string
    updated?: Date | string
    user: userCreateNestedOneWithoutPatch_resource_likeInput
  }

  export type user_patch_resource_like_relationUncheckedCreateWithoutResourceInput = {
    id?: number
    user_id: number
    created?: Date | string
    updated?: Date | string
  }

  export type user_patch_resource_like_relationCreateOrConnectWithoutResourceInput = {
    where: user_patch_resource_like_relationWhereUniqueInput
    create: XOR<user_patch_resource_like_relationCreateWithoutResourceInput, user_patch_resource_like_relationUncheckedCreateWithoutResourceInput>
  }

  export type user_patch_resource_like_relationCreateManyResourceInputEnvelope = {
    data: user_patch_resource_like_relationCreateManyResourceInput | user_patch_resource_like_relationCreateManyResourceInput[]
    skipDuplicates?: boolean
  }

  export type userCreateWithoutPatch_resourceInput = {
    name: string
    email: string
    password: string
    ip?: string
    avatar?: string
    role?: number
    status?: number
    register_time?: Date | string
    moemoepoint?: number
    bio?: string
    claimed_tasks?: userCreateclaimed_tasksInput | string[]
    enable_email_notice?: boolean
    daily_image_count?: number
    daily_check_in?: number
    daily_upload_size?: number
    last_login_time?: string
    created?: Date | string
    updated?: Date | string
    admin_log?: admin_logCreateNestedManyWithoutUserInput
    patch_tag?: patch_tagCreateNestedManyWithoutUserInput
    patch_comment_like?: user_patch_comment_like_relationCreateNestedManyWithoutUserInput
    patch_resource_like?: user_patch_resource_like_relationCreateNestedManyWithoutUserInput
    patch_favorite_folder?: user_patch_favorite_folderCreateNestedManyWithoutUserInput
    following?: user_follow_relationCreateNestedManyWithoutFollowingInput
    follower?: user_follow_relationCreateNestedManyWithoutFollowerInput
    patch?: patchCreateNestedManyWithoutUserInput
    patch_comment?: patch_commentCreateNestedManyWithoutUserInput
    patch_character?: patch_characterCreateNestedManyWithoutUserInput
    send_message?: user_messageCreateNestedManyWithoutSenderInput
    receive_message?: user_messageCreateNestedManyWithoutRecipientInput
  }

  export type userUncheckedCreateWithoutPatch_resourceInput = {
    id?: number
    name: string
    email: string
    password: string
    ip?: string
    avatar?: string
    role?: number
    status?: number
    register_time?: Date | string
    moemoepoint?: number
    bio?: string
    claimed_tasks?: userCreateclaimed_tasksInput | string[]
    enable_email_notice?: boolean
    daily_image_count?: number
    daily_check_in?: number
    daily_upload_size?: number
    last_login_time?: string
    created?: Date | string
    updated?: Date | string
    admin_log?: admin_logUncheckedCreateNestedManyWithoutUserInput
    patch_tag?: patch_tagUncheckedCreateNestedManyWithoutUserInput
    patch_comment_like?: user_patch_comment_like_relationUncheckedCreateNestedManyWithoutUserInput
    patch_resource_like?: user_patch_resource_like_relationUncheckedCreateNestedManyWithoutUserInput
    patch_favorite_folder?: user_patch_favorite_folderUncheckedCreateNestedManyWithoutUserInput
    following?: user_follow_relationUncheckedCreateNestedManyWithoutFollowingInput
    follower?: user_follow_relationUncheckedCreateNestedManyWithoutFollowerInput
    patch?: patchUncheckedCreateNestedManyWithoutUserInput
    patch_comment?: patch_commentUncheckedCreateNestedManyWithoutUserInput
    patch_character?: patch_characterUncheckedCreateNestedManyWithoutUserInput
    send_message?: user_messageUncheckedCreateNestedManyWithoutSenderInput
    receive_message?: user_messageUncheckedCreateNestedManyWithoutRecipientInput
  }

  export type userCreateOrConnectWithoutPatch_resourceInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutPatch_resourceInput, userUncheckedCreateWithoutPatch_resourceInput>
  }

  export type patchCreateWithoutResourceInput = {
    unique_id: string
    name: string
    vndb_id?: string | null
    banner?: string
    introduction?: string
    released?: string
    content_limit?: string
    status?: number
    download?: number
    view?: number
    resource_update_time?: Date | string
    type?: patchCreatetypeInput | string[]
    language?: patchCreatelanguageInput | string[]
    engine?: patchCreateengineInput | string[]
    platform?: patchCreateplatformInput | string[]
    created?: Date | string
    updated?: Date | string
    user: userCreateNestedOneWithoutPatchInput
    alias?: patch_aliasCreateNestedManyWithoutPatchInput
    tag?: patch_tag_relationCreateNestedManyWithoutPatchInput
    favorite_folder?: user_patch_favorite_folder_relationCreateNestedManyWithoutPatchInput
    comment?: patch_commentCreateNestedManyWithoutPatchInput
    characters?: patch_characterCreateNestedManyWithoutPatchInput
  }

  export type patchUncheckedCreateWithoutResourceInput = {
    id?: number
    unique_id: string
    name: string
    vndb_id?: string | null
    banner?: string
    introduction?: string
    released?: string
    content_limit?: string
    status?: number
    download?: number
    view?: number
    resource_update_time?: Date | string
    type?: patchCreatetypeInput | string[]
    language?: patchCreatelanguageInput | string[]
    engine?: patchCreateengineInput | string[]
    platform?: patchCreateplatformInput | string[]
    user_id: number
    created?: Date | string
    updated?: Date | string
    alias?: patch_aliasUncheckedCreateNestedManyWithoutPatchInput
    tag?: patch_tag_relationUncheckedCreateNestedManyWithoutPatchInput
    favorite_folder?: user_patch_favorite_folder_relationUncheckedCreateNestedManyWithoutPatchInput
    comment?: patch_commentUncheckedCreateNestedManyWithoutPatchInput
    characters?: patch_characterUncheckedCreateNestedManyWithoutPatchInput
  }

  export type patchCreateOrConnectWithoutResourceInput = {
    where: patchWhereUniqueInput
    create: XOR<patchCreateWithoutResourceInput, patchUncheckedCreateWithoutResourceInput>
  }

  export type user_patch_resource_like_relationUpsertWithWhereUniqueWithoutResourceInput = {
    where: user_patch_resource_like_relationWhereUniqueInput
    update: XOR<user_patch_resource_like_relationUpdateWithoutResourceInput, user_patch_resource_like_relationUncheckedUpdateWithoutResourceInput>
    create: XOR<user_patch_resource_like_relationCreateWithoutResourceInput, user_patch_resource_like_relationUncheckedCreateWithoutResourceInput>
  }

  export type user_patch_resource_like_relationUpdateWithWhereUniqueWithoutResourceInput = {
    where: user_patch_resource_like_relationWhereUniqueInput
    data: XOR<user_patch_resource_like_relationUpdateWithoutResourceInput, user_patch_resource_like_relationUncheckedUpdateWithoutResourceInput>
  }

  export type user_patch_resource_like_relationUpdateManyWithWhereWithoutResourceInput = {
    where: user_patch_resource_like_relationScalarWhereInput
    data: XOR<user_patch_resource_like_relationUpdateManyMutationInput, user_patch_resource_like_relationUncheckedUpdateManyWithoutResourceInput>
  }

  export type userUpsertWithoutPatch_resourceInput = {
    update: XOR<userUpdateWithoutPatch_resourceInput, userUncheckedUpdateWithoutPatch_resourceInput>
    create: XOR<userCreateWithoutPatch_resourceInput, userUncheckedCreateWithoutPatch_resourceInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutPatch_resourceInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutPatch_resourceInput, userUncheckedUpdateWithoutPatch_resourceInput>
  }

  export type userUpdateWithoutPatch_resourceInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    ip?: StringFieldUpdateOperationsInput | string
    avatar?: StringFieldUpdateOperationsInput | string
    role?: IntFieldUpdateOperationsInput | number
    status?: IntFieldUpdateOperationsInput | number
    register_time?: DateTimeFieldUpdateOperationsInput | Date | string
    moemoepoint?: IntFieldUpdateOperationsInput | number
    bio?: StringFieldUpdateOperationsInput | string
    claimed_tasks?: userUpdateclaimed_tasksInput | string[]
    enable_email_notice?: BoolFieldUpdateOperationsInput | boolean
    daily_image_count?: IntFieldUpdateOperationsInput | number
    daily_check_in?: IntFieldUpdateOperationsInput | number
    daily_upload_size?: FloatFieldUpdateOperationsInput | number
    last_login_time?: StringFieldUpdateOperationsInput | string
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    admin_log?: admin_logUpdateManyWithoutUserNestedInput
    patch_tag?: patch_tagUpdateManyWithoutUserNestedInput
    patch_comment_like?: user_patch_comment_like_relationUpdateManyWithoutUserNestedInput
    patch_resource_like?: user_patch_resource_like_relationUpdateManyWithoutUserNestedInput
    patch_favorite_folder?: user_patch_favorite_folderUpdateManyWithoutUserNestedInput
    following?: user_follow_relationUpdateManyWithoutFollowingNestedInput
    follower?: user_follow_relationUpdateManyWithoutFollowerNestedInput
    patch?: patchUpdateManyWithoutUserNestedInput
    patch_comment?: patch_commentUpdateManyWithoutUserNestedInput
    patch_character?: patch_characterUpdateManyWithoutUserNestedInput
    send_message?: user_messageUpdateManyWithoutSenderNestedInput
    receive_message?: user_messageUpdateManyWithoutRecipientNestedInput
  }

  export type userUncheckedUpdateWithoutPatch_resourceInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    ip?: StringFieldUpdateOperationsInput | string
    avatar?: StringFieldUpdateOperationsInput | string
    role?: IntFieldUpdateOperationsInput | number
    status?: IntFieldUpdateOperationsInput | number
    register_time?: DateTimeFieldUpdateOperationsInput | Date | string
    moemoepoint?: IntFieldUpdateOperationsInput | number
    bio?: StringFieldUpdateOperationsInput | string
    claimed_tasks?: userUpdateclaimed_tasksInput | string[]
    enable_email_notice?: BoolFieldUpdateOperationsInput | boolean
    daily_image_count?: IntFieldUpdateOperationsInput | number
    daily_check_in?: IntFieldUpdateOperationsInput | number
    daily_upload_size?: FloatFieldUpdateOperationsInput | number
    last_login_time?: StringFieldUpdateOperationsInput | string
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    admin_log?: admin_logUncheckedUpdateManyWithoutUserNestedInput
    patch_tag?: patch_tagUncheckedUpdateManyWithoutUserNestedInput
    patch_comment_like?: user_patch_comment_like_relationUncheckedUpdateManyWithoutUserNestedInput
    patch_resource_like?: user_patch_resource_like_relationUncheckedUpdateManyWithoutUserNestedInput
    patch_favorite_folder?: user_patch_favorite_folderUncheckedUpdateManyWithoutUserNestedInput
    following?: user_follow_relationUncheckedUpdateManyWithoutFollowingNestedInput
    follower?: user_follow_relationUncheckedUpdateManyWithoutFollowerNestedInput
    patch?: patchUncheckedUpdateManyWithoutUserNestedInput
    patch_comment?: patch_commentUncheckedUpdateManyWithoutUserNestedInput
    patch_character?: patch_characterUncheckedUpdateManyWithoutUserNestedInput
    send_message?: user_messageUncheckedUpdateManyWithoutSenderNestedInput
    receive_message?: user_messageUncheckedUpdateManyWithoutRecipientNestedInput
  }

  export type patchUpsertWithoutResourceInput = {
    update: XOR<patchUpdateWithoutResourceInput, patchUncheckedUpdateWithoutResourceInput>
    create: XOR<patchCreateWithoutResourceInput, patchUncheckedCreateWithoutResourceInput>
    where?: patchWhereInput
  }

  export type patchUpdateToOneWithWhereWithoutResourceInput = {
    where?: patchWhereInput
    data: XOR<patchUpdateWithoutResourceInput, patchUncheckedUpdateWithoutResourceInput>
  }

  export type patchUpdateWithoutResourceInput = {
    unique_id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    vndb_id?: NullableStringFieldUpdateOperationsInput | string | null
    banner?: StringFieldUpdateOperationsInput | string
    introduction?: StringFieldUpdateOperationsInput | string
    released?: StringFieldUpdateOperationsInput | string
    content_limit?: StringFieldUpdateOperationsInput | string
    status?: IntFieldUpdateOperationsInput | number
    download?: IntFieldUpdateOperationsInput | number
    view?: IntFieldUpdateOperationsInput | number
    resource_update_time?: DateTimeFieldUpdateOperationsInput | Date | string
    type?: patchUpdatetypeInput | string[]
    language?: patchUpdatelanguageInput | string[]
    engine?: patchUpdateengineInput | string[]
    platform?: patchUpdateplatformInput | string[]
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: userUpdateOneRequiredWithoutPatchNestedInput
    alias?: patch_aliasUpdateManyWithoutPatchNestedInput
    tag?: patch_tag_relationUpdateManyWithoutPatchNestedInput
    favorite_folder?: user_patch_favorite_folder_relationUpdateManyWithoutPatchNestedInput
    comment?: patch_commentUpdateManyWithoutPatchNestedInput
    characters?: patch_characterUpdateManyWithoutPatchNestedInput
  }

  export type patchUncheckedUpdateWithoutResourceInput = {
    id?: IntFieldUpdateOperationsInput | number
    unique_id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    vndb_id?: NullableStringFieldUpdateOperationsInput | string | null
    banner?: StringFieldUpdateOperationsInput | string
    introduction?: StringFieldUpdateOperationsInput | string
    released?: StringFieldUpdateOperationsInput | string
    content_limit?: StringFieldUpdateOperationsInput | string
    status?: IntFieldUpdateOperationsInput | number
    download?: IntFieldUpdateOperationsInput | number
    view?: IntFieldUpdateOperationsInput | number
    resource_update_time?: DateTimeFieldUpdateOperationsInput | Date | string
    type?: patchUpdatetypeInput | string[]
    language?: patchUpdatelanguageInput | string[]
    engine?: patchUpdateengineInput | string[]
    platform?: patchUpdateplatformInput | string[]
    user_id?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    alias?: patch_aliasUncheckedUpdateManyWithoutPatchNestedInput
    tag?: patch_tag_relationUncheckedUpdateManyWithoutPatchNestedInput
    favorite_folder?: user_patch_favorite_folder_relationUncheckedUpdateManyWithoutPatchNestedInput
    comment?: patch_commentUncheckedUpdateManyWithoutPatchNestedInput
    characters?: patch_characterUncheckedUpdateManyWithoutPatchNestedInput
  }

  export type user_patch_comment_like_relationCreateWithoutCommentInput = {
    created?: Date | string
    updated?: Date | string
    user: userCreateNestedOneWithoutPatch_comment_likeInput
  }

  export type user_patch_comment_like_relationUncheckedCreateWithoutCommentInput = {
    id?: number
    user_id: number
    created?: Date | string
    updated?: Date | string
  }

  export type user_patch_comment_like_relationCreateOrConnectWithoutCommentInput = {
    where: user_patch_comment_like_relationWhereUniqueInput
    create: XOR<user_patch_comment_like_relationCreateWithoutCommentInput, user_patch_comment_like_relationUncheckedCreateWithoutCommentInput>
  }

  export type user_patch_comment_like_relationCreateManyCommentInputEnvelope = {
    data: user_patch_comment_like_relationCreateManyCommentInput | user_patch_comment_like_relationCreateManyCommentInput[]
    skipDuplicates?: boolean
  }

  export type patch_commentCreateWithoutParentInput = {
    content?: string
    edit?: string
    created?: Date | string
    updated?: Date | string
    like_by?: user_patch_comment_like_relationCreateNestedManyWithoutCommentInput
    reply?: patch_commentCreateNestedManyWithoutParentInput
    user: userCreateNestedOneWithoutPatch_commentInput
    patch: patchCreateNestedOneWithoutCommentInput
  }

  export type patch_commentUncheckedCreateWithoutParentInput = {
    id?: number
    content?: string
    edit?: string
    user_id: number
    patch_id: number
    created?: Date | string
    updated?: Date | string
    like_by?: user_patch_comment_like_relationUncheckedCreateNestedManyWithoutCommentInput
    reply?: patch_commentUncheckedCreateNestedManyWithoutParentInput
  }

  export type patch_commentCreateOrConnectWithoutParentInput = {
    where: patch_commentWhereUniqueInput
    create: XOR<patch_commentCreateWithoutParentInput, patch_commentUncheckedCreateWithoutParentInput>
  }

  export type patch_commentCreateManyParentInputEnvelope = {
    data: patch_commentCreateManyParentInput | patch_commentCreateManyParentInput[]
    skipDuplicates?: boolean
  }

  export type patch_commentCreateWithoutReplyInput = {
    content?: string
    edit?: string
    created?: Date | string
    updated?: Date | string
    like_by?: user_patch_comment_like_relationCreateNestedManyWithoutCommentInput
    parent?: patch_commentCreateNestedOneWithoutReplyInput
    user: userCreateNestedOneWithoutPatch_commentInput
    patch: patchCreateNestedOneWithoutCommentInput
  }

  export type patch_commentUncheckedCreateWithoutReplyInput = {
    id?: number
    content?: string
    edit?: string
    parent_id?: number | null
    user_id: number
    patch_id: number
    created?: Date | string
    updated?: Date | string
    like_by?: user_patch_comment_like_relationUncheckedCreateNestedManyWithoutCommentInput
  }

  export type patch_commentCreateOrConnectWithoutReplyInput = {
    where: patch_commentWhereUniqueInput
    create: XOR<patch_commentCreateWithoutReplyInput, patch_commentUncheckedCreateWithoutReplyInput>
  }

  export type userCreateWithoutPatch_commentInput = {
    name: string
    email: string
    password: string
    ip?: string
    avatar?: string
    role?: number
    status?: number
    register_time?: Date | string
    moemoepoint?: number
    bio?: string
    claimed_tasks?: userCreateclaimed_tasksInput | string[]
    enable_email_notice?: boolean
    daily_image_count?: number
    daily_check_in?: number
    daily_upload_size?: number
    last_login_time?: string
    created?: Date | string
    updated?: Date | string
    admin_log?: admin_logCreateNestedManyWithoutUserInput
    patch_tag?: patch_tagCreateNestedManyWithoutUserInput
    patch_comment_like?: user_patch_comment_like_relationCreateNestedManyWithoutUserInput
    patch_resource_like?: user_patch_resource_like_relationCreateNestedManyWithoutUserInput
    patch_favorite_folder?: user_patch_favorite_folderCreateNestedManyWithoutUserInput
    following?: user_follow_relationCreateNestedManyWithoutFollowingInput
    follower?: user_follow_relationCreateNestedManyWithoutFollowerInput
    patch?: patchCreateNestedManyWithoutUserInput
    patch_resource?: patch_resourceCreateNestedManyWithoutUserInput
    patch_character?: patch_characterCreateNestedManyWithoutUserInput
    send_message?: user_messageCreateNestedManyWithoutSenderInput
    receive_message?: user_messageCreateNestedManyWithoutRecipientInput
  }

  export type userUncheckedCreateWithoutPatch_commentInput = {
    id?: number
    name: string
    email: string
    password: string
    ip?: string
    avatar?: string
    role?: number
    status?: number
    register_time?: Date | string
    moemoepoint?: number
    bio?: string
    claimed_tasks?: userCreateclaimed_tasksInput | string[]
    enable_email_notice?: boolean
    daily_image_count?: number
    daily_check_in?: number
    daily_upload_size?: number
    last_login_time?: string
    created?: Date | string
    updated?: Date | string
    admin_log?: admin_logUncheckedCreateNestedManyWithoutUserInput
    patch_tag?: patch_tagUncheckedCreateNestedManyWithoutUserInput
    patch_comment_like?: user_patch_comment_like_relationUncheckedCreateNestedManyWithoutUserInput
    patch_resource_like?: user_patch_resource_like_relationUncheckedCreateNestedManyWithoutUserInput
    patch_favorite_folder?: user_patch_favorite_folderUncheckedCreateNestedManyWithoutUserInput
    following?: user_follow_relationUncheckedCreateNestedManyWithoutFollowingInput
    follower?: user_follow_relationUncheckedCreateNestedManyWithoutFollowerInput
    patch?: patchUncheckedCreateNestedManyWithoutUserInput
    patch_resource?: patch_resourceUncheckedCreateNestedManyWithoutUserInput
    patch_character?: patch_characterUncheckedCreateNestedManyWithoutUserInput
    send_message?: user_messageUncheckedCreateNestedManyWithoutSenderInput
    receive_message?: user_messageUncheckedCreateNestedManyWithoutRecipientInput
  }

  export type userCreateOrConnectWithoutPatch_commentInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutPatch_commentInput, userUncheckedCreateWithoutPatch_commentInput>
  }

  export type patchCreateWithoutCommentInput = {
    unique_id: string
    name: string
    vndb_id?: string | null
    banner?: string
    introduction?: string
    released?: string
    content_limit?: string
    status?: number
    download?: number
    view?: number
    resource_update_time?: Date | string
    type?: patchCreatetypeInput | string[]
    language?: patchCreatelanguageInput | string[]
    engine?: patchCreateengineInput | string[]
    platform?: patchCreateplatformInput | string[]
    created?: Date | string
    updated?: Date | string
    user: userCreateNestedOneWithoutPatchInput
    alias?: patch_aliasCreateNestedManyWithoutPatchInput
    tag?: patch_tag_relationCreateNestedManyWithoutPatchInput
    favorite_folder?: user_patch_favorite_folder_relationCreateNestedManyWithoutPatchInput
    resource?: patch_resourceCreateNestedManyWithoutPatchInput
    characters?: patch_characterCreateNestedManyWithoutPatchInput
  }

  export type patchUncheckedCreateWithoutCommentInput = {
    id?: number
    unique_id: string
    name: string
    vndb_id?: string | null
    banner?: string
    introduction?: string
    released?: string
    content_limit?: string
    status?: number
    download?: number
    view?: number
    resource_update_time?: Date | string
    type?: patchCreatetypeInput | string[]
    language?: patchCreatelanguageInput | string[]
    engine?: patchCreateengineInput | string[]
    platform?: patchCreateplatformInput | string[]
    user_id: number
    created?: Date | string
    updated?: Date | string
    alias?: patch_aliasUncheckedCreateNestedManyWithoutPatchInput
    tag?: patch_tag_relationUncheckedCreateNestedManyWithoutPatchInput
    favorite_folder?: user_patch_favorite_folder_relationUncheckedCreateNestedManyWithoutPatchInput
    resource?: patch_resourceUncheckedCreateNestedManyWithoutPatchInput
    characters?: patch_characterUncheckedCreateNestedManyWithoutPatchInput
  }

  export type patchCreateOrConnectWithoutCommentInput = {
    where: patchWhereUniqueInput
    create: XOR<patchCreateWithoutCommentInput, patchUncheckedCreateWithoutCommentInput>
  }

  export type user_patch_comment_like_relationUpsertWithWhereUniqueWithoutCommentInput = {
    where: user_patch_comment_like_relationWhereUniqueInput
    update: XOR<user_patch_comment_like_relationUpdateWithoutCommentInput, user_patch_comment_like_relationUncheckedUpdateWithoutCommentInput>
    create: XOR<user_patch_comment_like_relationCreateWithoutCommentInput, user_patch_comment_like_relationUncheckedCreateWithoutCommentInput>
  }

  export type user_patch_comment_like_relationUpdateWithWhereUniqueWithoutCommentInput = {
    where: user_patch_comment_like_relationWhereUniqueInput
    data: XOR<user_patch_comment_like_relationUpdateWithoutCommentInput, user_patch_comment_like_relationUncheckedUpdateWithoutCommentInput>
  }

  export type user_patch_comment_like_relationUpdateManyWithWhereWithoutCommentInput = {
    where: user_patch_comment_like_relationScalarWhereInput
    data: XOR<user_patch_comment_like_relationUpdateManyMutationInput, user_patch_comment_like_relationUncheckedUpdateManyWithoutCommentInput>
  }

  export type patch_commentUpsertWithWhereUniqueWithoutParentInput = {
    where: patch_commentWhereUniqueInput
    update: XOR<patch_commentUpdateWithoutParentInput, patch_commentUncheckedUpdateWithoutParentInput>
    create: XOR<patch_commentCreateWithoutParentInput, patch_commentUncheckedCreateWithoutParentInput>
  }

  export type patch_commentUpdateWithWhereUniqueWithoutParentInput = {
    where: patch_commentWhereUniqueInput
    data: XOR<patch_commentUpdateWithoutParentInput, patch_commentUncheckedUpdateWithoutParentInput>
  }

  export type patch_commentUpdateManyWithWhereWithoutParentInput = {
    where: patch_commentScalarWhereInput
    data: XOR<patch_commentUpdateManyMutationInput, patch_commentUncheckedUpdateManyWithoutParentInput>
  }

  export type patch_commentUpsertWithoutReplyInput = {
    update: XOR<patch_commentUpdateWithoutReplyInput, patch_commentUncheckedUpdateWithoutReplyInput>
    create: XOR<patch_commentCreateWithoutReplyInput, patch_commentUncheckedCreateWithoutReplyInput>
    where?: patch_commentWhereInput
  }

  export type patch_commentUpdateToOneWithWhereWithoutReplyInput = {
    where?: patch_commentWhereInput
    data: XOR<patch_commentUpdateWithoutReplyInput, patch_commentUncheckedUpdateWithoutReplyInput>
  }

  export type patch_commentUpdateWithoutReplyInput = {
    content?: StringFieldUpdateOperationsInput | string
    edit?: StringFieldUpdateOperationsInput | string
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    like_by?: user_patch_comment_like_relationUpdateManyWithoutCommentNestedInput
    parent?: patch_commentUpdateOneWithoutReplyNestedInput
    user?: userUpdateOneRequiredWithoutPatch_commentNestedInput
    patch?: patchUpdateOneRequiredWithoutCommentNestedInput
  }

  export type patch_commentUncheckedUpdateWithoutReplyInput = {
    id?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    edit?: StringFieldUpdateOperationsInput | string
    parent_id?: NullableIntFieldUpdateOperationsInput | number | null
    user_id?: IntFieldUpdateOperationsInput | number
    patch_id?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    like_by?: user_patch_comment_like_relationUncheckedUpdateManyWithoutCommentNestedInput
  }

  export type userUpsertWithoutPatch_commentInput = {
    update: XOR<userUpdateWithoutPatch_commentInput, userUncheckedUpdateWithoutPatch_commentInput>
    create: XOR<userCreateWithoutPatch_commentInput, userUncheckedCreateWithoutPatch_commentInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutPatch_commentInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutPatch_commentInput, userUncheckedUpdateWithoutPatch_commentInput>
  }

  export type userUpdateWithoutPatch_commentInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    ip?: StringFieldUpdateOperationsInput | string
    avatar?: StringFieldUpdateOperationsInput | string
    role?: IntFieldUpdateOperationsInput | number
    status?: IntFieldUpdateOperationsInput | number
    register_time?: DateTimeFieldUpdateOperationsInput | Date | string
    moemoepoint?: IntFieldUpdateOperationsInput | number
    bio?: StringFieldUpdateOperationsInput | string
    claimed_tasks?: userUpdateclaimed_tasksInput | string[]
    enable_email_notice?: BoolFieldUpdateOperationsInput | boolean
    daily_image_count?: IntFieldUpdateOperationsInput | number
    daily_check_in?: IntFieldUpdateOperationsInput | number
    daily_upload_size?: FloatFieldUpdateOperationsInput | number
    last_login_time?: StringFieldUpdateOperationsInput | string
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    admin_log?: admin_logUpdateManyWithoutUserNestedInput
    patch_tag?: patch_tagUpdateManyWithoutUserNestedInput
    patch_comment_like?: user_patch_comment_like_relationUpdateManyWithoutUserNestedInput
    patch_resource_like?: user_patch_resource_like_relationUpdateManyWithoutUserNestedInput
    patch_favorite_folder?: user_patch_favorite_folderUpdateManyWithoutUserNestedInput
    following?: user_follow_relationUpdateManyWithoutFollowingNestedInput
    follower?: user_follow_relationUpdateManyWithoutFollowerNestedInput
    patch?: patchUpdateManyWithoutUserNestedInput
    patch_resource?: patch_resourceUpdateManyWithoutUserNestedInput
    patch_character?: patch_characterUpdateManyWithoutUserNestedInput
    send_message?: user_messageUpdateManyWithoutSenderNestedInput
    receive_message?: user_messageUpdateManyWithoutRecipientNestedInput
  }

  export type userUncheckedUpdateWithoutPatch_commentInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    ip?: StringFieldUpdateOperationsInput | string
    avatar?: StringFieldUpdateOperationsInput | string
    role?: IntFieldUpdateOperationsInput | number
    status?: IntFieldUpdateOperationsInput | number
    register_time?: DateTimeFieldUpdateOperationsInput | Date | string
    moemoepoint?: IntFieldUpdateOperationsInput | number
    bio?: StringFieldUpdateOperationsInput | string
    claimed_tasks?: userUpdateclaimed_tasksInput | string[]
    enable_email_notice?: BoolFieldUpdateOperationsInput | boolean
    daily_image_count?: IntFieldUpdateOperationsInput | number
    daily_check_in?: IntFieldUpdateOperationsInput | number
    daily_upload_size?: FloatFieldUpdateOperationsInput | number
    last_login_time?: StringFieldUpdateOperationsInput | string
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    admin_log?: admin_logUncheckedUpdateManyWithoutUserNestedInput
    patch_tag?: patch_tagUncheckedUpdateManyWithoutUserNestedInput
    patch_comment_like?: user_patch_comment_like_relationUncheckedUpdateManyWithoutUserNestedInput
    patch_resource_like?: user_patch_resource_like_relationUncheckedUpdateManyWithoutUserNestedInput
    patch_favorite_folder?: user_patch_favorite_folderUncheckedUpdateManyWithoutUserNestedInput
    following?: user_follow_relationUncheckedUpdateManyWithoutFollowingNestedInput
    follower?: user_follow_relationUncheckedUpdateManyWithoutFollowerNestedInput
    patch?: patchUncheckedUpdateManyWithoutUserNestedInput
    patch_resource?: patch_resourceUncheckedUpdateManyWithoutUserNestedInput
    patch_character?: patch_characterUncheckedUpdateManyWithoutUserNestedInput
    send_message?: user_messageUncheckedUpdateManyWithoutSenderNestedInput
    receive_message?: user_messageUncheckedUpdateManyWithoutRecipientNestedInput
  }

  export type patchUpsertWithoutCommentInput = {
    update: XOR<patchUpdateWithoutCommentInput, patchUncheckedUpdateWithoutCommentInput>
    create: XOR<patchCreateWithoutCommentInput, patchUncheckedCreateWithoutCommentInput>
    where?: patchWhereInput
  }

  export type patchUpdateToOneWithWhereWithoutCommentInput = {
    where?: patchWhereInput
    data: XOR<patchUpdateWithoutCommentInput, patchUncheckedUpdateWithoutCommentInput>
  }

  export type patchUpdateWithoutCommentInput = {
    unique_id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    vndb_id?: NullableStringFieldUpdateOperationsInput | string | null
    banner?: StringFieldUpdateOperationsInput | string
    introduction?: StringFieldUpdateOperationsInput | string
    released?: StringFieldUpdateOperationsInput | string
    content_limit?: StringFieldUpdateOperationsInput | string
    status?: IntFieldUpdateOperationsInput | number
    download?: IntFieldUpdateOperationsInput | number
    view?: IntFieldUpdateOperationsInput | number
    resource_update_time?: DateTimeFieldUpdateOperationsInput | Date | string
    type?: patchUpdatetypeInput | string[]
    language?: patchUpdatelanguageInput | string[]
    engine?: patchUpdateengineInput | string[]
    platform?: patchUpdateplatformInput | string[]
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: userUpdateOneRequiredWithoutPatchNestedInput
    alias?: patch_aliasUpdateManyWithoutPatchNestedInput
    tag?: patch_tag_relationUpdateManyWithoutPatchNestedInput
    favorite_folder?: user_patch_favorite_folder_relationUpdateManyWithoutPatchNestedInput
    resource?: patch_resourceUpdateManyWithoutPatchNestedInput
    characters?: patch_characterUpdateManyWithoutPatchNestedInput
  }

  export type patchUncheckedUpdateWithoutCommentInput = {
    id?: IntFieldUpdateOperationsInput | number
    unique_id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    vndb_id?: NullableStringFieldUpdateOperationsInput | string | null
    banner?: StringFieldUpdateOperationsInput | string
    introduction?: StringFieldUpdateOperationsInput | string
    released?: StringFieldUpdateOperationsInput | string
    content_limit?: StringFieldUpdateOperationsInput | string
    status?: IntFieldUpdateOperationsInput | number
    download?: IntFieldUpdateOperationsInput | number
    view?: IntFieldUpdateOperationsInput | number
    resource_update_time?: DateTimeFieldUpdateOperationsInput | Date | string
    type?: patchUpdatetypeInput | string[]
    language?: patchUpdatelanguageInput | string[]
    engine?: patchUpdateengineInput | string[]
    platform?: patchUpdateplatformInput | string[]
    user_id?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    alias?: patch_aliasUncheckedUpdateManyWithoutPatchNestedInput
    tag?: patch_tag_relationUncheckedUpdateManyWithoutPatchNestedInput
    favorite_folder?: user_patch_favorite_folder_relationUncheckedUpdateManyWithoutPatchNestedInput
    resource?: patch_resourceUncheckedUpdateManyWithoutPatchNestedInput
    characters?: patch_characterUncheckedUpdateManyWithoutPatchNestedInput
  }

  export type patch_characterCreateWithoutNew_versionsInput = {
    name: string
    image: string
    description?: string
    status?: number
    traits?: patch_characterCreatetraitsInput | string[]
    voice_actor?: string
    alias?: patch_characterCreatealiasInput | string[]
    age?: string
    height?: string
    birthday?: string
    blood_type?: string
    three_sizes?: string
    hobby?: patch_characterCreatehobbyInput | string[]
    favorite?: patch_characterCreatefavoriteInput | string[]
    role_type?: string
    personality?: patch_characterCreatepersonalityInput | string[]
    relationship?: string
    is_latest?: boolean
    created?: Date | string
    updated?: Date | string
    original?: patch_characterCreateNestedOneWithoutNew_versionsInput
    user: userCreateNestedOneWithoutPatch_characterInput
    patch: patchCreateNestedOneWithoutCharactersInput
  }

  export type patch_characterUncheckedCreateWithoutNew_versionsInput = {
    id?: number
    name: string
    image: string
    description?: string
    status?: number
    traits?: patch_characterCreatetraitsInput | string[]
    voice_actor?: string
    alias?: patch_characterCreatealiasInput | string[]
    age?: string
    height?: string
    birthday?: string
    blood_type?: string
    three_sizes?: string
    hobby?: patch_characterCreatehobbyInput | string[]
    favorite?: patch_characterCreatefavoriteInput | string[]
    role_type?: string
    personality?: patch_characterCreatepersonalityInput | string[]
    relationship?: string
    is_latest?: boolean
    original_id?: number | null
    user_id: number
    patch_id: number
    created?: Date | string
    updated?: Date | string
  }

  export type patch_characterCreateOrConnectWithoutNew_versionsInput = {
    where: patch_characterWhereUniqueInput
    create: XOR<patch_characterCreateWithoutNew_versionsInput, patch_characterUncheckedCreateWithoutNew_versionsInput>
  }

  export type patch_characterCreateWithoutOriginalInput = {
    name: string
    image: string
    description?: string
    status?: number
    traits?: patch_characterCreatetraitsInput | string[]
    voice_actor?: string
    alias?: patch_characterCreatealiasInput | string[]
    age?: string
    height?: string
    birthday?: string
    blood_type?: string
    three_sizes?: string
    hobby?: patch_characterCreatehobbyInput | string[]
    favorite?: patch_characterCreatefavoriteInput | string[]
    role_type?: string
    personality?: patch_characterCreatepersonalityInput | string[]
    relationship?: string
    is_latest?: boolean
    created?: Date | string
    updated?: Date | string
    new_versions?: patch_characterCreateNestedManyWithoutOriginalInput
    user: userCreateNestedOneWithoutPatch_characterInput
    patch: patchCreateNestedOneWithoutCharactersInput
  }

  export type patch_characterUncheckedCreateWithoutOriginalInput = {
    id?: number
    name: string
    image: string
    description?: string
    status?: number
    traits?: patch_characterCreatetraitsInput | string[]
    voice_actor?: string
    alias?: patch_characterCreatealiasInput | string[]
    age?: string
    height?: string
    birthday?: string
    blood_type?: string
    three_sizes?: string
    hobby?: patch_characterCreatehobbyInput | string[]
    favorite?: patch_characterCreatefavoriteInput | string[]
    role_type?: string
    personality?: patch_characterCreatepersonalityInput | string[]
    relationship?: string
    is_latest?: boolean
    user_id: number
    patch_id: number
    created?: Date | string
    updated?: Date | string
    new_versions?: patch_characterUncheckedCreateNestedManyWithoutOriginalInput
  }

  export type patch_characterCreateOrConnectWithoutOriginalInput = {
    where: patch_characterWhereUniqueInput
    create: XOR<patch_characterCreateWithoutOriginalInput, patch_characterUncheckedCreateWithoutOriginalInput>
  }

  export type patch_characterCreateManyOriginalInputEnvelope = {
    data: patch_characterCreateManyOriginalInput | patch_characterCreateManyOriginalInput[]
    skipDuplicates?: boolean
  }

  export type userCreateWithoutPatch_characterInput = {
    name: string
    email: string
    password: string
    ip?: string
    avatar?: string
    role?: number
    status?: number
    register_time?: Date | string
    moemoepoint?: number
    bio?: string
    claimed_tasks?: userCreateclaimed_tasksInput | string[]
    enable_email_notice?: boolean
    daily_image_count?: number
    daily_check_in?: number
    daily_upload_size?: number
    last_login_time?: string
    created?: Date | string
    updated?: Date | string
    admin_log?: admin_logCreateNestedManyWithoutUserInput
    patch_tag?: patch_tagCreateNestedManyWithoutUserInput
    patch_comment_like?: user_patch_comment_like_relationCreateNestedManyWithoutUserInput
    patch_resource_like?: user_patch_resource_like_relationCreateNestedManyWithoutUserInput
    patch_favorite_folder?: user_patch_favorite_folderCreateNestedManyWithoutUserInput
    following?: user_follow_relationCreateNestedManyWithoutFollowingInput
    follower?: user_follow_relationCreateNestedManyWithoutFollowerInput
    patch?: patchCreateNestedManyWithoutUserInput
    patch_comment?: patch_commentCreateNestedManyWithoutUserInput
    patch_resource?: patch_resourceCreateNestedManyWithoutUserInput
    send_message?: user_messageCreateNestedManyWithoutSenderInput
    receive_message?: user_messageCreateNestedManyWithoutRecipientInput
  }

  export type userUncheckedCreateWithoutPatch_characterInput = {
    id?: number
    name: string
    email: string
    password: string
    ip?: string
    avatar?: string
    role?: number
    status?: number
    register_time?: Date | string
    moemoepoint?: number
    bio?: string
    claimed_tasks?: userCreateclaimed_tasksInput | string[]
    enable_email_notice?: boolean
    daily_image_count?: number
    daily_check_in?: number
    daily_upload_size?: number
    last_login_time?: string
    created?: Date | string
    updated?: Date | string
    admin_log?: admin_logUncheckedCreateNestedManyWithoutUserInput
    patch_tag?: patch_tagUncheckedCreateNestedManyWithoutUserInput
    patch_comment_like?: user_patch_comment_like_relationUncheckedCreateNestedManyWithoutUserInput
    patch_resource_like?: user_patch_resource_like_relationUncheckedCreateNestedManyWithoutUserInput
    patch_favorite_folder?: user_patch_favorite_folderUncheckedCreateNestedManyWithoutUserInput
    following?: user_follow_relationUncheckedCreateNestedManyWithoutFollowingInput
    follower?: user_follow_relationUncheckedCreateNestedManyWithoutFollowerInput
    patch?: patchUncheckedCreateNestedManyWithoutUserInput
    patch_comment?: patch_commentUncheckedCreateNestedManyWithoutUserInput
    patch_resource?: patch_resourceUncheckedCreateNestedManyWithoutUserInput
    send_message?: user_messageUncheckedCreateNestedManyWithoutSenderInput
    receive_message?: user_messageUncheckedCreateNestedManyWithoutRecipientInput
  }

  export type userCreateOrConnectWithoutPatch_characterInput = {
    where: userWhereUniqueInput
    create: XOR<userCreateWithoutPatch_characterInput, userUncheckedCreateWithoutPatch_characterInput>
  }

  export type patchCreateWithoutCharactersInput = {
    unique_id: string
    name: string
    vndb_id?: string | null
    banner?: string
    introduction?: string
    released?: string
    content_limit?: string
    status?: number
    download?: number
    view?: number
    resource_update_time?: Date | string
    type?: patchCreatetypeInput | string[]
    language?: patchCreatelanguageInput | string[]
    engine?: patchCreateengineInput | string[]
    platform?: patchCreateplatformInput | string[]
    created?: Date | string
    updated?: Date | string
    user: userCreateNestedOneWithoutPatchInput
    alias?: patch_aliasCreateNestedManyWithoutPatchInput
    tag?: patch_tag_relationCreateNestedManyWithoutPatchInput
    favorite_folder?: user_patch_favorite_folder_relationCreateNestedManyWithoutPatchInput
    resource?: patch_resourceCreateNestedManyWithoutPatchInput
    comment?: patch_commentCreateNestedManyWithoutPatchInput
  }

  export type patchUncheckedCreateWithoutCharactersInput = {
    id?: number
    unique_id: string
    name: string
    vndb_id?: string | null
    banner?: string
    introduction?: string
    released?: string
    content_limit?: string
    status?: number
    download?: number
    view?: number
    resource_update_time?: Date | string
    type?: patchCreatetypeInput | string[]
    language?: patchCreatelanguageInput | string[]
    engine?: patchCreateengineInput | string[]
    platform?: patchCreateplatformInput | string[]
    user_id: number
    created?: Date | string
    updated?: Date | string
    alias?: patch_aliasUncheckedCreateNestedManyWithoutPatchInput
    tag?: patch_tag_relationUncheckedCreateNestedManyWithoutPatchInput
    favorite_folder?: user_patch_favorite_folder_relationUncheckedCreateNestedManyWithoutPatchInput
    resource?: patch_resourceUncheckedCreateNestedManyWithoutPatchInput
    comment?: patch_commentUncheckedCreateNestedManyWithoutPatchInput
  }

  export type patchCreateOrConnectWithoutCharactersInput = {
    where: patchWhereUniqueInput
    create: XOR<patchCreateWithoutCharactersInput, patchUncheckedCreateWithoutCharactersInput>
  }

  export type patch_characterUpsertWithoutNew_versionsInput = {
    update: XOR<patch_characterUpdateWithoutNew_versionsInput, patch_characterUncheckedUpdateWithoutNew_versionsInput>
    create: XOR<patch_characterCreateWithoutNew_versionsInput, patch_characterUncheckedCreateWithoutNew_versionsInput>
    where?: patch_characterWhereInput
  }

  export type patch_characterUpdateToOneWithWhereWithoutNew_versionsInput = {
    where?: patch_characterWhereInput
    data: XOR<patch_characterUpdateWithoutNew_versionsInput, patch_characterUncheckedUpdateWithoutNew_versionsInput>
  }

  export type patch_characterUpdateWithoutNew_versionsInput = {
    name?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    status?: IntFieldUpdateOperationsInput | number
    traits?: patch_characterUpdatetraitsInput | string[]
    voice_actor?: StringFieldUpdateOperationsInput | string
    alias?: patch_characterUpdatealiasInput | string[]
    age?: StringFieldUpdateOperationsInput | string
    height?: StringFieldUpdateOperationsInput | string
    birthday?: StringFieldUpdateOperationsInput | string
    blood_type?: StringFieldUpdateOperationsInput | string
    three_sizes?: StringFieldUpdateOperationsInput | string
    hobby?: patch_characterUpdatehobbyInput | string[]
    favorite?: patch_characterUpdatefavoriteInput | string[]
    role_type?: StringFieldUpdateOperationsInput | string
    personality?: patch_characterUpdatepersonalityInput | string[]
    relationship?: StringFieldUpdateOperationsInput | string
    is_latest?: BoolFieldUpdateOperationsInput | boolean
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    original?: patch_characterUpdateOneWithoutNew_versionsNestedInput
    user?: userUpdateOneRequiredWithoutPatch_characterNestedInput
    patch?: patchUpdateOneRequiredWithoutCharactersNestedInput
  }

  export type patch_characterUncheckedUpdateWithoutNew_versionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    status?: IntFieldUpdateOperationsInput | number
    traits?: patch_characterUpdatetraitsInput | string[]
    voice_actor?: StringFieldUpdateOperationsInput | string
    alias?: patch_characterUpdatealiasInput | string[]
    age?: StringFieldUpdateOperationsInput | string
    height?: StringFieldUpdateOperationsInput | string
    birthday?: StringFieldUpdateOperationsInput | string
    blood_type?: StringFieldUpdateOperationsInput | string
    three_sizes?: StringFieldUpdateOperationsInput | string
    hobby?: patch_characterUpdatehobbyInput | string[]
    favorite?: patch_characterUpdatefavoriteInput | string[]
    role_type?: StringFieldUpdateOperationsInput | string
    personality?: patch_characterUpdatepersonalityInput | string[]
    relationship?: StringFieldUpdateOperationsInput | string
    is_latest?: BoolFieldUpdateOperationsInput | boolean
    original_id?: NullableIntFieldUpdateOperationsInput | number | null
    user_id?: IntFieldUpdateOperationsInput | number
    patch_id?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type patch_characterUpsertWithWhereUniqueWithoutOriginalInput = {
    where: patch_characterWhereUniqueInput
    update: XOR<patch_characterUpdateWithoutOriginalInput, patch_characterUncheckedUpdateWithoutOriginalInput>
    create: XOR<patch_characterCreateWithoutOriginalInput, patch_characterUncheckedCreateWithoutOriginalInput>
  }

  export type patch_characterUpdateWithWhereUniqueWithoutOriginalInput = {
    where: patch_characterWhereUniqueInput
    data: XOR<patch_characterUpdateWithoutOriginalInput, patch_characterUncheckedUpdateWithoutOriginalInput>
  }

  export type patch_characterUpdateManyWithWhereWithoutOriginalInput = {
    where: patch_characterScalarWhereInput
    data: XOR<patch_characterUpdateManyMutationInput, patch_characterUncheckedUpdateManyWithoutOriginalInput>
  }

  export type userUpsertWithoutPatch_characterInput = {
    update: XOR<userUpdateWithoutPatch_characterInput, userUncheckedUpdateWithoutPatch_characterInput>
    create: XOR<userCreateWithoutPatch_characterInput, userUncheckedCreateWithoutPatch_characterInput>
    where?: userWhereInput
  }

  export type userUpdateToOneWithWhereWithoutPatch_characterInput = {
    where?: userWhereInput
    data: XOR<userUpdateWithoutPatch_characterInput, userUncheckedUpdateWithoutPatch_characterInput>
  }

  export type userUpdateWithoutPatch_characterInput = {
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    ip?: StringFieldUpdateOperationsInput | string
    avatar?: StringFieldUpdateOperationsInput | string
    role?: IntFieldUpdateOperationsInput | number
    status?: IntFieldUpdateOperationsInput | number
    register_time?: DateTimeFieldUpdateOperationsInput | Date | string
    moemoepoint?: IntFieldUpdateOperationsInput | number
    bio?: StringFieldUpdateOperationsInput | string
    claimed_tasks?: userUpdateclaimed_tasksInput | string[]
    enable_email_notice?: BoolFieldUpdateOperationsInput | boolean
    daily_image_count?: IntFieldUpdateOperationsInput | number
    daily_check_in?: IntFieldUpdateOperationsInput | number
    daily_upload_size?: FloatFieldUpdateOperationsInput | number
    last_login_time?: StringFieldUpdateOperationsInput | string
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    admin_log?: admin_logUpdateManyWithoutUserNestedInput
    patch_tag?: patch_tagUpdateManyWithoutUserNestedInput
    patch_comment_like?: user_patch_comment_like_relationUpdateManyWithoutUserNestedInput
    patch_resource_like?: user_patch_resource_like_relationUpdateManyWithoutUserNestedInput
    patch_favorite_folder?: user_patch_favorite_folderUpdateManyWithoutUserNestedInput
    following?: user_follow_relationUpdateManyWithoutFollowingNestedInput
    follower?: user_follow_relationUpdateManyWithoutFollowerNestedInput
    patch?: patchUpdateManyWithoutUserNestedInput
    patch_comment?: patch_commentUpdateManyWithoutUserNestedInput
    patch_resource?: patch_resourceUpdateManyWithoutUserNestedInput
    send_message?: user_messageUpdateManyWithoutSenderNestedInput
    receive_message?: user_messageUpdateManyWithoutRecipientNestedInput
  }

  export type userUncheckedUpdateWithoutPatch_characterInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    ip?: StringFieldUpdateOperationsInput | string
    avatar?: StringFieldUpdateOperationsInput | string
    role?: IntFieldUpdateOperationsInput | number
    status?: IntFieldUpdateOperationsInput | number
    register_time?: DateTimeFieldUpdateOperationsInput | Date | string
    moemoepoint?: IntFieldUpdateOperationsInput | number
    bio?: StringFieldUpdateOperationsInput | string
    claimed_tasks?: userUpdateclaimed_tasksInput | string[]
    enable_email_notice?: BoolFieldUpdateOperationsInput | boolean
    daily_image_count?: IntFieldUpdateOperationsInput | number
    daily_check_in?: IntFieldUpdateOperationsInput | number
    daily_upload_size?: FloatFieldUpdateOperationsInput | number
    last_login_time?: StringFieldUpdateOperationsInput | string
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    admin_log?: admin_logUncheckedUpdateManyWithoutUserNestedInput
    patch_tag?: patch_tagUncheckedUpdateManyWithoutUserNestedInput
    patch_comment_like?: user_patch_comment_like_relationUncheckedUpdateManyWithoutUserNestedInput
    patch_resource_like?: user_patch_resource_like_relationUncheckedUpdateManyWithoutUserNestedInput
    patch_favorite_folder?: user_patch_favorite_folderUncheckedUpdateManyWithoutUserNestedInput
    following?: user_follow_relationUncheckedUpdateManyWithoutFollowingNestedInput
    follower?: user_follow_relationUncheckedUpdateManyWithoutFollowerNestedInput
    patch?: patchUncheckedUpdateManyWithoutUserNestedInput
    patch_comment?: patch_commentUncheckedUpdateManyWithoutUserNestedInput
    patch_resource?: patch_resourceUncheckedUpdateManyWithoutUserNestedInput
    send_message?: user_messageUncheckedUpdateManyWithoutSenderNestedInput
    receive_message?: user_messageUncheckedUpdateManyWithoutRecipientNestedInput
  }

  export type patchUpsertWithoutCharactersInput = {
    update: XOR<patchUpdateWithoutCharactersInput, patchUncheckedUpdateWithoutCharactersInput>
    create: XOR<patchCreateWithoutCharactersInput, patchUncheckedCreateWithoutCharactersInput>
    where?: patchWhereInput
  }

  export type patchUpdateToOneWithWhereWithoutCharactersInput = {
    where?: patchWhereInput
    data: XOR<patchUpdateWithoutCharactersInput, patchUncheckedUpdateWithoutCharactersInput>
  }

  export type patchUpdateWithoutCharactersInput = {
    unique_id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    vndb_id?: NullableStringFieldUpdateOperationsInput | string | null
    banner?: StringFieldUpdateOperationsInput | string
    introduction?: StringFieldUpdateOperationsInput | string
    released?: StringFieldUpdateOperationsInput | string
    content_limit?: StringFieldUpdateOperationsInput | string
    status?: IntFieldUpdateOperationsInput | number
    download?: IntFieldUpdateOperationsInput | number
    view?: IntFieldUpdateOperationsInput | number
    resource_update_time?: DateTimeFieldUpdateOperationsInput | Date | string
    type?: patchUpdatetypeInput | string[]
    language?: patchUpdatelanguageInput | string[]
    engine?: patchUpdateengineInput | string[]
    platform?: patchUpdateplatformInput | string[]
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: userUpdateOneRequiredWithoutPatchNestedInput
    alias?: patch_aliasUpdateManyWithoutPatchNestedInput
    tag?: patch_tag_relationUpdateManyWithoutPatchNestedInput
    favorite_folder?: user_patch_favorite_folder_relationUpdateManyWithoutPatchNestedInput
    resource?: patch_resourceUpdateManyWithoutPatchNestedInput
    comment?: patch_commentUpdateManyWithoutPatchNestedInput
  }

  export type patchUncheckedUpdateWithoutCharactersInput = {
    id?: IntFieldUpdateOperationsInput | number
    unique_id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    vndb_id?: NullableStringFieldUpdateOperationsInput | string | null
    banner?: StringFieldUpdateOperationsInput | string
    introduction?: StringFieldUpdateOperationsInput | string
    released?: StringFieldUpdateOperationsInput | string
    content_limit?: StringFieldUpdateOperationsInput | string
    status?: IntFieldUpdateOperationsInput | number
    download?: IntFieldUpdateOperationsInput | number
    view?: IntFieldUpdateOperationsInput | number
    resource_update_time?: DateTimeFieldUpdateOperationsInput | Date | string
    type?: patchUpdatetypeInput | string[]
    language?: patchUpdatelanguageInput | string[]
    engine?: patchUpdateengineInput | string[]
    platform?: patchUpdateplatformInput | string[]
    user_id?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    alias?: patch_aliasUncheckedUpdateManyWithoutPatchNestedInput
    tag?: patch_tag_relationUncheckedUpdateManyWithoutPatchNestedInput
    favorite_folder?: user_patch_favorite_folder_relationUncheckedUpdateManyWithoutPatchNestedInput
    resource?: patch_resourceUncheckedUpdateManyWithoutPatchNestedInput
    comment?: patch_commentUncheckedUpdateManyWithoutPatchNestedInput
  }

  export type admin_logCreateManyUserInput = {
    id?: number
    type: string
    content: string
    status?: number
    created?: Date | string
    updated?: Date | string
  }

  export type patch_tagCreateManyUserInput = {
    id?: number
    name: string
    introduction?: string
    count?: number
    alias?: patch_tagCreatealiasInput | string[]
    created?: Date | string
    updated?: Date | string
  }

  export type user_patch_comment_like_relationCreateManyUserInput = {
    id?: number
    comment_id: number
    created?: Date | string
    updated?: Date | string
  }

  export type user_patch_resource_like_relationCreateManyUserInput = {
    id?: number
    resource_id: number
    created?: Date | string
    updated?: Date | string
  }

  export type user_patch_favorite_folderCreateManyUserInput = {
    id?: number
    name: string
    description?: string
    is_public?: boolean
    created?: Date | string
    updated?: Date | string
  }

  export type user_follow_relationCreateManyFollowingInput = {
    id?: number
    follower_id: number
  }

  export type user_follow_relationCreateManyFollowerInput = {
    id?: number
    following_id: number
  }

  export type patchCreateManyUserInput = {
    id?: number
    unique_id: string
    name: string
    vndb_id?: string | null
    banner?: string
    introduction?: string
    released?: string
    content_limit?: string
    status?: number
    download?: number
    view?: number
    resource_update_time?: Date | string
    type?: patchCreatetypeInput | string[]
    language?: patchCreatelanguageInput | string[]
    engine?: patchCreateengineInput | string[]
    platform?: patchCreateplatformInput | string[]
    created?: Date | string
    updated?: Date | string
  }

  export type patch_commentCreateManyUserInput = {
    id?: number
    content?: string
    edit?: string
    parent_id?: number | null
    patch_id: number
    created?: Date | string
    updated?: Date | string
  }

  export type patch_resourceCreateManyUserInput = {
    id?: number
    storage: string
    section: string
    name?: string
    size?: string
    code?: string
    password?: string
    note?: string
    hash?: string
    content?: string
    type?: patch_resourceCreatetypeInput | string[]
    language?: patch_resourceCreatelanguageInput | string[]
    platform?: patch_resourceCreateplatformInput | string[]
    download?: number
    status?: number
    patch_id: number
    created?: Date | string
    updated?: Date | string
  }

  export type patch_characterCreateManyUserInput = {
    id?: number
    name: string
    image: string
    description?: string
    status?: number
    traits?: patch_characterCreatetraitsInput | string[]
    voice_actor?: string
    alias?: patch_characterCreatealiasInput | string[]
    age?: string
    height?: string
    birthday?: string
    blood_type?: string
    three_sizes?: string
    hobby?: patch_characterCreatehobbyInput | string[]
    favorite?: patch_characterCreatefavoriteInput | string[]
    role_type?: string
    personality?: patch_characterCreatepersonalityInput | string[]
    relationship?: string
    is_latest?: boolean
    original_id?: number | null
    patch_id: number
    created?: Date | string
    updated?: Date | string
  }

  export type user_messageCreateManySenderInput = {
    id?: number
    type: string
    content: string
    status?: number
    link?: string
    recipient_id?: number | null
    created?: Date | string
    updated?: Date | string
  }

  export type user_messageCreateManyRecipientInput = {
    id?: number
    type: string
    content: string
    status?: number
    link?: string
    sender_id?: number | null
    created?: Date | string
    updated?: Date | string
  }

  export type admin_logUpdateWithoutUserInput = {
    type?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    status?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type admin_logUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    status?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type admin_logUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    status?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type patch_tagUpdateWithoutUserInput = {
    name?: StringFieldUpdateOperationsInput | string
    introduction?: StringFieldUpdateOperationsInput | string
    count?: IntFieldUpdateOperationsInput | number
    alias?: patch_tagUpdatealiasInput | string[]
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    patch_relation?: patch_tag_relationUpdateManyWithoutTagNestedInput
  }

  export type patch_tagUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    introduction?: StringFieldUpdateOperationsInput | string
    count?: IntFieldUpdateOperationsInput | number
    alias?: patch_tagUpdatealiasInput | string[]
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    patch_relation?: patch_tag_relationUncheckedUpdateManyWithoutTagNestedInput
  }

  export type patch_tagUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    introduction?: StringFieldUpdateOperationsInput | string
    count?: IntFieldUpdateOperationsInput | number
    alias?: patch_tagUpdatealiasInput | string[]
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_patch_comment_like_relationUpdateWithoutUserInput = {
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    comment?: patch_commentUpdateOneRequiredWithoutLike_byNestedInput
  }

  export type user_patch_comment_like_relationUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    comment_id?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_patch_comment_like_relationUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    comment_id?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_patch_resource_like_relationUpdateWithoutUserInput = {
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    resource?: patch_resourceUpdateOneRequiredWithoutLike_byNestedInput
  }

  export type user_patch_resource_like_relationUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    resource_id?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_patch_resource_like_relationUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    resource_id?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_patch_favorite_folderUpdateWithoutUserInput = {
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    is_public?: BoolFieldUpdateOperationsInput | boolean
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    patch?: user_patch_favorite_folder_relationUpdateManyWithoutFolderNestedInput
  }

  export type user_patch_favorite_folderUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    is_public?: BoolFieldUpdateOperationsInput | boolean
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    patch?: user_patch_favorite_folder_relationUncheckedUpdateManyWithoutFolderNestedInput
  }

  export type user_patch_favorite_folderUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    is_public?: BoolFieldUpdateOperationsInput | boolean
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_follow_relationUpdateWithoutFollowingInput = {
    follower?: userUpdateOneRequiredWithoutFollowerNestedInput
  }

  export type user_follow_relationUncheckedUpdateWithoutFollowingInput = {
    id?: IntFieldUpdateOperationsInput | number
    follower_id?: IntFieldUpdateOperationsInput | number
  }

  export type user_follow_relationUncheckedUpdateManyWithoutFollowingInput = {
    id?: IntFieldUpdateOperationsInput | number
    follower_id?: IntFieldUpdateOperationsInput | number
  }

  export type user_follow_relationUpdateWithoutFollowerInput = {
    following?: userUpdateOneRequiredWithoutFollowingNestedInput
  }

  export type user_follow_relationUncheckedUpdateWithoutFollowerInput = {
    id?: IntFieldUpdateOperationsInput | number
    following_id?: IntFieldUpdateOperationsInput | number
  }

  export type user_follow_relationUncheckedUpdateManyWithoutFollowerInput = {
    id?: IntFieldUpdateOperationsInput | number
    following_id?: IntFieldUpdateOperationsInput | number
  }

  export type patchUpdateWithoutUserInput = {
    unique_id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    vndb_id?: NullableStringFieldUpdateOperationsInput | string | null
    banner?: StringFieldUpdateOperationsInput | string
    introduction?: StringFieldUpdateOperationsInput | string
    released?: StringFieldUpdateOperationsInput | string
    content_limit?: StringFieldUpdateOperationsInput | string
    status?: IntFieldUpdateOperationsInput | number
    download?: IntFieldUpdateOperationsInput | number
    view?: IntFieldUpdateOperationsInput | number
    resource_update_time?: DateTimeFieldUpdateOperationsInput | Date | string
    type?: patchUpdatetypeInput | string[]
    language?: patchUpdatelanguageInput | string[]
    engine?: patchUpdateengineInput | string[]
    platform?: patchUpdateplatformInput | string[]
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    alias?: patch_aliasUpdateManyWithoutPatchNestedInput
    tag?: patch_tag_relationUpdateManyWithoutPatchNestedInput
    favorite_folder?: user_patch_favorite_folder_relationUpdateManyWithoutPatchNestedInput
    resource?: patch_resourceUpdateManyWithoutPatchNestedInput
    comment?: patch_commentUpdateManyWithoutPatchNestedInput
    characters?: patch_characterUpdateManyWithoutPatchNestedInput
  }

  export type patchUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    unique_id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    vndb_id?: NullableStringFieldUpdateOperationsInput | string | null
    banner?: StringFieldUpdateOperationsInput | string
    introduction?: StringFieldUpdateOperationsInput | string
    released?: StringFieldUpdateOperationsInput | string
    content_limit?: StringFieldUpdateOperationsInput | string
    status?: IntFieldUpdateOperationsInput | number
    download?: IntFieldUpdateOperationsInput | number
    view?: IntFieldUpdateOperationsInput | number
    resource_update_time?: DateTimeFieldUpdateOperationsInput | Date | string
    type?: patchUpdatetypeInput | string[]
    language?: patchUpdatelanguageInput | string[]
    engine?: patchUpdateengineInput | string[]
    platform?: patchUpdateplatformInput | string[]
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    alias?: patch_aliasUncheckedUpdateManyWithoutPatchNestedInput
    tag?: patch_tag_relationUncheckedUpdateManyWithoutPatchNestedInput
    favorite_folder?: user_patch_favorite_folder_relationUncheckedUpdateManyWithoutPatchNestedInput
    resource?: patch_resourceUncheckedUpdateManyWithoutPatchNestedInput
    comment?: patch_commentUncheckedUpdateManyWithoutPatchNestedInput
    characters?: patch_characterUncheckedUpdateManyWithoutPatchNestedInput
  }

  export type patchUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    unique_id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    vndb_id?: NullableStringFieldUpdateOperationsInput | string | null
    banner?: StringFieldUpdateOperationsInput | string
    introduction?: StringFieldUpdateOperationsInput | string
    released?: StringFieldUpdateOperationsInput | string
    content_limit?: StringFieldUpdateOperationsInput | string
    status?: IntFieldUpdateOperationsInput | number
    download?: IntFieldUpdateOperationsInput | number
    view?: IntFieldUpdateOperationsInput | number
    resource_update_time?: DateTimeFieldUpdateOperationsInput | Date | string
    type?: patchUpdatetypeInput | string[]
    language?: patchUpdatelanguageInput | string[]
    engine?: patchUpdateengineInput | string[]
    platform?: patchUpdateplatformInput | string[]
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type patch_commentUpdateWithoutUserInput = {
    content?: StringFieldUpdateOperationsInput | string
    edit?: StringFieldUpdateOperationsInput | string
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    like_by?: user_patch_comment_like_relationUpdateManyWithoutCommentNestedInput
    reply?: patch_commentUpdateManyWithoutParentNestedInput
    parent?: patch_commentUpdateOneWithoutReplyNestedInput
    patch?: patchUpdateOneRequiredWithoutCommentNestedInput
  }

  export type patch_commentUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    edit?: StringFieldUpdateOperationsInput | string
    parent_id?: NullableIntFieldUpdateOperationsInput | number | null
    patch_id?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    like_by?: user_patch_comment_like_relationUncheckedUpdateManyWithoutCommentNestedInput
    reply?: patch_commentUncheckedUpdateManyWithoutParentNestedInput
  }

  export type patch_commentUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    edit?: StringFieldUpdateOperationsInput | string
    parent_id?: NullableIntFieldUpdateOperationsInput | number | null
    patch_id?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type patch_resourceUpdateWithoutUserInput = {
    storage?: StringFieldUpdateOperationsInput | string
    section?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    size?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    note?: StringFieldUpdateOperationsInput | string
    hash?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    type?: patch_resourceUpdatetypeInput | string[]
    language?: patch_resourceUpdatelanguageInput | string[]
    platform?: patch_resourceUpdateplatformInput | string[]
    download?: IntFieldUpdateOperationsInput | number
    status?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    like_by?: user_patch_resource_like_relationUpdateManyWithoutResourceNestedInput
    patch?: patchUpdateOneRequiredWithoutResourceNestedInput
  }

  export type patch_resourceUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    storage?: StringFieldUpdateOperationsInput | string
    section?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    size?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    note?: StringFieldUpdateOperationsInput | string
    hash?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    type?: patch_resourceUpdatetypeInput | string[]
    language?: patch_resourceUpdatelanguageInput | string[]
    platform?: patch_resourceUpdateplatformInput | string[]
    download?: IntFieldUpdateOperationsInput | number
    status?: IntFieldUpdateOperationsInput | number
    patch_id?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    like_by?: user_patch_resource_like_relationUncheckedUpdateManyWithoutResourceNestedInput
  }

  export type patch_resourceUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    storage?: StringFieldUpdateOperationsInput | string
    section?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    size?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    note?: StringFieldUpdateOperationsInput | string
    hash?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    type?: patch_resourceUpdatetypeInput | string[]
    language?: patch_resourceUpdatelanguageInput | string[]
    platform?: patch_resourceUpdateplatformInput | string[]
    download?: IntFieldUpdateOperationsInput | number
    status?: IntFieldUpdateOperationsInput | number
    patch_id?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type patch_characterUpdateWithoutUserInput = {
    name?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    status?: IntFieldUpdateOperationsInput | number
    traits?: patch_characterUpdatetraitsInput | string[]
    voice_actor?: StringFieldUpdateOperationsInput | string
    alias?: patch_characterUpdatealiasInput | string[]
    age?: StringFieldUpdateOperationsInput | string
    height?: StringFieldUpdateOperationsInput | string
    birthday?: StringFieldUpdateOperationsInput | string
    blood_type?: StringFieldUpdateOperationsInput | string
    three_sizes?: StringFieldUpdateOperationsInput | string
    hobby?: patch_characterUpdatehobbyInput | string[]
    favorite?: patch_characterUpdatefavoriteInput | string[]
    role_type?: StringFieldUpdateOperationsInput | string
    personality?: patch_characterUpdatepersonalityInput | string[]
    relationship?: StringFieldUpdateOperationsInput | string
    is_latest?: BoolFieldUpdateOperationsInput | boolean
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    original?: patch_characterUpdateOneWithoutNew_versionsNestedInput
    new_versions?: patch_characterUpdateManyWithoutOriginalNestedInput
    patch?: patchUpdateOneRequiredWithoutCharactersNestedInput
  }

  export type patch_characterUncheckedUpdateWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    status?: IntFieldUpdateOperationsInput | number
    traits?: patch_characterUpdatetraitsInput | string[]
    voice_actor?: StringFieldUpdateOperationsInput | string
    alias?: patch_characterUpdatealiasInput | string[]
    age?: StringFieldUpdateOperationsInput | string
    height?: StringFieldUpdateOperationsInput | string
    birthday?: StringFieldUpdateOperationsInput | string
    blood_type?: StringFieldUpdateOperationsInput | string
    three_sizes?: StringFieldUpdateOperationsInput | string
    hobby?: patch_characterUpdatehobbyInput | string[]
    favorite?: patch_characterUpdatefavoriteInput | string[]
    role_type?: StringFieldUpdateOperationsInput | string
    personality?: patch_characterUpdatepersonalityInput | string[]
    relationship?: StringFieldUpdateOperationsInput | string
    is_latest?: BoolFieldUpdateOperationsInput | boolean
    original_id?: NullableIntFieldUpdateOperationsInput | number | null
    patch_id?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    new_versions?: patch_characterUncheckedUpdateManyWithoutOriginalNestedInput
  }

  export type patch_characterUncheckedUpdateManyWithoutUserInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    status?: IntFieldUpdateOperationsInput | number
    traits?: patch_characterUpdatetraitsInput | string[]
    voice_actor?: StringFieldUpdateOperationsInput | string
    alias?: patch_characterUpdatealiasInput | string[]
    age?: StringFieldUpdateOperationsInput | string
    height?: StringFieldUpdateOperationsInput | string
    birthday?: StringFieldUpdateOperationsInput | string
    blood_type?: StringFieldUpdateOperationsInput | string
    three_sizes?: StringFieldUpdateOperationsInput | string
    hobby?: patch_characterUpdatehobbyInput | string[]
    favorite?: patch_characterUpdatefavoriteInput | string[]
    role_type?: StringFieldUpdateOperationsInput | string
    personality?: patch_characterUpdatepersonalityInput | string[]
    relationship?: StringFieldUpdateOperationsInput | string
    is_latest?: BoolFieldUpdateOperationsInput | boolean
    original_id?: NullableIntFieldUpdateOperationsInput | number | null
    patch_id?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_messageUpdateWithoutSenderInput = {
    type?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    status?: IntFieldUpdateOperationsInput | number
    link?: StringFieldUpdateOperationsInput | string
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    recipient?: userUpdateOneWithoutReceive_messageNestedInput
  }

  export type user_messageUncheckedUpdateWithoutSenderInput = {
    id?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    status?: IntFieldUpdateOperationsInput | number
    link?: StringFieldUpdateOperationsInput | string
    recipient_id?: NullableIntFieldUpdateOperationsInput | number | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_messageUncheckedUpdateManyWithoutSenderInput = {
    id?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    status?: IntFieldUpdateOperationsInput | number
    link?: StringFieldUpdateOperationsInput | string
    recipient_id?: NullableIntFieldUpdateOperationsInput | number | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_messageUpdateWithoutRecipientInput = {
    type?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    status?: IntFieldUpdateOperationsInput | number
    link?: StringFieldUpdateOperationsInput | string
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    sender?: userUpdateOneWithoutSend_messageNestedInput
  }

  export type user_messageUncheckedUpdateWithoutRecipientInput = {
    id?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    status?: IntFieldUpdateOperationsInput | number
    link?: StringFieldUpdateOperationsInput | string
    sender_id?: NullableIntFieldUpdateOperationsInput | number | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_messageUncheckedUpdateManyWithoutRecipientInput = {
    id?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    status?: IntFieldUpdateOperationsInput | number
    link?: StringFieldUpdateOperationsInput | string
    sender_id?: NullableIntFieldUpdateOperationsInput | number | null
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_patch_favorite_folder_relationCreateManyFolderInput = {
    id?: number
    patch_id: number
    created?: Date | string
    updated?: Date | string
  }

  export type user_patch_favorite_folder_relationUpdateWithoutFolderInput = {
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    patch?: patchUpdateOneRequiredWithoutFavorite_folderNestedInput
  }

  export type user_patch_favorite_folder_relationUncheckedUpdateWithoutFolderInput = {
    id?: IntFieldUpdateOperationsInput | number
    patch_id?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_patch_favorite_folder_relationUncheckedUpdateManyWithoutFolderInput = {
    id?: IntFieldUpdateOperationsInput | number
    patch_id?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type patch_aliasCreateManyPatchInput = {
    id?: number
    name: string
    created?: Date | string
    updated?: Date | string
  }

  export type patch_tag_relationCreateManyPatchInput = {
    id?: number
    tag_id: number
    created?: Date | string
    updated?: Date | string
  }

  export type user_patch_favorite_folder_relationCreateManyPatchInput = {
    id?: number
    folder_id: number
    created?: Date | string
    updated?: Date | string
  }

  export type patch_resourceCreateManyPatchInput = {
    id?: number
    storage: string
    section: string
    name?: string
    size?: string
    code?: string
    password?: string
    note?: string
    hash?: string
    content?: string
    type?: patch_resourceCreatetypeInput | string[]
    language?: patch_resourceCreatelanguageInput | string[]
    platform?: patch_resourceCreateplatformInput | string[]
    download?: number
    status?: number
    user_id: number
    created?: Date | string
    updated?: Date | string
  }

  export type patch_commentCreateManyPatchInput = {
    id?: number
    content?: string
    edit?: string
    parent_id?: number | null
    user_id: number
    created?: Date | string
    updated?: Date | string
  }

  export type patch_characterCreateManyPatchInput = {
    id?: number
    name: string
    image: string
    description?: string
    status?: number
    traits?: patch_characterCreatetraitsInput | string[]
    voice_actor?: string
    alias?: patch_characterCreatealiasInput | string[]
    age?: string
    height?: string
    birthday?: string
    blood_type?: string
    three_sizes?: string
    hobby?: patch_characterCreatehobbyInput | string[]
    favorite?: patch_characterCreatefavoriteInput | string[]
    role_type?: string
    personality?: patch_characterCreatepersonalityInput | string[]
    relationship?: string
    is_latest?: boolean
    original_id?: number | null
    user_id: number
    created?: Date | string
    updated?: Date | string
  }

  export type patch_aliasUpdateWithoutPatchInput = {
    name?: StringFieldUpdateOperationsInput | string
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type patch_aliasUncheckedUpdateWithoutPatchInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type patch_aliasUncheckedUpdateManyWithoutPatchInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type patch_tag_relationUpdateWithoutPatchInput = {
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    tag?: patch_tagUpdateOneRequiredWithoutPatch_relationNestedInput
  }

  export type patch_tag_relationUncheckedUpdateWithoutPatchInput = {
    id?: IntFieldUpdateOperationsInput | number
    tag_id?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type patch_tag_relationUncheckedUpdateManyWithoutPatchInput = {
    id?: IntFieldUpdateOperationsInput | number
    tag_id?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_patch_favorite_folder_relationUpdateWithoutPatchInput = {
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    folder?: user_patch_favorite_folderUpdateOneRequiredWithoutPatchNestedInput
  }

  export type user_patch_favorite_folder_relationUncheckedUpdateWithoutPatchInput = {
    id?: IntFieldUpdateOperationsInput | number
    folder_id?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_patch_favorite_folder_relationUncheckedUpdateManyWithoutPatchInput = {
    id?: IntFieldUpdateOperationsInput | number
    folder_id?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type patch_resourceUpdateWithoutPatchInput = {
    storage?: StringFieldUpdateOperationsInput | string
    section?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    size?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    note?: StringFieldUpdateOperationsInput | string
    hash?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    type?: patch_resourceUpdatetypeInput | string[]
    language?: patch_resourceUpdatelanguageInput | string[]
    platform?: patch_resourceUpdateplatformInput | string[]
    download?: IntFieldUpdateOperationsInput | number
    status?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    like_by?: user_patch_resource_like_relationUpdateManyWithoutResourceNestedInput
    user?: userUpdateOneRequiredWithoutPatch_resourceNestedInput
  }

  export type patch_resourceUncheckedUpdateWithoutPatchInput = {
    id?: IntFieldUpdateOperationsInput | number
    storage?: StringFieldUpdateOperationsInput | string
    section?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    size?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    note?: StringFieldUpdateOperationsInput | string
    hash?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    type?: patch_resourceUpdatetypeInput | string[]
    language?: patch_resourceUpdatelanguageInput | string[]
    platform?: patch_resourceUpdateplatformInput | string[]
    download?: IntFieldUpdateOperationsInput | number
    status?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    like_by?: user_patch_resource_like_relationUncheckedUpdateManyWithoutResourceNestedInput
  }

  export type patch_resourceUncheckedUpdateManyWithoutPatchInput = {
    id?: IntFieldUpdateOperationsInput | number
    storage?: StringFieldUpdateOperationsInput | string
    section?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    size?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    note?: StringFieldUpdateOperationsInput | string
    hash?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    type?: patch_resourceUpdatetypeInput | string[]
    language?: patch_resourceUpdatelanguageInput | string[]
    platform?: patch_resourceUpdateplatformInput | string[]
    download?: IntFieldUpdateOperationsInput | number
    status?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type patch_commentUpdateWithoutPatchInput = {
    content?: StringFieldUpdateOperationsInput | string
    edit?: StringFieldUpdateOperationsInput | string
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    like_by?: user_patch_comment_like_relationUpdateManyWithoutCommentNestedInput
    reply?: patch_commentUpdateManyWithoutParentNestedInput
    parent?: patch_commentUpdateOneWithoutReplyNestedInput
    user?: userUpdateOneRequiredWithoutPatch_commentNestedInput
  }

  export type patch_commentUncheckedUpdateWithoutPatchInput = {
    id?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    edit?: StringFieldUpdateOperationsInput | string
    parent_id?: NullableIntFieldUpdateOperationsInput | number | null
    user_id?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    like_by?: user_patch_comment_like_relationUncheckedUpdateManyWithoutCommentNestedInput
    reply?: patch_commentUncheckedUpdateManyWithoutParentNestedInput
  }

  export type patch_commentUncheckedUpdateManyWithoutPatchInput = {
    id?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    edit?: StringFieldUpdateOperationsInput | string
    parent_id?: NullableIntFieldUpdateOperationsInput | number | null
    user_id?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type patch_characterUpdateWithoutPatchInput = {
    name?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    status?: IntFieldUpdateOperationsInput | number
    traits?: patch_characterUpdatetraitsInput | string[]
    voice_actor?: StringFieldUpdateOperationsInput | string
    alias?: patch_characterUpdatealiasInput | string[]
    age?: StringFieldUpdateOperationsInput | string
    height?: StringFieldUpdateOperationsInput | string
    birthday?: StringFieldUpdateOperationsInput | string
    blood_type?: StringFieldUpdateOperationsInput | string
    three_sizes?: StringFieldUpdateOperationsInput | string
    hobby?: patch_characterUpdatehobbyInput | string[]
    favorite?: patch_characterUpdatefavoriteInput | string[]
    role_type?: StringFieldUpdateOperationsInput | string
    personality?: patch_characterUpdatepersonalityInput | string[]
    relationship?: StringFieldUpdateOperationsInput | string
    is_latest?: BoolFieldUpdateOperationsInput | boolean
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    original?: patch_characterUpdateOneWithoutNew_versionsNestedInput
    new_versions?: patch_characterUpdateManyWithoutOriginalNestedInput
    user?: userUpdateOneRequiredWithoutPatch_characterNestedInput
  }

  export type patch_characterUncheckedUpdateWithoutPatchInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    status?: IntFieldUpdateOperationsInput | number
    traits?: patch_characterUpdatetraitsInput | string[]
    voice_actor?: StringFieldUpdateOperationsInput | string
    alias?: patch_characterUpdatealiasInput | string[]
    age?: StringFieldUpdateOperationsInput | string
    height?: StringFieldUpdateOperationsInput | string
    birthday?: StringFieldUpdateOperationsInput | string
    blood_type?: StringFieldUpdateOperationsInput | string
    three_sizes?: StringFieldUpdateOperationsInput | string
    hobby?: patch_characterUpdatehobbyInput | string[]
    favorite?: patch_characterUpdatefavoriteInput | string[]
    role_type?: StringFieldUpdateOperationsInput | string
    personality?: patch_characterUpdatepersonalityInput | string[]
    relationship?: StringFieldUpdateOperationsInput | string
    is_latest?: BoolFieldUpdateOperationsInput | boolean
    original_id?: NullableIntFieldUpdateOperationsInput | number | null
    user_id?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    new_versions?: patch_characterUncheckedUpdateManyWithoutOriginalNestedInput
  }

  export type patch_characterUncheckedUpdateManyWithoutPatchInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    status?: IntFieldUpdateOperationsInput | number
    traits?: patch_characterUpdatetraitsInput | string[]
    voice_actor?: StringFieldUpdateOperationsInput | string
    alias?: patch_characterUpdatealiasInput | string[]
    age?: StringFieldUpdateOperationsInput | string
    height?: StringFieldUpdateOperationsInput | string
    birthday?: StringFieldUpdateOperationsInput | string
    blood_type?: StringFieldUpdateOperationsInput | string
    three_sizes?: StringFieldUpdateOperationsInput | string
    hobby?: patch_characterUpdatehobbyInput | string[]
    favorite?: patch_characterUpdatefavoriteInput | string[]
    role_type?: StringFieldUpdateOperationsInput | string
    personality?: patch_characterUpdatepersonalityInput | string[]
    relationship?: StringFieldUpdateOperationsInput | string
    is_latest?: BoolFieldUpdateOperationsInput | boolean
    original_id?: NullableIntFieldUpdateOperationsInput | number | null
    user_id?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type patch_tag_relationCreateManyTagInput = {
    id?: number
    patch_id: number
    created?: Date | string
    updated?: Date | string
  }

  export type patch_tag_relationUpdateWithoutTagInput = {
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    patch?: patchUpdateOneRequiredWithoutTagNestedInput
  }

  export type patch_tag_relationUncheckedUpdateWithoutTagInput = {
    id?: IntFieldUpdateOperationsInput | number
    patch_id?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type patch_tag_relationUncheckedUpdateManyWithoutTagInput = {
    id?: IntFieldUpdateOperationsInput | number
    patch_id?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_patch_resource_like_relationCreateManyResourceInput = {
    id?: number
    user_id: number
    created?: Date | string
    updated?: Date | string
  }

  export type user_patch_resource_like_relationUpdateWithoutResourceInput = {
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: userUpdateOneRequiredWithoutPatch_resource_likeNestedInput
  }

  export type user_patch_resource_like_relationUncheckedUpdateWithoutResourceInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_patch_resource_like_relationUncheckedUpdateManyWithoutResourceInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_patch_comment_like_relationCreateManyCommentInput = {
    id?: number
    user_id: number
    created?: Date | string
    updated?: Date | string
  }

  export type patch_commentCreateManyParentInput = {
    id?: number
    content?: string
    edit?: string
    user_id: number
    patch_id: number
    created?: Date | string
    updated?: Date | string
  }

  export type user_patch_comment_like_relationUpdateWithoutCommentInput = {
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: userUpdateOneRequiredWithoutPatch_comment_likeNestedInput
  }

  export type user_patch_comment_like_relationUncheckedUpdateWithoutCommentInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_patch_comment_like_relationUncheckedUpdateManyWithoutCommentInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type patch_commentUpdateWithoutParentInput = {
    content?: StringFieldUpdateOperationsInput | string
    edit?: StringFieldUpdateOperationsInput | string
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    like_by?: user_patch_comment_like_relationUpdateManyWithoutCommentNestedInput
    reply?: patch_commentUpdateManyWithoutParentNestedInput
    user?: userUpdateOneRequiredWithoutPatch_commentNestedInput
    patch?: patchUpdateOneRequiredWithoutCommentNestedInput
  }

  export type patch_commentUncheckedUpdateWithoutParentInput = {
    id?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    edit?: StringFieldUpdateOperationsInput | string
    user_id?: IntFieldUpdateOperationsInput | number
    patch_id?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    like_by?: user_patch_comment_like_relationUncheckedUpdateManyWithoutCommentNestedInput
    reply?: patch_commentUncheckedUpdateManyWithoutParentNestedInput
  }

  export type patch_commentUncheckedUpdateManyWithoutParentInput = {
    id?: IntFieldUpdateOperationsInput | number
    content?: StringFieldUpdateOperationsInput | string
    edit?: StringFieldUpdateOperationsInput | string
    user_id?: IntFieldUpdateOperationsInput | number
    patch_id?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type patch_characterCreateManyOriginalInput = {
    id?: number
    name: string
    image: string
    description?: string
    status?: number
    traits?: patch_characterCreatetraitsInput | string[]
    voice_actor?: string
    alias?: patch_characterCreatealiasInput | string[]
    age?: string
    height?: string
    birthday?: string
    blood_type?: string
    three_sizes?: string
    hobby?: patch_characterCreatehobbyInput | string[]
    favorite?: patch_characterCreatefavoriteInput | string[]
    role_type?: string
    personality?: patch_characterCreatepersonalityInput | string[]
    relationship?: string
    is_latest?: boolean
    user_id: number
    patch_id: number
    created?: Date | string
    updated?: Date | string
  }

  export type patch_characterUpdateWithoutOriginalInput = {
    name?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    status?: IntFieldUpdateOperationsInput | number
    traits?: patch_characterUpdatetraitsInput | string[]
    voice_actor?: StringFieldUpdateOperationsInput | string
    alias?: patch_characterUpdatealiasInput | string[]
    age?: StringFieldUpdateOperationsInput | string
    height?: StringFieldUpdateOperationsInput | string
    birthday?: StringFieldUpdateOperationsInput | string
    blood_type?: StringFieldUpdateOperationsInput | string
    three_sizes?: StringFieldUpdateOperationsInput | string
    hobby?: patch_characterUpdatehobbyInput | string[]
    favorite?: patch_characterUpdatefavoriteInput | string[]
    role_type?: StringFieldUpdateOperationsInput | string
    personality?: patch_characterUpdatepersonalityInput | string[]
    relationship?: StringFieldUpdateOperationsInput | string
    is_latest?: BoolFieldUpdateOperationsInput | boolean
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    new_versions?: patch_characterUpdateManyWithoutOriginalNestedInput
    user?: userUpdateOneRequiredWithoutPatch_characterNestedInput
    patch?: patchUpdateOneRequiredWithoutCharactersNestedInput
  }

  export type patch_characterUncheckedUpdateWithoutOriginalInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    status?: IntFieldUpdateOperationsInput | number
    traits?: patch_characterUpdatetraitsInput | string[]
    voice_actor?: StringFieldUpdateOperationsInput | string
    alias?: patch_characterUpdatealiasInput | string[]
    age?: StringFieldUpdateOperationsInput | string
    height?: StringFieldUpdateOperationsInput | string
    birthday?: StringFieldUpdateOperationsInput | string
    blood_type?: StringFieldUpdateOperationsInput | string
    three_sizes?: StringFieldUpdateOperationsInput | string
    hobby?: patch_characterUpdatehobbyInput | string[]
    favorite?: patch_characterUpdatefavoriteInput | string[]
    role_type?: StringFieldUpdateOperationsInput | string
    personality?: patch_characterUpdatepersonalityInput | string[]
    relationship?: StringFieldUpdateOperationsInput | string
    is_latest?: BoolFieldUpdateOperationsInput | boolean
    user_id?: IntFieldUpdateOperationsInput | number
    patch_id?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
    new_versions?: patch_characterUncheckedUpdateManyWithoutOriginalNestedInput
  }

  export type patch_characterUncheckedUpdateManyWithoutOriginalInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    image?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    status?: IntFieldUpdateOperationsInput | number
    traits?: patch_characterUpdatetraitsInput | string[]
    voice_actor?: StringFieldUpdateOperationsInput | string
    alias?: patch_characterUpdatealiasInput | string[]
    age?: StringFieldUpdateOperationsInput | string
    height?: StringFieldUpdateOperationsInput | string
    birthday?: StringFieldUpdateOperationsInput | string
    blood_type?: StringFieldUpdateOperationsInput | string
    three_sizes?: StringFieldUpdateOperationsInput | string
    hobby?: patch_characterUpdatehobbyInput | string[]
    favorite?: patch_characterUpdatefavoriteInput | string[]
    role_type?: StringFieldUpdateOperationsInput | string
    personality?: patch_characterUpdatepersonalityInput | string[]
    relationship?: StringFieldUpdateOperationsInput | string
    is_latest?: BoolFieldUpdateOperationsInput | boolean
    user_id?: IntFieldUpdateOperationsInput | number
    patch_id?: IntFieldUpdateOperationsInput | number
    created?: DateTimeFieldUpdateOperationsInput | Date | string
    updated?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}